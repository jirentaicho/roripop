__NUXT_JSONP__("/post/1287", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){return {data:[{post:{id:1287,date:l,date_gmt:m,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1287"},modified:l,modified_gmt:m,slug:"docker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99",status:"publish",type:"post",link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F22\u002Fdocker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F",title:{rendered:"Dockerについて勉強したのでメモします"},content:{rendered:"\n\u003Cp\u003Eドラゴン桜という面白いドラマで、教え合う勉強法というのをやっていたので、勉強したことを教えるつもりで記事を書いてみます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事に書いてあること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003EDockerとはなんですか？\u003C\u002Fli\u003E\u003Cli\u003Eイメージとコンテナについて軽く触れます\u003C\u002Fli\u003E\u003Cli\u003EDockerfileでイメージを作ってみます\u003C\u002Fli\u003E\u003Cli\u003Eコンテナに入ってみます\u003C\u002Fli\u003E\u003Cli\u003EホストPCとコンテナでファイルを共有します\u003C\u002Fli\u003E\u003Cli\u003Enetworkを使ってコンテナ間で通信します\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E自分のワードプレスやLaravelなどの開発環境には、Dockerを使っています。\u003Cbr \u002F\u003E仕事でもDockerを使っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは具体的にDockerって何？ってなると「ぐぬぬ」としか言えないので、勉強したことをまとめます。間違っていたらご指摘いただけると嬉しいです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerとはなにか\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E昔よく使っていたVirtualBoxでは、自分のパソコンに仮想コンピュータを作成して、その仮想コンピュータの中でOSを動かして、アプリケーションなどを動かしていました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerは自分のパソコンのカーネル(OSを動かす中核的なソフトウェア)を利用するコンテナと呼ばれるものを利用して、アプリケーションを動かします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E別のOSを動かすというと、相当ハードに見えますが、Dockerではそういった仮想コンピュータの中で動かすOS(ゲストOS)がないため、軽量快速というわけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerImageとコンテナとは何か\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EDockerImageとはコンテナを動かすための設定データみたいな感じでしょうか、DockerImageを元にコンテナを動かし、そのコンテナの中で、何かをおっぱじめるイメージだと理解しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンテナは先程のゲストOSのような立ち位置でしょうか。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerImageはDockerHubという場所からダウンロードできますし、Dockerfileを利用して、既存のDockerImageをベースに新しいImageを作成することもできる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E-- imageをダウンロードする\ndocker pull\n-- コンテナを実行する(create\u002Fstartが実行される）\ndocker run\n-- dockerfileからイメージを作成する\ndocker build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E簡単な操作でわかりやすく説明してくれている動画がありますので、共有します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-block-embed-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"docker入門part3 イメージを作成する\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002F_Pdl2EJF1-4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Ecentosにpython3を入れたイメージを作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実践ということで、centosにpython3を入れたイメージを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerfileに以下のような記載をします。\u003Cbr \u002F\u003Eやっていることは、centosのイメージをダウンロードして、\u003Cbr \u002F\u003Epython3をインストールして\u003Cbr \u002F\u003Eバージョンを表示している\u003Cbr \u002F\u003E大変シンプルですね。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EFROM centos:centos7\nRUN yum -y install python3\nCMD &#91;\"python3\", \"-V\"]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次に以下のコマンドを実行します。studypyというイメージ名でイメージを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E docker build -t studypy .\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Epythonのインストールが始まりますので、しばらく待ちます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E終わったら以下のコマンドを実行します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run studypy\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EPython 3.6.8と表示されればOKです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eすごい簡単なものでしたがやったことは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Edockerimageにはcentosとpython3がインストールされていて、それを実行するコンテナを起動してpythonを実行した。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にコンテナの中に入ってpythonを実行します。\u003Cbr \u002F\u003E-itでコンテナにログインできます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run -it studypy \u002Fbin\u002Fbash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでコンテナのcentosのbin\u002Fbashに入れます。ここでpython3と打つと、python3が実行できます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EホストPCとコンテナでデータを共有する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EホストPCでpython書いて、コンテナから実行してみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキーワードは -vオプションになります。Dockerfileがあるフォルダにappフォルダを作成して、中にtest.pyというファイルを用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Etest.pyはprint(&#8220;Hello Python3!&#8221;)という簡単なものにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそしたら以下コマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run -v \u002FUsers\u002Fjiren\u002Fdockerstudy\u002Fpy\u002Fapp:\u002Fcontainerapp -it studypy \u002Fbin\u002Fbash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E-v で、ホストPCの共有場所:コンテナのフォルダ　で、共有できます。\u003Cbr \u002F\u003Eこの場合は、ホストPCのappフォルダが共有フォルダとして、コンテナのcontainerappというフォルダにリンクされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Elsコマンドで確認するとあります\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;root@8c9fcb995319 \u002F]# ls\nanaconda-post.log  bin  containerapp  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eでは、containerappのtest.pyを実行してみましょう。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;root@8c9fcb995319 containerapp]# python3 test.py\nHello Python3!\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E表示されました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eコンテナ間で通信する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eimageを二つ用意して、コンテナを二つ起動させます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eimageはmysql:5.7.25 とwordpressです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cem\u003E\u003Cspan class=\"has-inline-color has-luminous-vivid-orange-color\"\u003E１つのコンテナに、MySQLとApacheなど、まとめてはいけないのですか？\u003Cbr \u002F\u003Eコンテナが再利用できない、メンテナンスの問題などでオススメしない\u003C\u002Fspan\u003E\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fteratail.com\u002Fquestions\u002F123306\" target=\"_blank\"\u003Ehttps:\u002F\u002Fteratail.com\u002Fquestions\u002F123306\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Elinkオプションはレガシーらしいので、networkを利用します。docker networkを利用することでコンテナ間で通信ができるようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Enetworkの作成は、以下のコマンドで行います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker network create study-wp-network\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Emysqlコンテナを以下のコマンドで起動します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run --name mysql -p 3306:3306 --network study-wp-network -e MYSQL_USER=root -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -d mysql:5.7.25\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eワードプレスのコンテナを起動します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run --name jirenwordpress --network study-wp-network -e WORDPRESS_DB_HOST=mysql -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password -p 8088:80 -d wordpress\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eワードプレスのインストール画面が表示されればOKです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Emysqlが動いているコンテナに、wordpressのコンテナからアクセスすることができました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cem\u003E-eは環境変数を設定するオプションです。\u003Cbr \u002F\u003E-dはバックグラウンドで動作させるオプションです。\u003Cbr \u002F\u003E-pはポートマッピングをするオプションです。ホストの8088がコンテナの80にマップされます。\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実はすごくエラーが発生して困っていました。mysqlに繋がらないとか、データベースが選択できないとか、、、結果的に以下のサイトにあるようにオプションを指定することで解決しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fcrieit.net\u002Fposts\u002FDocker-5-Wordpress-Wordpress\" target=\"_blank\"\u003Ehttps:\u002F\u002Fcrieit.net\u002Fposts\u002FDocker-5-Wordpress-Wordpress\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eまとめ\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Edockerを利用すると簡単にコンテナを動かすことができ、様々な開発環境を簡単に構築できるということですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerImageを用意して、コンテナを走らせる。という手順だけで環境が利用できるというのは、早いしわかりやすいし便利です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次回はdocker-composeについて勉強したいと思います。\u003C\u002Fp\u003E\n",protected:j},excerpt:{rendered:"\u003Cp\u003Eドラゴン桜という面白いドラマで、教え合う勉強法というのをやっていたので、勉強したことを教えるつもりで記事を書いてみます。 この記事に書いてあること Dockerとはなんですか？ イメージとコンテナについて軽く触れます D&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F22\u002Fdocker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EDockerについて勉強したのでメモします\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:j},author:n,featured_media:b,comment_status:o,ping_status:o,sticky:j,template:c,format:"standard",meta:[],categories:[k],tags:[21,22,56],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1287"}],collection:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1287"}],"version-history":[{count:b,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1287\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1287"}],"wp:term":[{taxonomy:d,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1287"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1287"}],curies:[{name:e,href:f,templated:a}]}}}],fetch:{"0":{categories:{categories:[{id:2,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:e,href:f,templated:a}]}},{id:k,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:e,href:f,templated:a}]}},{id:i,count:p,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:e,href:f,templated:a}]}},{id:q,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:e,href:f,templated:a}]}},{id:p,count:40,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:"Unity",slug:"unity",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:e,href:f,templated:a}]}},{id:7,count:r,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:e,href:f,templated:a}]}},{id:8,count:q,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:e,href:f,templated:a}]}},{id:r,count:k,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:e,href:f,templated:a}]}},{id:n,count:b,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:e,href:f,templated:a}]}}]}}},mutations:void 0}}(true,0,"","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",4,false,3,"2021-06-22T09:14:17","2021-06-22T00:14:17",1,"open",6,5,9)));