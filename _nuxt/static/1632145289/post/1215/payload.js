__NUXT_JSONP__("/post/1215", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){return {data:[{post:{id:1215,date:k,date_gmt:l,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1215"},modified:k,modified_gmt:l,slug:"%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3",status:"publish",type:"post",link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F04\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3\u002F",title:{rendered:"今更だがEffectiveJavaを買ったのでビルダーパターン"},content:{rendered:"\n\u003Cp\u003EJavaも使えるようにしないといけないので、EffectiveJavaを今更ですが買いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E私の日本語力が無いのか？なんか何言ってるかよくわからない箇所が多い気がしますが、、、\u003Cbr \u002F\u003Eつまみ読みしていこうかなと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここに書いてあるソースはあくまで勉強用なのでご注意ください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EBuilderパターンの利用\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコンストラクタでの引数が多くなったときはビルダーパターンを利用すると読みやすいよって話。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E初めて聞いたけどテレスコーピングコンストラクタパターンというのがあるらしい。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class HumanTelescoping {\n\tprivate final String name; \u002F\u002F 必須\n\tprivate final int age; \u002F\u002F 必須\n\tprivate final String hobby; \u002F\u002F option\n\tprivate final String nicname; \u002F\u002F option\n\t\u002F\u002F コンストラクタ\n\tpublic HumanTelescoping(String name,int age){\n\t\t\u002F\u002F　さらにコンストラクタを呼び出す\n\t\tthis(name,age,\"none\",\"none\");\n\t}\n\tpublic HumanTelescoping(String name,int age,String hobby,String nicname){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t\tthis.hobby = hobby;\n\t\tthis.nicname = nicname;\n\t}\n\tpublic String GetState(){\n\t\treturn \"name : \" + this.name + \" age : \" + this.age + \" hobby : \" + this.hobby + \" nicname : \" + this.nicname;\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tHumanTelescoping aoba = new HumanTelescoping(\"涼風青葉\", 18);\n\t\tSystem.out.println(aoba.GetState());\n\t\tHumanTelescoping koh = new HumanTelescoping(\"八神コウ\", 25 , \"イラスト\", \"パンツマン\");\n\t\tSystem.out.println(koh.GetState());\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ename : 涼風青葉 age : 18 hobby : none nicname : none\u003Cbr \u002F\u003Ename : 八神コウ age : 25 hobby : イラスト nicname : パンツマン\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E引数に色々渡してるけど何の値？ってなるし構造も少し複雑。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eビルダーパターン\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eさっそく作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic abstract class Human {\n\tpublic enum Type{ILUST,PROGRMMER,KIKAKU}\n\tpublic final Type type;\n\tpublic final String name;\n\tpublic final int age;\n\tpublic final String hobby;\n\tpublic final String nicname;\n\tabstract static class Builder&lt;T extends Builder&lt;T\u003E\u003E{\n\t\tprivate final Type type;\n\t\tprivate final String name;\n\t\tprivate final int age;\n\t\tprivate String hobby = \"none\";\n\t\tprivate String nicname = \"none\";\n\t\t\u002F**\n\t\t * 必須なんでコンストラクタで受け取ってみる\n\t\t * @param type\n\t\t * @param name\n\t\t * @param age\n\t\t *\u002F\n\t\tpublic Builder(Type type,String name,int age){\n\t\t\tthis.type = type;\n\t\t\tthis.name = name;\n\t\t\tthis.age = age;\n\t\t}\n\t\tpublic T setHobby(String hobby){\n\t\t\tthis.hobby = hobby;\n\t\t\treturn self();\n\t\t}\n\t\tpublic T setNicname(String nicname){\n\t\t\tthis.nicname = nicname;\n\t\t\treturn self();\n\t\t}\n\t\tpublic abstract Human build();\n\t\tpublic abstract T self();\n\t}\n\tHuman(Builder&lt;?\u003E builder){\n\t\tthis.name = builder.name;\n\t\tthis.age = builder.age;\n\t\tthis.hobby = builder.hobby;\n\t\tthis.nicname = builder.nicname;\n\t\tthis.type = builder.type;\n\t}\n\tpublic String getData(){\n\t\treturn this.name + this.age + this.hobby + this.nicname + this.type;\n\t}\n}\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class IllustHuman extends Human {\n\tpublic enum Charge{CHARACTER,MOTION,BACK}\n\tprivate final Charge charge;\n\tpublic static class Builder extends Human.Builder&lt;Builder\u003E{\n\t\tprivate final Charge charge;\n\t\t\u002F\u002F なんかコンストラクタの引数が多くなったけど必須なんでいいや汗\n\t\tpublic Builder(Type type,String name,int age, Charge charge){\n\t\t\tsuper(type,name,age);\n\t\t\tthis.charge = charge;\n\t\t}\n\t\t@Override\n\t\tpublic IllustHuman build() {\n\t\t\t\u002F\u002F TODO Auto-generated method stub\n\t\t\treturn new IllustHuman(this);\n\t\t}\n\t\t@Override\n\t\tpublic Builder self() {\n\t\t\t\u002F\u002F TODO Auto-generated method stub\n\t\t\treturn this;\n\t\t}\n\t}\n\tIllustHuman(Builder builder) {\n\t\tsuper(builder);\n\t\tthis.charge = builder.charge;\n\t}\n\t@Override\n\tpublic String getData(){\n\t\treturn \"name : \" + this.name + \"age : \" + this.age + \"hobby : \" + this.hobby + \"nicname : \" + this.nicname + \"班　：　\" + this.type + \"チーム　：　\" + this.charge;\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\nimport newgame.Human.Type;\nimport newgame.IllustHuman.Charge;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tHumanTelescoping aoba = new HumanTelescoping(\"涼風青葉\", 18);\n\t\tSystem.out.println(aoba.GetState());\n\t\tHumanTelescoping koh = new HumanTelescoping(\"八神コウ\", 25 , \"イラスト\", \"パンツマン\");\n\t\tSystem.out.println(koh.GetState());\n\t\t\u002F\u002F ボディービルダーパターンの利用\n\t\tIllustHuman yun = new IllustHuman.Builder(Type.ILUST, \"飯島ゆん\", 23, Charge.CHARACTER).setHobby(\"ファッション\").setNicname(\"ゆん\").build();\n\t\tSystem.out.println(yun.getData());\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ename : 涼風青葉 age : 18 hobby : none nicname : none\u003Cbr \u002F\u003Ename : 八神コウ age : 25 hobby : イラスト nicname : パンツマン\u003Cbr \u002F\u003Ename : 飯島ゆんage : 23hobby : ファッションnicname : ゆん班　：　ILUSTチーム　：　CHARACTER\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちょとわかりづらいかもしれませんが、ビルダーパターンではオプションをコンストラクタで渡すようなことはせず、メソッドを介して設定しているので、なんの値を設定しているのか見て判断できるようになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ereturn thisとして、疑似自分型イデオム（イデオンではない）と呼ばれる技法でこれを可能にしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオブジェクトの生成が一度で書かれているため、毎回setHoge()のようにするJavaBeansパターンの生成過程で起きるバグという欠点を解決しています。\u003C\u002Fp\u003E\n",protected:j},excerpt:{rendered:"\u003Cp\u003EJavaも使えるようにしないといけないので、EffectiveJavaを今更ですが買いました。 私の日本語力が無いのか？なんか何言ってるかよくわからない箇所が多い気がしますが、、、つまみ読みしていこうかなと思います。 こ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F04\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E今更だがEffectiveJavaを買ったのでビルダーパターン\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:j},author:m,featured_media:1219,comment_status:n,ping_status:n,sticky:j,template:c,format:"standard",meta:[],categories:[i],tags:[24,69],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1215"}],collection:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1215"}],"version-history":[{count:b,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1215\u002Frevisions"}],"wp:featuredmedia":[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1219"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1215"}],"wp:term":[{taxonomy:d,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1215"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1215"}],curies:[{name:e,href:f,templated:a}]}}}],fetch:{"0":{categories:{categories:[{id:2,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:e,href:f,templated:a}]}},{id:o,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:e,href:f,templated:a}]}},{id:i,count:p,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:e,href:f,templated:a}]}},{id:q,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:e,href:f,templated:a}]}},{id:p,count:40,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:"Unity",slug:"unity",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:e,href:f,templated:a}]}},{id:7,count:r,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:e,href:f,templated:a}]}},{id:8,count:q,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:e,href:f,templated:a}]}},{id:r,count:o,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:e,href:f,templated:a}]}},{id:m,count:b,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:e,href:f,templated:a}]}}]}}},mutations:void 0}}(true,0,"","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",4,false,"2021-05-04T15:49:36","2021-05-04T06:49:36",1,"open",3,6,5,9)));