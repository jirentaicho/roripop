__NUXT_JSONP__("/post/132", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){return {data:[{post:{id:132,date:l,date_gmt:m,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=132"},modified:l,modified_gmt:m,slug:"vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5",status:"publish",type:"post",link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5\u002F",title:{rendered:"Vue.jsとLaravelでカレンダーアプリを作成する EP5"},content:{rendered:"\n\u003Cp\u003E前回まででだいぶ完成しました。今回の記事で完成させます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事でやること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eaxsiosを使ってリクエストする\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003EまずはgetAllEventから全てのイベント情報を取得します。なんとLaravelではaxiosが何もしなくても使える状態になっているので簡単です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalenderComponent.vueのscriptのmountedに記載を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    mounted () {\n      \u002F\u002F 初期処理を書く\n      axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n    },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Efetchの場合はcatchに癖があるためにaxiosを使うのが良いらしい。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eこれで画面を確認してみます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-17.55.55-1024x739.png\" alt=\"\" class=\"wp-image-134\" width=\"501\" height=\"361\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E先ほど追加したyoutubeを見るというのが表示されています。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E最初に初期データが表示されています。まずvueが作成されてmountedが走るからです。\u003Cbr \u002F\u003E後々、初期データを空にすれば良いだけです。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch3\u003E新規追加する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E次はcreateのpost送信を行います。これはCreateComponent.vueからパラメータが送られてきましたよね。\u003Cbr \u002F\u003E今は直接配列にpushしていますが、これをaxiosでpost送信するように変更します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async saveEvent(params){\n        \u002F\u002F this.events.push(params);\n        await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで今まで通り新規投稿してみます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-20.44.11-1024x720.png\" alt=\"\" class=\"wp-image-138\" width=\"566\" height=\"397\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EIDは自動的にインクリメントされて登録されています。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Easync awaitは処理が終わるまで待ってくれます。今回は特段意識することはないかな\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch4\u003Easync awaitの挙動\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003E例えば投稿した後に何か処理をするとします。ログ出力でもいいや。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      saveEvent(params){\n        \u002F\u002F this.events.push(params);\n          axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n        console.log(\"保存しました。\");\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこの場合は、saveEventが発火してpost送信してすぐにログが出力されます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async saveEvent(params){\n        \u002F\u002F this.events.push(params);\n          await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n        console.log(\"保存しました。\");\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eしかしasync awaitの場合はすぐには保存しました。という所に処理はいかず、post送信が終わるまで待ってくれます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eイベントの削除を行う\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eこちらも要領は同じなのでサクッと実装していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EdeleteEventメソッドを修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async deleteEvent(){\n          const params = {\n            id : this.selectedEvent.id\n          }\n          await axios.post('\u002Fdelete',params)\n            .then( res =\u003E {\n              alert(\"削除しました。\");\n            })\n            .catch( e =\u003E {\n              console.log(e);\n            })\n            .finally( () =\u003E {\n            })\n          \u002F\u002Fついでに閉じる\n          this.eventAlert = false;\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで削除ボタンを押した時に、対象のIDのイベントが削除され、アラートが表示されていることを確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれにて、カレンダーアプリは完成ですが、微調整をして終わりにします。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E登録後と削除後にイベントを更新する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E登録ボタンを押した時、削除ボタンを押した時に、アクションを起こしたデータ画面上で更新されていないのは少し違和感があります。画面をリロードして読み込むというのはナンセンスなので実装します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eといっても、mountedで行なっていた処理を切り出して空いていたfinallyで呼び出すだけです。\u003Cbr \u002F\u003Escript全文を載せます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-21`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n          id : 1,\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n          id : 2,\n        },\n      ],\n      eventAlert:false,\n      selectedItem : null,\n      selectedEvent : {},\n    }),\n    computed:{\n    },\n    mounted () {\n      \u002F\u002F 一覧を取得する\n      this.getAllEvent();\n      \u002F*\n      axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n      *\u002F\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      async saveEvent(params){\n          await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n            \u002F\u002F一覧を取得する\n            this.getAllEvent();\n          })\n        console.log(\"保存しました。\");\n      },\n      clickEvent( {nativeEvent,event} ){\n        this.selectedEvent = event;\n        this.selectedItem = nativeEvent.target;\n        setTimeout(() =\u003E this.eventAlert = true, 10);\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        nativeEvent.stopPropagation();\n      },\n      async deleteEvent(){\n          const params = {\n            id : this.selectedEvent.id\n          }\n          await axios.post('\u002Fdelete',params)\n            .then( res =\u003E {\n              alert(\"削除しました。\");\n            })\n            .catch( e =\u003E {\n              console.log(e);\n            })\n            .finally( () =\u003E {\n              \u002F\u002F一覧を取得する\n              this.getAllEvent();\n            })\n          \u002F\u002Fついでに閉じる\n          this.eventAlert = false;\n      },\n      \u002F\u002F 一覧を取得する\n      async getAllEvent(){\n        await axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n      },\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでかっこよくなりました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、CreateComponent.vueのsaveメソッドを少し修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        save(){\n            if( !this.isNotNull(this.start,this.end) ){\n                return ;\n            }\n            if( !this.compareDate(this.start,this.end) ){\n                return;\n            }\n            const params = {\n                name : this.name,\n                start : this.day + ' ' + this.start,\n                end : this.day + ' ' + this.end\n            }\n            \u002F\u002F追加\n            this.dialog = false;\n            this.$emit('save',params);\n        },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eセーブしたら新規投稿画面を閉じるようにしました。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Emoreに対応する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E同じ日付に複数のイベントがあるとmoreと表示されます。これは別のイベント処理が必要なので書いてみます。現状だと新規登録画面が表示されてしまいます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-23.22.02-1024x604.png\" alt=\"\" class=\"wp-image-146\" width=\"535\" height=\"314\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E対応は簡単です\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:event=\"clickEvent\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n          @click:more=\"showDay\" 追加\n      \u003E&lt;\u002Fv-calendar\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Emoreとなった時は日付表示にしてしまえばOKです。日付表示では複数のイベントがあった場合は時間ごとに表示されるので。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E日付表示の状態でイベントを削除してもきちんと削除されますし、きちんとデータの再更新が行われます。\u003Cbr \u002F\u003Evuetifyってすごい！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以上で終わりです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eカレンダーにはもっと色々イベントがありますし、laravelの認証機能を入れればプライベートなwebカレンダーアプリケーションの完成です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:j},excerpt:{rendered:"\u003Cp\u003E前回まででだいぶ完成しました。今回の記事で完成させます。 この記事でやること axsiosを使ってリクエストする まずはgetAllEventから全てのイベント情報を取得します。なんとLaravelではaxiosが何もし&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP5\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:j},author:k,featured_media:b,comment_status:n,ping_status:n,sticky:j,template:c,format:"standard",meta:[],categories:[o],tags:[37,53],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F132"}],collection:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=132"}],"version-history":[{count:b,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F132\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=132"}],"wp:term":[{taxonomy:d,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=132"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=132"}],curies:[{name:e,href:f,templated:a}]}}}],fetch:{"0":{categories:{categories:[{id:2,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:e,href:f,templated:a}]}},{id:p,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:e,href:f,templated:a}]}},{id:77,count:k,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fgulp\u002F",name:q,slug:q,taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F77"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=77"}],curies:[{name:e,href:f,templated:a}]}},{id:i,count:r,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:e,href:f,templated:a}]}},{id:s,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:e,href:f,templated:a}]}},{id:r,count:40,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:"Unity",slug:"unity",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:e,href:f,templated:a}]}},{id:o,count:t,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:e,href:f,templated:a}]}},{id:8,count:s,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:e,href:f,templated:a}]}},{id:t,count:p,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:e,href:f,templated:a}]}},{id:k,count:b,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:e,href:f,templated:a}]}}]}}},mutations:void 0}}(true,0,"","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",4,false,1,"2020-05-21T23:28:28","2020-05-21T14:28:28","open",7,3,"gulp",6,5,9)));