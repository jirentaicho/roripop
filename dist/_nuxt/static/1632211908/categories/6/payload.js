__NUXT_JSONP__("/categories/6", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm){return {data:[{posts:{post:[{id:1098,date:A,date_gmt:B,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1098"},modified:A,modified_gmt:B,slug:"gamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fgamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity\u002F",title:{rendered:"GameCreatorでモバイル向けのUIを作成する | Unity"},content:{rendered:"\n\u003Cp\u003EGameCreatorではモバイルアプリを作る時のUIがよくわかりません。\u003Cbr \u002F\u003Eどうやら\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fdocs.piveclabs.com\u002Fgame-creator\u002Faccessibility-module-for-game-creator\" data-type=\"URL\" data-id=\"https:\u002F\u002Fdocs.piveclabs.com\u002Fgame-creator\u002Faccessibility-module-for-game-creator\" target=\"_blank\"\u003EAccessibility Module for Game Creator\u003C\u002Fa\u003Eというモジュールがあり、それを使うと簡単に設定できそうですが、ちょっと作れそうだったんで作ってみました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eメニュー &gt; Game Creator &gt; Preference からGeneralを選択して、Touchstickを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.20.53-1024x387.png\" alt=\"\" class=\"wp-image-1104\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EPrefab Touchstickは初期でnoneになっていますが、選択しようとするとTouchStickが選択できます。\u003Cbr \u002F\u003EついでにForceDisplayInEditorにチェックを入れておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこのPrefabはGameCreator &gt; Core &gt; Resources &gt; GameCreator &gt; Input　フォルダにあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ejoystickが設置されただけのCanvasで、先程のGeneralの設定を行うことで即導入することができます。\u003Cbr \u002F\u003EこのPrefabを修正してモバイル向けのUIを作ってみます。\u003Cbr \u002F\u003E移動に関しては既存のjoystickで良いとして、ボタンを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.27.35-1024x476.png\" alt=\"\" class=\"wp-image-1106\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E私はこんな感じでボタンを設置しました。ボタンはGameCreatorのButtonを使用することでActionやConditionを設定できます。\u003Cbr \u002F\u003E例えば、この銃を構えるボタンはこんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.29.41.png\" alt=\"\" class=\"wp-image-1107\" width=\"479\" height=\"224\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのPrefabから詳細なActionを指定することは難しいので、LocalVariableを利用します。これなら文字列でActionやらConditionやらを発火できますので、Playerに設定されたLocalVariableにアクセスできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerにはLocalVariablesを追加しておき、文字列で管理することでPrefabで設定しておいたActionやConditionも発火させることができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに、ActionやConditionのTypeはGameObjectになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.32.00.png\" alt=\"\" class=\"wp-image-1108\" width=\"376\" height=\"239\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのようにTouchStickとLocalVariablesを利用することでモバイル向けのUIを作成することができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにAndorid端末で実行してみましたが、正しく操作できました。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EGameCreatorではモバイルアプリを作る時のUIがよくわかりません。どうやらAccessibility Module for Game Creatorというモジュールがあり、それを使うと簡単に設定できそうですが、ち&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fgamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EGameCreatorでモバイル向けのUIを作成する | Unity\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:1132,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[w,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1098"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1098"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1098\u002Frevisions"}],"wp:featuredmedia":[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1132"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1098"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1098"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1098"}],curies:[{name:g,href:h,templated:a}]}},{id:1101,date:C,date_gmt:D,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1101"},modified:C,modified_gmt:D,slug:"dialogsystemuibuttononuse",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fdialogsystemuibuttononuse\u002F",title:{rendered:"DialogSystemでUIのButtonからOnUseを発火させる"},content:{rendered:"\n\u003Cp\u003Eちょっと迷ったのでメモします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eやり方は簡単でボタンにSelectorをつけて、ボタンのコールバックメソッドにてUseCurrentSelectionメソッドを呼ぶ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-21.58.22.png\" alt=\"\" class=\"wp-image-1102\" width=\"539\" height=\"154\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれだけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUse Keyで指定したボタンをキーボードで入力していましたが、これなら、buttonをクリックして同じことができるので、モバイル向けに作成できそうです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-16.27.20.png\" alt=\"\" class=\"wp-image-1060\" width=\"579\" height=\"586\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eちょっと迷ったのでメモします。 やり方は簡単でボタンにSelectorをつけて、ボタンのコールバックメソッドにてUseCurrentSelectionメソッドを呼ぶ。 これだけです。 Use Keyで指定したボタンをキー&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fdialogsystemuibuttononuse\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EDialogSystemでUIのButtonからOnUseを発火させる\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[E,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1101"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1101"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1101\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1101"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1101"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1101"}],curies:[{name:g,href:h,templated:a}]}},{id:1091,date:F,date_gmt:G,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1091"},modified:F,modified_gmt:G,slug:"gamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F13\u002Fgamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b\u002F",title:{rendered:"GameCreatorのShooterモジュールの武器の角度を調整する"},content:{rendered:"\n\u003Cp\u003Eデフォルトで使っていると何か不具合がある可能性があります。私の場合はピストルの銃口がプレイヤーを向いていました。\u003Cbr \u002F\u003EAimの方向に飛ばす場合は問題ないかもしれませんが、銃口の方向に飛ばす場合は修正する必要があります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E自分用の武器を作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eshooterモジュールのサンプルを有効にすると、４つの武器が利用できるようになるので、これをコピーして自分だけの武器にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.13.28-1024x178.png\" alt=\"\" class=\"wp-image-1093\" width=\"536\" height=\"93\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ERevolverを複製してMyRevolverにしておきました。\u003Cbr \u002F\u003EPlayerはこれを使うようにします。DrawWeaponをMyRevolerにすればOKです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.16.52.png\" alt=\"\" class=\"wp-image-1094\" width=\"384\" height=\"79\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E角度を調整する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E角度を調整します。ゲームを実行すると銃口が確認できます。銃口は赤丸の部分です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.16.34-1024x567.png\" alt=\"\" class=\"wp-image-1095\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれを修正するにはMyRevolver.asset（ピストルアイコン）をクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eすると3D Modelというところがあるので、Prefab Rotationを修正。\u003Cbr \u002F\u003Eゲーム実行中でも編集が反映されるので、確認しつつ位置を修正します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.15.40.png\" alt=\"\" class=\"wp-image-1096\" width=\"543\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eデフォルトで使っていると何か不具合がある可能性があります。私の場合はピストルの銃口がプレイヤーを向いていました。Aimの方向に飛ばす場合は問題ないかもしれませんが、銃口の方向に飛ばす場合は修正する必要があります。 自分用&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F13\u002Fgamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EGameCreatorのShooterモジュールの武器の角度を調整する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[w,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1091"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1091"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1091\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1091"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1091"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1091"}],curies:[{name:g,href:h,templated:a}]}},{id:1056,date:H,date_gmt:I,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1056"},modified:H,modified_gmt:I,slug:"%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F10\u002F%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91\u002F",title:{rendered:"セールでDialogSystemを買ったのでメモ【Unity】"},content:{rendered:"\n\u003Cp\u003Eこの前のセールで安くなっていたので買ってみました。\u003Cbr \u002F\u003Eとりあえず\u003Ca href=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue_system\u002Fmanual2x\u002Fhtml\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue_system\u002Fmanual2x\u002Fhtml\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Eドキュメント\u003C\u002Fa\u003Eがあるのですが、YouTubeにも動画あってこっちのほうがわかりやすい\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"Dialogue System for Unity 2.x Quick Start\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FrCVGwSIDI-4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EUIを簡単に変更する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EデフォルトのUIってあんまり良いと思わないので変更します。\u003Cbr \u002F\u003Eある程度用意されているので、DialogManagerのDialogue Systemを見ると、DialogueUIがありそこに用意されてるPrefabを設定すると簡単に変更できる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにPrefabは以下にいくつかあるので好みのものを使ってみると良いと思います。\u003Cbr \u002F\u003EAssets\u002FPlugins\u002FPixel Crushers\u002FDialogue System\u002FPrefabs\u002FStandard UI Prefabs\u002FTemplates\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-18.39.36.png\" alt=\"\" class=\"wp-image-1063\" width=\"571\" height=\"363\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E会話発生時のボタンを変更する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ESelectorのUseKeyを変更する(デフォルトはスペース)\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-16.27.20.png\" alt=\"\" class=\"wp-image-1060\" width=\"444\" height=\"450\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EちなみにこのSelectAtで会話の発生トリガーを変更できます。今回は画面の真ん中にきたときに会話発生可能にしています。（デモシーンと同じ）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eサンプルのクエストを見てみる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずはサンプルのシーンを実行してどんな動きをするか見ておきます。\u003Cbr \u002F\u003Eとりあえずサンプルシーンを見ると、いくつかクエストが用意されています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-21.23.26-1024x206.png\" alt=\"\" class=\"wp-image-1066\" width=\"407\" height=\"81\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの一番上のクエストの詳細をみると色々書いてありますが、大事なのはStateだと思います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.43.41.png\" alt=\"\" class=\"wp-image-1073\" width=\"473\" height=\"360\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E初期値はunassingedとなっており、まだアサインされていない状態ですね。\u003Cbr \u002F\u003E他にもactiveやsuccessなどあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E会話は３つに分岐していて、クエストを受け取っていない時、クエスト実行中の時、クエスト完了の時、\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-21.46.22.png\" alt=\"\" class=\"wp-image-1068\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E真ん中のAnyLuckDownloading the I..と書かれているところの、Conditionsに以下のような記載があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECurrentQuestState(&#8220;Get the Launch Codes&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E見た感じではGet the Launch Codesというクエストがactiveの時にフローがいくようになっている。\u003Cbr \u002F\u003EさらにIll find the password. [E&#8230;となっているところのScriptには以下のような記載があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESetQuestState(&#8220;Get the Launch Codes&#8221;, &#8220;active&#8221;);\u003Cbr \u002F\u003EVariable[&#8220;Alert&#8221;] = &#8220;Mission: Get the Launch Codes&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EGet the Launch Codesというクエストをactiveにしています。\u003Cbr \u002F\u003Eこのようにしてスクリプトを通してクエストを制御しているようですね。というわけで作成してみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにこのCurrentQuestStateというのは関数のようです。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue-system-documentation\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue-system-documentation\u002F\" target=\"_blank\"\u003Eドキュメント\u003C\u002Fa\u003Eを見ると、Quest-Related Lua Functionsという見出しに関数の説明があります。Luaという言語らしいですね（cocos2dxかなんかであったような・・・）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eクエストを作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eどんなクエストにしようか考えたのですが、サンプルっぽくパスワードをゲットするみたいなクエストを作ってみます。Get the Codeというシンプルなクエストです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.16.49-1024x190.png\" alt=\"\" class=\"wp-image-1071\" width=\"613\" height=\"113\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E同じようにクエスト未実施と実行中と完了の3つ子要素を作っておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.22.00.png\" alt=\"\" class=\"wp-image-1072\" width=\"538\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエスト未実施のConditionsに以下を設定(クエストがアサインされてない場合のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;unassigned&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eクエスト実行中のConditionsに以下を設定(クエストがactiveの時のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続いてそれぞれに子ノードを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.52.18.png\" alt=\"\" class=\"wp-image-1075\" width=\"498\" height=\"216\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエストを開始します。のScriptに以下を設定(クエストのStateをactiveに変更)\u003Cbr \u002F\u003ESetQuestState(&#8220;Get the Code&#8221;, &#8220;active&#8221;);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれでクエストを開始します。のあとはクエストがactiveになりパスワードを見つけてくれというふうになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に新しいConversationsを作成します。+ボタンから新規作成できます\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.56.24.png\" alt=\"\" class=\"wp-image-1078\" width=\"407\" height=\"187\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eパスワードを見つけたというノードのScriptを以下に設定(クエスト成功)\u003Cbr \u002F\u003ESetQuestState(&#8220;Get the Code&#8221;, &#8220;success&#8221;);\u003Cbr \u002F\u003EConditionsに以下を設定(クエスト実行中のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に先程のConversationsに戻って、クエスト完了の子ノードを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.59.01.png\" alt=\"\" class=\"wp-image-1079\" width=\"426\" height=\"179\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエスト完了のConditionsに以下を設定(クエスト完了というか成功の場合）\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;success&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれでクエストの基本的な仕組みはできました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにコードを発見する時のConversationは以下のようにすればOKです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.23.53.png\" alt=\"\" class=\"wp-image-1081\" width=\"430\" height=\"349\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eおまけ、GameCreatorのActionを発火させる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E会話中にキャラクターが動いてしまうのを制御します。\u003Cbr \u002F\u003EGameCreatorを使っている場合はActionのTimeScaleを0にすることで停止できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eといわで、停止と再生のアクションのみを持つゲームオブジェクトを作成しておきます。\u003Cbr \u002F\u003EそれぞれTimeScaleを0にするのと1にするActionを持たせます\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.26.13.png\" alt=\"\" class=\"wp-image-1084\" width=\"380\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EそしてプレイヤーにつけているDialog System Eventsを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.29.23.png\" alt=\"\" class=\"wp-image-1085\" width=\"472\" height=\"400\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E会話中は停止のActionを持ったゲームオブジェクトのActions.Executeを実行することで、Actionが実行されます。ここでTimeScaleを0にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして会話が終了したら再生のゲームオブジェクトのActions.Executeを実行してTimeScaleを1に戻す。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.34.30-1024x483.png\" alt=\"\" class=\"wp-image-1087\" width=\"417\" height=\"196\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eこの前のセールで安くなっていたので買ってみました。とりあえずドキュメントがあるのですが、YouTubeにも動画あってこっちのほうがわかりやすい UIを簡単に変更する デフォルトのUIってあんまり良いと思わないので変更しま&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F10\u002F%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EセールでDialogSystemを買ったのでメモ【Unity】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[E,w,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1056"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1056"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1056\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1056"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1056"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1056"}],curies:[{name:g,href:h,templated:a}]}},{id:1031,date:J,date_gmt:K,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1031"},modified:J,modified_gmt:K,slug:"%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F09\u002F%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga\u002F",title:{rendered:"色々試した結果ゲームツールキット系アセットはGameCreatorが良かった"},content:{rendered:"\n\u003Cp\u003Eなにと比較してっていうと色々問題がありそうなので、色々試した結果これがおすすめっていうアセットを紹介します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EGame Creator\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-06-18.17.12-1024x599.png\" alt=\"\" class=\"wp-image-1034\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftools\u002Fgame-toolkits\u002Fgame-creator-89443?locale=ja-JP\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftools\u002Fgame-toolkits\u002Fgame-creator-89443?locale=ja-JP\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそこそこ色々使ってきましたが、このアセットが今のところ最強かなと思います。\u003Cbr \u002F\u003E本格的に作り込んでいくには\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E別途モジュールの購入が必要\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003Eになりますが、それでもこれがオススメです。結果として自分の納得のいくゲーム制作にはこれが当てはまった。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cstrong\u003EGame Creatorでゲームを作るには、Action Conditions Triggerを使う必要があります。\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E実は銃の発射も自動では作られません。しっかりこの3つを使用して自分で設定して作成します（銃を使うにはShooterモジュールを別途購入する必要があります）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E全て御膳立てがあるアセットの場合はちょっとした変更にも右往左往しますし、余計な機能があったりしますが、これは自分である程度設定を行う必要があります。\u003Cbr \u002F\u003E０ではないですが１０くらいからゲーム制作を始める感じですが、\u003Cstrong\u003E結果的\u003C\u002Fstrong\u003Eに学習コストも低いと思います。（プログラムを書く必要はありません）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E銃を打つのに必要なこと\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-11.00.23-1024x748.png\" alt=\"\" class=\"wp-image-1039\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えばGameCreatorで銃を使ったゲームを作りたいならば、まずはShooterモジュールを別途購入します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレイヤーにPlayerShooterをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.54.40.png\" alt=\"\" class=\"wp-image-1046\" width=\"559\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E普通のゲームキット系のアセットだと標準で銃を構えるなどのキーが設定されていますが、GameCreatorは自分で設定します。\u003Cbr \u002F\u003EPlayerにトリガーをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-11.08.37.png\" alt=\"\" class=\"wp-image-1041\" width=\"589\" height=\"206\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのトリガーを追加したらChangeTriggerボタンを押して、On Key DownにしてKeyCodをXにします。\u003Cbr \u002F\u003Eそして一番左のアクション追加ボタンを押すと、子要素にアクションが追加されます。\u003Cbr \u002F\u003Eこれは、Xキーを押した時にアクションを実行するという意味になります。これがトリガーとアクションです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E子要素に追加されたActionsには以下のような設定をします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.47.48.png\" alt=\"\" class=\"wp-image-1045\" width=\"490\" height=\"204\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれだけではまだ銃を発射できません。\u003Cbr \u002F\u003Eただ、TriggerとActionの関係はなんとなくわかると思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eプレイヤーにもう一つTriggerをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.56.10.png\" alt=\"\" class=\"wp-image-1047\" width=\"505\" height=\"179\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度はZキーを押した時にConditionsを発火させます。\u003Cbr \u002F\u003EこれもActionの時と同じように自動的に子要素にConditionsが追加されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EConditionsは簡単に言えばIF文で、条件にヒットした場合はThenに登録されたActionが実行されます。\u003Cbr \u002F\u003E武器を装備していない場合は、カメラを切り替えてピストルを描画してエイムを表示などします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.57.39.png\" alt=\"\" class=\"wp-image-1048\" width=\"498\" height=\"221\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.58.14-802x1024.png\" alt=\"\" class=\"wp-image-1049\" width=\"497\" height=\"635\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E武器を装備している場合はElseに登録されたActionsが実行されます。\u003Cbr \u002F\u003Eカメラを変更して武器をしまって、プレイヤーが走れるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-0.05.57.png\" alt=\"\" class=\"wp-image-1051\" width=\"461\" height=\"399\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eholsterはピストルなどをしまうために腰につけているあれです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EGameCreatorはロジックを組み立てる必要があるけど使いやすい\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E銃を使うにもロジックを組み立てる必要があるが、銃を構えている時のカメラの設定や、プレイヤーが走れるのかなど、さまざまな設定を行うことができる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eモジュールを別途買うことでできることが増えていくというのは、お金がかかるであまり良いとは思えないが、モジュール販売しているアセットは他にもあるし、まぁ普通なのかな。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EYoutubeにはもっと素晴らしいチュートリアル動画もあるので参考になります！ドキュメントを見るより動画見た方が早いです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"#3 Crouch Tutorial - Unity Game Creator Tips &amp; Tricks\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FiRQbJxlaZOE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれは、しゃがむ動作の導入です。これもTriggerとActionを使います。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eなにと比較してっていうと色々問題がありそうなので、色々試した結果これがおすすめっていうアセットを紹介します。 Game Creator https:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftool&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F09\u002F%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E色々試した結果ゲームツールキット系アセットはGameCreatorが良かった\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[w,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1031"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1031"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1031\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1031"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1031"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1031"}],curies:[{name:g,href:h,templated:a}]}},{id:987,date:L,date_gmt:M,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=987"},modified:L,modified_gmt:M,slug:"%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F21\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91\u002F",title:{rendered:"【Unity】Game Kit Controller 【ダイアログ】"},content:{rendered:"\n\u003Cp\u003E会話機能を使ってみます。Unityでは標準のフォントだと日本語がWebGLで表示されない問題があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた、メッセージ機能もスクラッチで作ろうとなると大変です。Fungusなどを使うとすっごく楽ですが、今回はGame Kit Controllerでのダイアログシステムの利用メモになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E多分メッセージ機能だけで言えば、Fungusの方が使いやすいし無料だしいいと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は3DオブジェクトのCapsuleに会話機能をつけようと思います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.30.56.png\" alt=\"\" class=\"wp-image-989\" width=\"414\" height=\"203\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EまずはCapsuleを追加します。次にお馴染みのPrefabsManagerからDialogSystem \u003E DialogSysytem(With answers for Player)を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.34.29.png\" alt=\"\" class=\"wp-image-990\" width=\"435\" height=\"252\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E追加したらDialog System (With answers for Player)をCapsuleの子要素にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に、Dialog Ownerを設定する必要があります。これはCapsuleでよいです。\u003Cbr \u002F\u003EDialog System (With answers for Player)のDialog　Content　System（Script)から設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.42.15.png\" alt=\"\" class=\"wp-image-991\" width=\"450\" height=\"150\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでCapsuleと話すことができるようになります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eメッセージをカスタマイジングする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度はPrefabsManagerからDialog System (Empty)を追加して、先ほどと同じ手順でCapsuleの子要素とオーナーの設定をおこないます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にDialog Content Systemにて会話の設定をしていきます。\u003Cbr \u002F\u003E今回はカプセルとの会話というのを作っていきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.29.01-939x1024.png\" alt=\"\" class=\"wp-image-993\" width=\"539\" height=\"587\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EDialogsListに会話内容を書いていきます。\u003Cbr \u002F\u003E会話の名前と、発言者の名前、そして発言内容を記載していきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.48.56.png\" alt=\"\" class=\"wp-image-994\" width=\"529\" height=\"411\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次の会話に移るにはNextLineSettingsを修正します。\u003Cbr \u002F\u003EChange To Dialog Info IDにチェックを入れて、Dialog Info ID To Activateに移動した会話のIDを指定します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003Eこの時にIDはできるだけ連番管理したほうがよいです。\u003Cbr \u002F\u003E例えば会話2個ある状態で、IDを2で指定するとエラーになります。\u003Cbr \u002F\u003Eというのも、会話の1個目のIDは0なので、ID2というのは配列で言うところのout of boundみたいな感じのエラーになります。とりあえずIDが会話数-1に収まっていれば良いと思います。\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.50.20.png\" alt=\"\" class=\"wp-image-995\" width=\"504\" height=\"128\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にID1の会話を作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAdd Lineから次の会話を作成して、以下のようにIDを設定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.56.05.png\" alt=\"\" class=\"wp-image-996\" width=\"468\" height=\"411\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで会話が流れるのを確認できました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E選択肢を追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次は選択肢を追加します。OKとNGの選択肢を用意して選択した結果から、発言ルート(ID)を変更します。具体的にはOKの時はID3、NGの時はID4というようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E全体図はこんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.27.22.png\" alt=\"\" class=\"wp-image-999\" width=\"394\" height=\"306\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E選択肢のDialogContentは空にしておいて、Dialog Lines Listの中に選択肢を入れます。\u003Cbr \u002F\u003E選択肢はこんな感じになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.29.35-611x1024.png\" alt=\"\" class=\"wp-image-1001\" width=\"284\" height=\"475\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENext Line Settingsで次の会話IDを指定しています。OKの時は3、NGの時は4のような感じですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E会話を終了する時はIs End Of Dialogにチェックをつけます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.50.46.png\" alt=\"\" class=\"wp-image-1002\" width=\"338\" height=\"390\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E会話にてイベントを発火させる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度は会話にてイベントを発生させます。\u003Cbr \u002F\u003E現状わかっているドアのオープンイベントをOKボタンを押した時に発生。というのをやってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E結構かんたんにできて、OKの時のEventSystemSettingにメソッドを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-21.38.14.png\" alt=\"\" class=\"wp-image-1005\" width=\"493\" height=\"492\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでOKを選択した時にドアが開きます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E会話時のカメラのポジションについて\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECamera PositionのTransformを調整します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-23.07.28-1024x409.png\" alt=\"\" class=\"wp-image-1007\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E会話機能を使ってみます。Unityでは標準のフォントだと日本語がWebGLで表示されない問題があります。 また、メッセージ機能もスクラッチで作ろうとなると大変です。Fungusなどを使うとすっごく楽ですが、今回はGame&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F21\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller 【ダイアログ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[y,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F987"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=987"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F987\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=987"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=987"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=987"}],curies:[{name:g,href:h,templated:a}]}},{id:973,date:N,date_gmt:O,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=973"},modified:N,modified_gmt:O,slug:"%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F20\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F",title:{rendered:"【Unity】Game Kit Controller ドアを開く【メモ】"},content:{rendered:"\n\u003Cp\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E鍵を使ってドアを開ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EPrefabsManagerには便利な検索機能があります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-20.35.38.png\" alt=\"\" class=\"wp-image-975\" width=\"499\" height=\"171\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eここでdoorと検索して、Add &#8211; Trigger Rotating Doorをクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこれでTrigger Moving Doorsが追加されます。デフォルトでは近寄ると開いて遠ざかると閉まるという自動ドア的なものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはLocked SettingのLockedにチェックを入れます。\u003Cbr \u002F\u003Eこれで近寄っても鍵がかかった状態になっているので、開きません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にPrefabsManagerからInventory(Quest Objects)を選択してSimpleKey(Inventory)を作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続けてInventory(Objects To Use Inventory Empty)からUse Inventory Object Prefabs (Menu)を作成します。\u003Cbr \u002F\u003E追加したUseInventoryObjectPrefabs(Menu)をドアの近くに設置します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EおそらくこれはメニューからInventoryObjectを利用した時にイベントを発生させるものですね。このコライダーの中でUseすることで発生するようです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-23.37.55.png\" alt=\"\" class=\"wp-image-978\" width=\"456\" height=\"305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E続いてPrefabsManagerを選択してインスペクタからMissionSysytemを開き、Add – ObjectiveSystemTriggerをクリックすると、ヒエラルキーにObjective System Triggerが作成されます。\u003Cbr \u002F\u003E続けてObjective Event SystemのTask1をUnLockDoorにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続いてUse Inventory Object Prefab (Menu)のUseInventoryObject(Script)のObject Solved Event Setingを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-0.51.19-1024x393.png\" alt=\"\" class=\"wp-image-980\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで実行して、SimpleKeyを拾ってドアの前でInventory画面から、SimpleKeyを選択してUseをするとドアが開きます。（驚）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.21.00.png\" alt=\"\" class=\"wp-image-985\" width=\"519\" height=\"205\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスイッチを押してドアを開ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度はスイッチを押してドアを開けます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPrefabManagerからSimpleSwitchを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでくると動画を見なくてもなにをすればいいのかがわかってきますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E追加したSImpleSwitchのSimpleSwitch(Script)のEventSettingsを以下のように設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.16.06-1024x409.png\" alt=\"\" class=\"wp-image-983\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあとはプレイヤーがスイッチを押せばドアが開きます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.19.14.png\" alt=\"\" class=\"wp-image-984\" width=\"541\" height=\"371\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E参考：https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24 鍵を使ってド&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F20\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller ドアを開く【メモ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[y,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F973"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=973"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F973\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=973"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=973"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=973"}],curies:[{name:g,href:h,templated:a}]}},{id:932,date:P,date_gmt:Q,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=932"},modified:P,modified_gmt:Q,slug:"%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F19\u002F%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F",title:{rendered:"【Unity】Game Kit Controller【メモ】"},content:{rendered:"\n\u003Cp\u003E買いました。50$なので結構高かったです。\u003Cbr \u002F\u003Eメモします。とりあえず基本的なところ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E基本操作\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実行中に色々ボタンを押すと、色々おきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EH キャラクターのモード変更\u003Cbr \u002F\u003EI Inventoryを開く\u003Cbr \u002F\u003EJ プレイヤーコントロールモード\u003Cbr \u002F\u003EESC メニュー画面\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayer And Game ManagementのInputManagerのPlayerControllerのInputListのAxesにプレイヤーの操作に関しては設定してあります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.54.43.png\" alt=\"\" class=\"wp-image-966\" width=\"384\" height=\"387\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E不要ならばActionEnabledのチェックを外してしまいましょう\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EInventoryMenuを開くとかも設定があるので、要チェックですな設定ですな\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-0.07.45.png\" alt=\"\" class=\"wp-image-967\" width=\"501\" height=\"504\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eプレイヤーを作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eメニュー &gt; Game Kit Controller &gt; Create New Character\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EモデルはHumaroidのものを指定する。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EプレイヤーのModeを設定する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eデフォルトでは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerControllerの中のPlayer States Manager inspectorを見る。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-15-22.22.59.png\" alt=\"\" class=\"wp-image-933\" width=\"226\" height=\"242\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのIsCurrentStateが現在のモードになります。らしいのですが\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E現状よくわかってない。\u003C\u002Fspan\u003E\u003Cbr \u002F\u003Eとりあえず並び順を一番上にしたやつがデフォルトのモードになりました??\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E色々設定してみると変化します。。\u003Cbr \u002F\u003Eちなみにプレイ中はHキーで変更できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EMode Enabledにチェックを外すとそのモードは使用できなくなります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EMixamoのアニメーションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E\u003Cstrong\u003Eこれ重要です\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EMixamoのアニメーションをアセットに含めることができないそうでGithubからダウンロードする必要があります。meleeなどはこれをしないと動きません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsr3888\u002FGKC-Public-Repository\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fsr3888\u002FGKC-Public-Repository\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EZipをダウンロードして解凍して、Action System Animations Examples (from Mixamo).unitypackageをインポートして、Unityを再起動します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EInventoryを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考 \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=X8mFBPzsKDg\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=X8mFBPzsKDg\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E在庫システムというと壮大だが、また持ち物リストですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerControllerのInventoryManagerのInitialInventoryListの中に初期持ち物リストがあります。Oボタンでアイテムの有効無効、Eボタンで装備状態を設定する。\u003C\u002Fp\u003E\n\n\n\u003Ch4\u003E新規Objectの追加\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003EPlayer And Game Management の Inventory の Inventroy List Manager の CategoryInventoryList をクリック。AddCategoryでカテゴリを追加して、NewCategoryができます。その中にInventoryListがあるのでそこでAddObjectをクリック。New Objectが追加される。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に、Objectのモデルをヒエラルキーに召喚して、空のゲームオブジェクトを作成して親にします。空のゲームオブジェクトのレイヤーをinventoryにします。次にboxcoliderを追加します。コライダーはObjectのモデルと同じような大きさにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそこまでやったらPrefb化します。\u003Cbr \u002F\u003E続いて先ほどカテゴリーのInventoryListに追加したObjectのInventoryObjectMeshにPrefabを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EObjectInfoやNameを修正します。\u003Cbr \u002F\u003EOpenInventoryCaptureToolでモデルから撮影してアイコンを作成できます（まじすげ）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にCreateInventoryPrefabボタンを押すと、カテゴリフォルダー含めて作成されます。\u003Cbr \u002F\u003E作られたPrefabはPickUpObjectなどのスクリプトがついています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれをシーンに追加してゲームを始めると、このオブジェクトをEボタンでゲットしてInventoryに追加できることが確認できます。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eミッションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考 \u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U3e8PfDd3Cg\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U3e8PfDd3Cg\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eミッション機能でゲーム性アップです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはPrefabsMangerを追加します\u003Cbr \u002F\u003EMenu &gt; Game Kit Controller &gt; Create Prefabs Manager\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EシーンにPrefabsManagerが作成されますので、PrefabsManagerを選択してインスペクタからMissionSysytemを開き、Add &#8211; ObjectiveSystemTriggerをクリックすると、ヒエラルキーにObjective System Triggerが作成されます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E同じようなことをGame Kit Controller &gt; MainManager &gt; MissionManager &gt; Add Main Mission Managerから、Main ObjectiveManagerのInstantiate Mission System からも行えるますです。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EObjective System Triggerの子要素にObjective Triggerがあるのでそれをアクティブにしておきます。\u003Cbr \u002F\u003EついでにBoxColliderの大きさを調整しておきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にObjective Event Systemをクリックしてインスペクタからタスクを登録できます。\u003Cbr \u002F\u003E現状、Task 1というタスクがあります。\u003Cbr \u002F\u003E下の方に行くと、なにやら鍵を使ってドアを開けろとか、1000xpの報酬とか書いてあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの状態でゲームをスタートしてプレイヤーをさきほどのObjective Triggerに接触させると、ミッションが開始されるのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもうすでにミッションを開始できたので、あとは自分だけのミッションを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E物を拾うミッションを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず、PrefabsManagerからInventory(Ammo)を開きます。Add Shotgun Ammoをクリックします。\u003Cbr \u002F\u003Eこれでヒエラルキーに弾が追加されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に追加した弾のインスペクタでPick Up Taken Event SettingのUse Event On Takenにチェックを入れます。チェックを入れると、Event On Taken()ということで取得時のイベントを設定できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ENone(Object)にObjectiveEventSystemを指定します。メソッドにはaddSubObjectiveComplete(string)を指定します。続いてTakeと記載します、\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.06.43.png\" alt=\"\" class=\"wp-image-957\" width=\"439\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのTakeはObjectiveEventSystemのTask1のNameとリンクしておりますので、こちらもTakeに変更しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.07.00.png\" alt=\"\" class=\"wp-image-958\" width=\"482\" height=\"268\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E続いてObjective Event SystemのRewaRewardEventSettingからGiveRewardOnObjectiveCompleteにチェックを入れます。これでミッションクリア時に報酬を得ることができやす！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.11.01-1024x135.png\" alt=\"\" class=\"wp-image-959\" width=\"427\" height=\"55\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの状態でゲームスタートしてミッションを発生させて、アイテムをとるとミッションクリアとなります。\u003Cbr \u002F\u003EミッションはOBJECTIVE LOGから確認できます。完了するとcompleteになります。\u003Cbr \u002F\u003EこれはObjectiveEventSystemのCurrentStateからも確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eミッションが完了するとMissionCompleteがTrueになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.07.04-1024x268.png\" alt=\"\" class=\"wp-image-961\" width=\"513\" height=\"134\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch4\u003E2つのSubjectを作る\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003Eもう一個アイテムを拾ったらミッション完了ということにします。\u003Cbr \u002F\u003Eやり方は同じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EObjectiveInfoListにAddObjectiveで追加します。名前をTake2にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.11.56.png\" alt=\"\" class=\"wp-image-963\" width=\"567\" height=\"99\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にまたPrefabsManagerから適当なAmmoを追加して、同じようにTake2を指定するようにPickUpTakenEventSettingを指定してTake2にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今度は2個アイテムを拾うことでミッション成功になりましたとさ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EActionSystemを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EとりあえずPrefabs &gt; Action System &gt; Examples の中に色々とアクションシステムが設定されたPrefabが存在している。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E例えば蹴飛ばして破壊できるドア\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-8.55.34.png\" alt=\"\" class=\"wp-image-969\" width=\"492\" height=\"372\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E他にもAction System Trigger (Use Chair)というものがあり、これは座るActionを行うものになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-12.25.32.png\" alt=\"\" class=\"wp-image-971\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003EMeleeモード時の初期武器の変更\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E頑張って探しました笑\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eヒエラルキーの検索にて&#8221;grab&#8221;で検索し、Grabbed Object Melee Attack Systemから\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.39.33.png\" alt=\"\" class=\"wp-image-1021\" width=\"374\" height=\"396\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMelee Weapons Grabbed Manger(Script)にてStart Game With Melee Weapon SettingsというのにWeapon Name To Start Gameというのがあります。どうやら名称（String)で初期武器を管理しています。今回はLightsaberに変更しましたが、なぜこの値になったかというと・・・\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.41.19-1024x453.png\" alt=\"\" class=\"wp-image-1022\" width=\"569\" height=\"251\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EすぐしたにWeaponListおちう設定項目があり、ここでPrefabと上で指定する名称を設定しています。というわけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.41.06-1024x843.png\" alt=\"\" class=\"wp-image-1024\" width=\"492\" height=\"404\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003E倒した時のうるさいアノ音をどうにかしたい\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eこのアセットの悪いところはサウンドが●●なところですかね。\u003Cbr \u002F\u003Eとにかくうるいさくてびっくりします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず気に入らないのがキャラクターを倒した時の音です。ピーン！ってやつ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.04.19-1024x393.png\" alt=\"\" class=\"wp-image-1026\" width=\"618\" height=\"237\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EdeathAudioSourceの音量を０にしちゃいました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.27.02.png\" alt=\"\" class=\"wp-image-1028\" width=\"325\" height=\"361\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.11.29.png\" alt=\"\" class=\"wp-image-1029\" width=\"281\" height=\"210\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch4\u003E余談\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003EMacのMojavaでやってたら相性が悪かったのか、Macが強制終了しててなんやこのってなっていましたがBigSurにアップデートしたら解消されました。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまだまだやることが多いので、一旦この辺で！\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E買いました。50$なので結構高かったです。メモします。とりあえず基本的なところ。 基本操作 実行中に色々ボタンを押すと、色々おきます。 H キャラクターのモード変更I Inventoryを開くJ プレイヤーコントロールモ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F19\u002F%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller【メモ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[y,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F932"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=932"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F932\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=932"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=932"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=932"}],curies:[{name:g,href:h,templated:a}]}},{id:892,date:R,date_gmt:S,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=892"},modified:R,modified_gmt:S,slug:"fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F07\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae\u002F",title:{rendered:"Fungusを使ってゲームを作ったもの"},content:{rendered:"\n\u003Cp\u003E\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003EFungusは神\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E本当はBoltというアセットの勉強をしようと思ったのですが、よくわからないのでPlayMakerとFungusでゲームを作りました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Funitychandashutu\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitychandashutu\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E軽いUnityちゃんを使ってみたのですが、可愛いのでいいですね\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.28.39-1024x437.png\" alt=\"\" class=\"wp-image-897\" width=\"344\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回はFungusを使って色々とやってみました。\u003Cbr \u002F\u003EまずはCollectionです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eアイテムの管理はCollectionを使いました。Collectionを使ってIFの制御もできるので鍵を持っている持っていないとかのロジックに使うことができます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.05.47.png\" alt=\"\" class=\"wp-image-893\" width=\"548\" height=\"385\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのドアは鍵を持っていないと開かないドアです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.15.20.png\" alt=\"\" class=\"wp-image-894\" width=\"475\" height=\"225\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのContainsはCollectionから要素を検索して、要素があればtureなければfalseを変数に設定できます。今回はVarという変数に要素の検索結果を代入している形になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E他にもExecute On Eventでイベントの発生タイミングを制御できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.18.40.png\" alt=\"\" class=\"wp-image-895\" width=\"433\" height=\"323\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えばTriggerの当たり判定が発生した時とかも簡単に表現ができます。\u003Cbr \u002F\u003EまたUIButtonClickedにすると簡単にボタンのクリックイベントを定義できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもう煩わしいコードを書く必要がなくなったということですね？\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EFungusは神 本当はBoltというアセットの勉強をしようと思ったのですが、よくわからないのでPlayMakerとFungusでゲームを作りました。 https:\u002F\u002Fvolkruss.com\u002Funitychandash&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F07\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusを使ってゲームを作ったもの\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[u,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F892"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=892"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F892\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=892"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=892"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=892"}],curies:[{name:g,href:h,templated:a}]}},{id:867,date:T,date_gmt:U,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=867"},modified:T,modified_gmt:U,slug:"%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F27\u002F%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b\u002F",title:{rendered:"【Unity】Fungusの小技をメモする"},content:{rendered:"\n\u003Cp\u003E小技をメモしていきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E随時更新します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ECollection系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコレクション、在庫みたいな感じ、色々な型に対応しているが柔軟性は低そう？\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionを作る\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E適当な空のゲームオブジェクトにCollectionをアタッチします。今回はStringを扱えるものにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.11.42.png\" alt=\"\" class=\"wp-image-876\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003ECollectionに要素を追加する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECollection\u002FAddコマンドで要素を追加できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.15.38.png\" alt=\"\" class=\"wp-image-877\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E使用するCollectionを指定して、追加する変数を指定します。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionの要素を検索する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECollectionから要素を検索するにはContainsコマンドを使用します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.17.50.png\" alt=\"\" class=\"wp-image-878\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E検索するCollectionを指定して、要素の変数を指定します。\u003Cbr \u002F\u003E今回は鍵というstringの要素を検索します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E面倒ですが、いちいち変数として宣言しないといけません。\u003Cbr \u002F\u003E検索結果はbool型でResultで指定した変数に入ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E上の画像の例では、鍵がなければ鍵をCollectionに追加して、鍵があれば&#8221;中身は空っぽだ&#8221;というメッセージを表示するようにしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにgetedという新しい過去形を作りました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ETween系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ETweenを使った動きのある挙動のメモ\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eドアを開く\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ERotateAddでOffsetのYに値を設定する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-27-23.13.52.png\" alt=\"\" class=\"wp-image-868\" width=\"592\" height=\"543\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003Eドラを開け閉めする\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eまずは変数を用意。なぜか一つだけ変数を用意しておくとゲーム再生時に変数が消えるバグがあったので三つくらい変数を宣言しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-28-0.25.47.png\" alt=\"\" class=\"wp-image-873\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-28-0.19.46.png\" alt=\"\" class=\"wp-image-872\" width=\"369\" height=\"168\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eifによる制御ができるので変数に値に応じて開け閉めを行えばOK\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ESaveLoad系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Efungusはセーブもロードもできます。どこまでできるのか調査も兼ねてメモします。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ESaveする\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003EFungus &gt; Create &gt; SaveMenuで自動的にセーブメニューを作ってくれます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EコマンドにはSavePointを指定します。\u003Cbr \u002F\u003Eこのコマンドが実行された後にセーブメニュー画面のSaveボタンを押すとセーブされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただし、保存される情報は少ないです。Loadするとこのセープポイントから実行されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-30-23.15.12.png\" alt=\"\" class=\"wp-image-884\" width=\"264\" height=\"305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスクリプト系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EFungusはスクリプトからも操作できるし拡張もできるです。\u003Cbr \u002F\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgithub.com\u002Fsnozbot\u002Ffungus\u002Fwiki\u002Fadding_command\" target=\"_blank\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fsnozbot\u002Ffungus\u002Fwiki\u002Fadding_command\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionの要素を出力する\u003C\u002Fh3\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public Fungus.StringCollection collection;\n    private void Start()\n    {\n        IEnumerator lists = collection.GetEnumerator();\n        while (lists.MoveNext())\n        {\n            Debug.Log(lists.Current);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EIEnumeratorを取得してループで要素を操作できます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003EListからCollectionに追加する\u003C\u002Fh3\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public void AddAndLoadTest()\n    {\n        \u002F\u002F Listに要素を追加\n        var stringList = new List&lt;string&gt;();\n        stringList.Add(\"市民\");\n        stringList.Add(\"人狼\");\n        stringList.Add(\"狂人\");\n        stringList.Add(\"占い師\");\n        stringList.Add(\"霊媒師\");\n        \u002F\u002F Listからコレクションに追加\n        foreach(string item in stringList)\n        {\n            collection.Add(item);\n        }\n        \u002F\u002F 取得とログに表示\n        IEnumerator lists = collection.GetEnumerator();\n        while (lists.MoveNext())\n        {\n            Debug.Log(lists.Current);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EコレクションのAddメソッドを使って要素を追加します。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E小技をメモしていきます 随時更新します。 Collection系 コレクション、在庫みたいな感じ、色々な型に対応しているが柔軟性は低そう？ Collectionを作る 適当な空のゲームオブジェクトにCollectionを&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F27\u002F%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Fungusの小技をメモする\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:1036,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j,z],tags:[u,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F867"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=867"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F867\u002Frevisions"}],"wp:featuredmedia":[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1036"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=867"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=867"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=867"}],curies:[{name:g,href:h,templated:a}]}},{id:861,date:V,date_gmt:W,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=861"},modified:V,modified_gmt:W,slug:"playmaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F25\u002Fplaymaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86\u002F",title:{rendered:"PlayMakerでNavMeshAgentを使う"},content:{rendered:"\n\u003Cp\u003E最近BoltというPlaymakerにそっくりなものを知りましたが、結局PlayMakerだよなぁ！？ということでPlayMakerを使ってNavMeshAgentを操作します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayMakerはいわゆる人工無脳の作成に向いているみたいな記事を見ますが、NavMeshAgentを使えばさらにパワーアップできますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし、PlayMakerを見るとNavMeshAgentは標準では使用できないことがわかります。\u003Cbr \u002F\u003Eでも、私のを見てください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-25-12.15.03-580x1024.png\" alt=\"\" class=\"wp-image-862\" width=\"302\" height=\"533\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあるんです。\u003Cbr \u002F\u003Eというわけで、必要なものをダウンロードします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のURLから「Unity 5.0 to 5.4 package」のダウンロードをして開きます。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fhutonggames.fogbugz.com\u002Fdefault.asp?W1174\" target=\"_blank\"\u003Ehttps:\u002F\u002Fhutonggames.fogbugz.com\u002Fdefault.asp?W1174\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこれでPlayMakerでNavMeshAgentを利用する準備ができました。\u003Cbr \u002F\u003E例えば敵キャラクターのターゲットをプレイヤーにする場合はこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-25-23.08.07.png\" alt=\"\" class=\"wp-image-865\" width=\"233\" height=\"257\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E１、ターゲットのゲームオブジェクトを取得する。\u003Cbr \u002F\u003E２、ターゲットのポジションを取得する。\u003Cbr \u002F\u003E３、ターゲットのポジションを目的地に設定する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの手順で行くとNavMeshAgentをPlayMakerから操作できます。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E最近BoltというPlaymakerにそっくりなものを知りましたが、結局PlayMakerだよなぁ！？ということでPlayMakerを使ってNavMeshAgentを操作します。 PlayMakerはいわゆる人工無脳の作&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F25\u002Fplaymaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlayMakerでNavMeshAgentを使う\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[39,v],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F861"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=861"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F861\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=861"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=861"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=861"}],curies:[{name:g,href:h,templated:a}]}},{id:814,date:X,date_gmt:Y,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=814"},modified:X,modified_gmt:Y,slug:"mymlagentsunity",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F06\u002Fmymlagentsunity\u002F",title:{rendered:"Unity | ml-agentsでゼロから機械学習をさせる"},content:{rendered:"\n\u003Cp\u003Eサンプルを動かしても何も新しいものが作れないので、ゼロからいろいろ設定して、機械学習をやってみます。\u003Cbr \u002F\u003Eちなみに知識に関してはまだ勉強中ということで、レベル4くらいなのでその辺はご了承ください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E今回のゴール\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回は自分でゼロから全部用意して機械学習をさせるまでが目標です。\u003Cbr \u002F\u003E今回の記事ではここまで作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-1.09.39.png\" alt=\"\" class=\"wp-image-831\" width=\"458\" height=\"333\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E敵キャラはUnityちゃんに向かってレイキャストを飛ばして、当たったら報酬を得ます。そんな感じのものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E将来的にはピストルに変えていきたいなという願望。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eシーンを設定する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回はUnityちゃんを使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E敵キャラのAIを作ってみます。敵キャラはUnityちゃんを攻撃してくるという感じにしましょう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは床とUnityちゃんと敵を配置します。\u003Cbr \u002F\u003EUnityちゃんにはコライダーを持たせておき、タグをUnityChanにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyにはRigidBodyをつけておきます。\u003Cbr \u002F\u003Eついでに子要素にライフルを設置します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.04.28-576x1024.png\" alt=\"\" class=\"wp-image-815\" width=\"251\" height=\"446\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.05.53.png\" alt=\"\" class=\"wp-image-816\" width=\"479\" height=\"284\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E機械学習の準備を行う\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EEnemyに必要なものをアタッチしていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはBehaviorParametersを付けてNameをEnemyBehaviorにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にRayPerceptionSensor3Dをアタッチします。\u003Cbr \u002F\u003EDetectableTagsのSizeを1にしてElement0にUnityChanと入力します。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.12.43.png\" alt=\"\" class=\"wp-image-818\" width=\"376\" height=\"464\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれをつけるとシーンビューでレイが自動的に発射されて、物体と当たっている場合は赤い線が表示されます。\u003Cbr \u002F\u003E\u003Cspan class=\"has-inline-color has-vivid-cyan-blue-color\"\u003E※ライフルの位置を調整しました。\u003Cstrong\u003Eあとライフルのboxcolliderを消しました。\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.14.48.png\" alt=\"\" class=\"wp-image-819\" width=\"426\" height=\"278\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのレイで当たっている情報から、ーーーーをAIが観察値として扱ってくれるようです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EAgentを継承したクラスを作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EMyAI.csというのを作って以下のようにします。まずは雛形的なものを作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\npublic class MyAI : Agent\n{\n    public Transform target;\n    Rigidbody rBody;\n    private bool canShot = true;\n    private int nextShotTime = 0;\n    &#91;SerializeField]\n    private GameObject bulletprefab;\n    &#91;SerializeField]\n    private LayerMask layerMask;\n    public override void Initialize()\n    {\n        this.rBody = GetComponent&lt;Rigidbody\u003E();\n    }\n    public override void OnEpisodeBegin()\n    {\n    }\n    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EOnEpisodeBegin\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EOnEpisodeBeginメソッドを完成させます。これはエピソード開始時なので学習の最初に呼ばれることになります。やっていることは自身の初期化とターゲットの初期化です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E床からEnemyが落ちた時はエピソードを終了させるので、位置をリセットする必要があるので床から落ちた時の処理があります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public override void OnEpisodeBegin()\n    {\n        \u002F\u002F床から落ちた時\n        if (this.transform.position.y &lt; 0)\n        {\n            this.rBody.angularVelocity = Vector3.zero;\n            this.rBody.velocity = Vector3.zero;\n            this.transform.position = new Vector3(0f, 0.5f, 0f);\n        }\n        target.localPosition = new Vector3(Random.value * 8 - 4, 0.5f, Random.value + 8 - 4);\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E\u003Cstrong\u003EOnActionReceived\u003C\u002Fstrong\u003E\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次にOnActionReceivedメソッドを完成させます。\u003Cbr \u002F\u003Eこれは少し複雑ですが\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E簡単にこのメソッドを説明すると、移動と攻撃を選択しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n        ActionSegment&lt;int\u003E vectorAction = actionBuffers.DiscreteActions;\n        bool isShot = false;\n        Vector3 dirToGo = Vector3.zero;\n        Vector3 rotateDir = Vector3.zero;\n        int action = (int)vectorAction&#91;0];\n        int shot = (int)vectorAction&#91;1];\n        if (action == 1) dirToGo = transform.forward;\n        if (action == 2) dirToGo = transform.forward * -1.0f;\n        if (action == 3) rotateDir = transform.up * -1.0f;\n        if (action == 4) rotateDir = transform.up;\n        \u002F\u002F isShotは２番目の配列要素から受け取れます。\n        if (shot == 1) isShot = true;\n        this.transform.Rotate(rotateDir, Time.deltaTime * 200f);\n        this.rBody.AddForce(dirToGo * 0.3f, ForceMode.VelocityChange);\n        if (this.transform.localPosition.y &lt; 0)\n        {\n            EndEpisode();\n        }\n        \u002F\u002F攻撃\n        if (isShot)\n        {\n            Shot();\n        }\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eメソッドを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EShotメソッドは実際に球を発射するメソッドです。が、今回はレイキャストを発射するだけです。\u003Cbr \u002F\u003EFixedUptedateメソッドは発射した後に発射制限を設けているのでそこの部分の管理を行います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n    private void Shot()\n    {\n        if (!canShot)\n        {\n            return;\n        }\n        var direction = transform.forward;\n        Debug.DrawRay(transform.position, direction, Color.blue, 1f);\n        if (Physics.Raycast(transform.position, direction, out var hit, 2000f, layerMask))\n        {\n            Debug.Log(\"HIT!!\");\n            AddReward(1f);\n            EndEpisode();\n        }\n        else\n        {\n            AddReward(-0.033f);\n        }\n        canShot = false;\n        nextShotTime = 10;\n    }\n    private void FixedUpdate()\n    {\n        \u002F\u002F 球を発射可能に切り替える\n        if (!canShot)\n        {\n            nextShotTime--;\n            if (nextShotTime &lt;= 0)\n            {\n                canShot = true;\n            }\n        }\n        AddReward(-1f \u002F MaxStep);\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eその他の設定\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EUnityちゃんのレイヤーをPlayerにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyの設定も以下の画像のように行なっておきます。\u003Cbr \u002F\u003E今回はプレファブを使うことはしませんが、まぁ後々使うと思うんで一応設定しておきました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-22.51.58-535x1024.png\" alt=\"\" class=\"wp-image-836\" width=\"314\" height=\"601\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-22.52.08.png\" alt=\"\" class=\"wp-image-837\" width=\"274\" height=\"296\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E学習を開始する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E作ったMyAIをEnemyにアタッチしたらMaxStepを2000くらいにしておきます。\u003Cbr \u002F\u003EついでにtargetをUnityちゃんにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eついでにyamlファイルを作ります。\u003Cbr \u002F\u003EEnemy.yamlを作って以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ebehaviors:\n  EnemyBehavior:\n    trainer_type: ppo\n    hyperparameters:\n      batch_size: 128\n      buffer_size: 2048\n      learning_rate: 0.0003\n      beta: 0.005\n      epsilon: 0.2\n      lambd: 0.95\n      num_epoch: 3\n      learning_rate_schedule: linear\n    network_settings:\n      normalize: true\n      hidden_units: 128\n      num_layers: 2\n      vis_encode_type: simple\n    reward_signals:\n      extrinsic:\n        gamma: 0.99\n        strength: 1.0\n    keep_checkpoints: 5\n    checkpoint_interval : 500000\n    max_steps: 500000\n    time_horizon: 64\n    summary_freq: 1000\n    threaded: true\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eあとは学習を開始させます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最初はうろうろとその辺を歩き回ります。\u003Cbr \u002F\u003Eちなみに今回は報酬を得るとHIT!!というログを出しております。\u003Cbr \u002F\u003Eだんだんとログの出力頻度が上がってきますのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最後にコード全文載せておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\npublic class MyAI : Agent\n{\n    public Transform target;\n    Rigidbody rBody;\n    private bool canShot = true;\n    private int nextShotTime = 0;\n    &#91;SerializeField]\n    private GameObject bulletprefab;\n    &#91;SerializeField]\n    private LayerMask layerMask;\n    public override void Initialize()\n    {\n        this.rBody = GetComponent&lt;Rigidbody\u003E();\n    }\n    public override void OnEpisodeBegin()\n    {\n        \u002F\u002F床から落ちた時\n        if (this.transform.position.y &lt; 0)\n        {\n            this.rBody.angularVelocity = Vector3.zero;\n            this.rBody.velocity = Vector3.zero;\n            this.transform.position = new Vector3(0f, 0.5f, 0f);\n        }\n        target.localPosition = new Vector3(Random.value * 8 - 4, 0.5f, Random.value + 8 - 4);\n    }\n    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n        ActionSegment&lt;int\u003E vectorAction = actionBuffers.DiscreteActions;\n        bool isShot = false;\n        Vector3 dirToGo = Vector3.zero;\n        Vector3 rotateDir = Vector3.zero;\n        int action = (int)vectorAction&#91;0];\n        int shot = (int)vectorAction&#91;1];\n        if (action == 1) dirToGo = transform.forward;\n        if (action == 2) dirToGo = transform.forward * -1.0f;\n        if (action == 3) rotateDir = transform.up * -1.0f;\n        if (action == 4) rotateDir = transform.up;\n        \u002F\u002F isShotは２番目の配列要素から受け取れます。\n        if (shot == 1) isShot = true;\n        this.transform.Rotate(rotateDir, Time.deltaTime * 200f);\n        this.rBody.AddForce(dirToGo * 0.3f, ForceMode.VelocityChange);\n        if (this.transform.localPosition.y &lt; 0)\n        {\n            EndEpisode();\n        }\n        \u002F\u002F攻撃\n        if (isShot)\n        {\n            Shot();\n        }\n    }\n    private void Shot()\n    {\n        if (!canShot)\n        {\n            return;\n        }\n        var direction = transform.forward;\n        Debug.DrawRay(transform.position, direction, Color.blue, 1f);\n        if (Physics.Raycast(transform.position, direction, out var hit, 2000f, layerMask))\n        {\n            Debug.Log(\"HIT!!\");\n            AddReward(1f);\n            EndEpisode();\n        }\n        else\n        {\n            AddReward(-0.033f);\n        }\n        canShot = false;\n        nextShotTime = 10;\n    }\n    private void FixedUpdate()\n    {\n        \u002F\u002F 球を発射可能に切り替える\n        if (!canShot)\n        {\n            nextShotTime--;\n            if (nextShotTime &lt;= 0)\n            {\n                canShot = true;\n            }\n        }\n        AddReward(-1f \u002F MaxStep);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E自分でゼロから機械学習の設定を行い、機械学習をすることができました。\u003Cbr \u002F\u003E次は実際のゲームらしくピストルを実際に発射したりしたいなと思います。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eサンプルを動かしても何も新しいものが作れないので、ゼロからいろいろ設定して、機械学習をやってみます。ちなみに知識に関してはまだ勉強中ということで、レベル4くらいなのでその辺はご了承ください。 今回のゴール 今回は自分でゼ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F06\u002Fmymlagentsunity\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity | ml-agentsでゼロから機械学習をさせる\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[Z,r,_],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F814"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=814"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F814\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=814"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=814"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=814"}],curies:[{name:g,href:h,templated:a}]}},{id:761,date:$,date_gmt:aa,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=761"},modified:$,modified_gmt:aa,slug:"unity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F02\u002Funity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91\u002F",title:{rendered:"Unityで無謀にも機械学習を始めます。【ML-Agents】"},content:{rendered:"\n\u003Cp\u003E正直、右も左もわからん状態から始めます。\u003Cbr \u002F\u003Eとりあえず目標はサンプルに対してサンプルの学習をさせるまで。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにサンプルはこいつです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-01-23.07.38.png\" alt=\"\" class=\"wp-image-763\" width=\"364\" height=\"333\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E環境\u003Cbr \u002F\u003EMac\u003Cbr \u002F\u003E\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003Eml-agents v1.4.0\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E現時点で最新版だと思いますが、これマジでどんどんアップデートが入っているようなので注意してください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EAnacondaのインストール\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずは色々と準備が必要なので、サクッと色々とダウンロードしていきます。\u003Cbr \u002F\u003Eまずは\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.anaconda.com\u002Fproducts\u002Findividual\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.anaconda.com\u002Fproducts\u002Findividual\" target=\"_blank\"\u003EAnaconda\u003C\u002Fa\u003Eをインストールします。リンク先の下の方にいくとファイルがありますので環境に合わせてダウンロードしてください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAnacondaを使うとpythonの開発環境を手軽に構築できます。Unityでの機械学習にもAnacondaを使って環境を作ります。アナコンダをインストールしたらターミナルから以下のコマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Econda create -n mlagents python=3.8\u003C\u002Fp\u003E\u003Ccite\u003Eなんか聞かれたらYで進めます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E次に作った環境を使うように以下のコマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Econda activate mlagents\u003C\u002Fp\u003E\u003Ccite\u003Eプロンプロトがmlagentsに変わります。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003Eml-agentsのダウンロード\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次にml-agentsをダウンロードします。\u003Cbr \u002F\u003E現時点での最新を利用します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgithub.com\u002FUnity-Technologies\u002Fml-agents\" target=\"_blank\"\u003Ehttps:\u002F\u002Fgithub.com\u002FUnity-Technologies\u002Fml-agents\u003C\u002Fa\u003E\u003Cbr \u002F\u003Eこのサイトの下のほうに以下のようなテーブルがありダウンロードできます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.24.42-1024x499.png\" alt=\"\" class=\"wp-image-767\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EというわけでRelease7をダウンロードします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E解凍すると色々なものが入っています\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.26.56.png\" alt=\"\" class=\"wp-image-769\" width=\"268\" height=\"311\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとりあえずProjectフォルダのAssetフォルダに移動します。\u003Cbr \u002F\u003EするとML-AgetnsというフォルダがあるのでUnityのプロジェクトにコピーします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ色々とエラーが出ているが気にせず進めます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.35.53.png\" alt=\"\" class=\"wp-image-770\" width=\"351\" height=\"191\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にUnityのPackageManagerを開きます。\u003Cbr \u002F\u003E＋ボタンから、Add package from diskをクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.47.27.png\" alt=\"\" class=\"wp-image-772\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eすると選択画面が開くのでcom.unity.ml-agentsのpackage.jsonを選択します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.52.57.png\" alt=\"\" class=\"wp-image-773\" width=\"411\" height=\"227\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eしばらくインポートが走るので待ちます。\u003Cbr \u002F\u003Eインポートが終わるとエラーが消えています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eついでになんかサンプルを見てみます。\u003Cbr \u002F\u003E画像のサンプルを開いて実行すると、球を落とさないように箱が動いているのがわかります。こいつらは既に学習済みの\u003Cstrong\u003E&#8220;モデル&#8221;\u003C\u002Fstrong\u003Eを利用しているので最初からボールが落ちないようにAIが頑張ってます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.59.06-1024x861.png\" alt=\"\" class=\"wp-image-776\" width=\"405\" height=\"340\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E実はUnityで機械学習を始める前に少しpythonでチャットボットを作るというチュートリアルをやりました(完全にコピペで流しただけw）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコピペでしたが機械に学習させた結果のモデルを用意して、そのモデルを利用するという形なのはわかりました。（本当はそのモデルをUnityで使いたかったが無知すぎたのでやめた）\u003Cbr \u002F\u003EUnityでも学習させたらそのモデルを使うことになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E学習には時間がかかるケースもあるようです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Epythonの環境を整える\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E機械学習をする環境を作ります。\u003Cbr \u002F\u003E現時点ではpythonの開発環境をつくっただけなので、環境を構築していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとは言っても簡単で、コマンドを一つ叩きます\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Epip install mlagents\u003C\u002Fp\u003E\u003Ccite\u003E色々始まります。私の環境ではワーニングのようなものが出ました。どうやら将来的にpipの依存関係が大変なことになるよというエラーらしいですが、現状は無視しておきます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.17.25-1024x529.png\" alt=\"\" class=\"wp-image-779\" width=\"525\" height=\"270\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Fksato9700\u002Fitems\u002Fec30d726a1508c7985a0\" target=\"_blank\"\u003Ehttps:\u002F\u002Fqiita.com\u002Fksato9700\u002Fitems\u002Fec30d726a1508c7985a0\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実はこのコマンドを打つ以外にも、ダウンロードしたreleaseフォルダからやるみたいなローカルインストールみたいな名前の方法もあるようですが、面倒なので一発で\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにそれはダウンロードしたフォルダを利用します。利用するのは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eml-agentsとml-agents-envsというフォルダです。（余談です）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.36.21.png\" alt=\"\" class=\"wp-image-780\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E機械学習を実施する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eさて準備ができたので早速学習開始です。\u003Cbr \u002F\u003E学習の前に一度サンプルのシーンを実行して、ボールが落ちないようにAIが動いている様を確認しておくことをお勧めします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさぁでは機械学習を始めます。といってもコマンドを打つだけです。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Emlagents-learn \u002FUsers\u002Fxxxx\u002FDownloads\u002Fml-agents-release_7\u002Fconfig\u002Fppo\u002F3DBall.yaml &#8211;run-id=firstball\u003C\u002Fp\u003E\u003Ccite\u003Emlagents-learn 3DBall.yamlのパス &#8211;run-id=ID名\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E打つとターミナルにUnityロゴが現れます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.52.30-1024x696.png\" alt=\"\" class=\"wp-image-783\" width=\"560\" height=\"380\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にUnityでシーンを再生します。再生するシーンはさっきのサンプルのシーンで問題ありません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.44.06-1024x590.png\" alt=\"\" class=\"wp-image-784\" width=\"435\" height=\"250\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eサンプルを最初に確認した時はボールをうまく操作していましたが、なんと学習中はボールを落としたり、大きく揺れたりしていて、とても不安定です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがまさに学習中なわけですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしばらくそのまま再生していると、段々とボールに慣れてきます。そして最初にみたサンプルのようにボールを上手に操作するように&#8221;学習&#8221;していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがまさに機械学習というやつですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでpythonのコードは一切に飛び出していません。でも機械学習に触ることができましたね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ頃合いをみてUnityのシーンを停止します。すると学習が終了して、Saved Modelというログとモデルの保存先をログに履いてくれます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003ECopied results\u002Ffirstball\u002F3DBall\u002F3DBall-304035.nn to results\u002Ffirstball\u002F3DBall.nn.\n2020-10-02 01:50:20 INFO &#91;trainer_controller.py:84] Saved Model\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E学習した結果のモデルは\u003Cbr \u002F\u003Eml-agents-release_7 &gt; result &gt; firstball フォルダの中に入っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこいつをUnityで使ってみます。\u003Cbr \u002F\u003E名前が被っているのでMy_3DBallに変更しておきました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにサンプルのモデルは、ML-Agents &gt; Examples &gt; 3DBall &gt; TFModels の中に入っていますので、そこにMy_3DBallをコピーします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.01.54.png\" alt=\"\" class=\"wp-image-789\" width=\"471\" height=\"133\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にヒエラルキーの3DBallというオブジェクトのAgentというオブジェクトを開きます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.03.27.png\" alt=\"\" class=\"wp-image-790\" width=\"431\" height=\"185\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EインスペクタのBehavior ParametersというスクリプトにModelというフィールドがあるのでMy3DBallを選択します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.04.27.png\" alt=\"\" class=\"wp-image-791\" width=\"268\" height=\"293\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生すると、同じようにボールが落ちない学習済のモデルを利用したシーンが再生されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E駆け足でしたが、導入から学習の流れまでを勉強しました！\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E正直、右も左もわからん状態から始めます。とりあえず目標はサンプルに対してサンプルの学習をさせるまで。 ちなみにサンプルはこいつです。 環境Macml-agents v1.4.0 現時点で最新版だと思いますが、これマジでど&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F02\u002Funity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで無謀にも機械学習を始めます。【ML-Agents】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[ab,Z,r,_],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F761"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=761"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F761\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=761"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=761"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=761"}],curies:[{name:g,href:h,templated:a}]}},{id:750,date:ac,date_gmt:ad,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=750"},modified:ac,modified_gmt:ad,slug:"newcakeunitychan",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F28\u002Fnewcakeunitychan\u002F",title:{rendered:"また新作のゲームを作ったので紹介させてください"},content:{rendered:"\n\u003Cp\u003E前回は2Dのゲームを作ったのですが、予想以上に時間がかかった。\u003Cbr \u002F\u003EやはりUnityは3Dのほうが私レベルの作品だと素早く作れます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで今回は3Dゲームを製作しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Fvolkruss.com\u002Fcakeunitychan\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttp:\u002F\u002Fvolkruss.com\u002Fcakeunitychan\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eステージを作るのは至難の業ということでアセットの力をお借りました。\u003Cbr \u002F\u003Eなんか屋敷っぽいの欲しいなあと思っていたらセールで購入できました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EBGMや一部サウンドは魔王魂さんからお借りしています。\u003Cbr \u002F\u003E音楽：魔王魂\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fmaoudamashii.jokersounds.com\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fmaoudamashii.jokersounds.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-28-0.19.51-1024x498.png\" alt=\"\" class=\"wp-image-753\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"The Palace Modular Interior Pack\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002F_DV4XFpzJfw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eゲームについて\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EUnityちゃんがケーキを食いまくるゲームです。食った数のカウントを測ります。\u003Cbr \u002F\u003EJackというキャラクターに捕まったらゲーム終了です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-28-0.19.37-1024x495.png\" alt=\"\" class=\"wp-image-752\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E敵キャラクターの動くはUnityのAI機能であるNavgationAgentを利用しています。\u003Cbr \u002F\u003Eこれを使うと移動処理やら楽に実装できるので便利です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E戦いの中で成長する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E私のプログラミングポリシーは&#8221;戦いの中で成長する&#8221;です。これはまさにドラゴンボール超のヒットのような感じで、とにかく何かを作る中で学んでいくという方法です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ基礎がガタガタになってはいけないのである程度は基本の勉強をしますが、あとはとにかく実践で学ぶというスタイルをとっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eで、今回学んだことは、、特になかったかもしれない。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというのも今まで学んできた内容とほぼ似たようなゲームだからだ。\u003Cbr \u002F\u003Eただ、今回はいわゆる&#8221;物理演算&#8221;に必須な&#8221;Rigidbody&#8221;を使っている。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそのためコードも少し変わっていて私のお気に入りのキャラクターの移動方法にも少し変化があります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        float vertical = controller.getVertical();\n        float horizontal = controller.getHorizontal();\n        Vector3 movepos = vertical * Vector3.Scale(\n            Camera.main.transform.forward, new Vector3(1, 0, 1)).normalized * moveSpeed + horizontal * Camera.main.transform.right * moveSpeed;\n        transform.position = new Vector3(transform.position.x + movepos.x, transform.position.y, transform.position.z + movepos.z);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eどこに変化があるかというとtransform.position = new Vectro3();の箇所でy軸を自分のポジションにしているところです。今までは0にしていたのですが、これだと物理演算の挙動が組み込まれた時におかしくなります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ、当たり前のことを言ってますが、今まで下方向の意識がなかったので、、、\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはlocalPositionについて理解しました。\u003Cbr \u002F\u003Eこれは親オブジェクトからみた時の相対座標です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eよく子オブジェクトをインスペクタ上から操作する時に、座標を0,0,0にしますが、あれはlocalPositionだったということですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eトゥーンシェーダー２を使ったが、マジで使いかたわからないので適当に設定しました笑これに関してはなんの成長もありませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでも足は踏み入れた。という感じです。。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E今後について\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今後も色々とゲームを作っていく予定ですが、捕獲系はやめてバトル系とか作りたいなと思います。\u003Cbr \u002F\u003Eあとはこのサイトのコンテンツをもっと増やす(俺の知識量を増やす)というのも\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというかしっかり面白いゲーム作れないとダメだなぁ・・・\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EてかUnityちゃん可愛すぎるので、どんどん使っていきたいです。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E前回は2Dのゲームを作ったのですが、予想以上に時間がかかった。やはりUnityは3Dのほうが私レベルの作品だと素早く作れます。 というわけで今回は3Dゲームを製作しました。 http:\u002F\u002Fvolkruss.com\u002Fcak&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F28\u002Fnewcakeunitychan\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003Eまた新作のゲームを作ったので紹介させてください\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,ae],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F750"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=750"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F750\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=750"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=750"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=750"}],curies:[{name:g,href:h,templated:a}]}},{id:702,date:af,date_gmt:ag,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=702"},modified:af,modified_gmt:ag,slug:"unityonline01",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funityonline01\u002F",title:{rendered:"Unityでオンラインゲームを作りたい"},content:{rendered:"\n\u003Cp\u003E今回からUnityでオンラインゲームを作ろうと思います。\u003Cbr \u002F\u003E進捗とか技術的なことを随時メモしていこうかなと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E途中でプロジェクトが爆発したらごめんなさい。\u003Cbr \u002F\u003Eガチでオンラインのオの字もわからない状態から始めます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E※あらかじめある程度動くUnityちゃんを作っています。\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにゲームを公開する予定はありません。\u003Cbr \u002F\u003Eでも作り方を学ぶためにやっていきます！\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eオンラインの入口\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono1\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono1\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず無料である程度使えるというphotonを利用します。\u003Cbr \u002F\u003E公式サイトもシンプルという文言が全面に出ているのできっと大丈夫でしょう&#8230;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.photonengine.com\u002Fen-US\u002FPhoton\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.photonengine.com\u002Fen-US\u002FPhoton\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえずアカウント作ってCREATE A NEW APPで新規appの作成を行いました。\u003Cbr \u002F\u003EとりあえずAPP IDというのを手に入れることに成功しました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-22.43.57.png\" alt=\"\" class=\"wp-image-705\" width=\"492\" height=\"351\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAssetStoreから\u003Cstrong\u003EPUN 2 無料版\u003C\u002Fstrong\u003Eをインポートします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-23.17.33-1024x408.png\" alt=\"\" class=\"wp-image-707\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EインポートしたらAppIDの入力を求められたので入力します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-23.28.56.png\" alt=\"\" class=\"wp-image-708\" width=\"377\" height=\"284\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでSetupProjectをするとAsset¥Photon¥PhotonUnityNetWorkingフォルダにPhotonServerSettings.assetが作成されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eんで以下のように設定しました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-0.05.07-632x1024.png\" alt=\"\" class=\"wp-image-711\" width=\"426\" height=\"690\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E参考サイトにいい感じのコードがあるので参考にしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E※以下はまだ動きません\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing Photon.Pun;\nusing Photon.Realtime;\nusing UnityEngine;\npublic class NetWorkScene : MonoBehaviourPunCallbacks\n{\n    void Start()\n    {\n        \u002F\u002F さっきの設定に従ってマスタサーバーへ接続する\n        PhotonNetwork.ConnectUsingSettings();\n    }\n    \u002F\u002F マスタサーバーへ接続後\n    public override void OnConnectedToMaster()\n    {\n        \u002F\u002F \"test\"ルームに参加、なければ作成\n        PhotonNetwork.JoinOrCreateRoom(\"test\", new RoomOptions(), TypedLobby.Default);\n    }\n    \u002F\u002F マッチング成功したら呼ばれる\n    public override void OnJoinedRoom()\n    {\n        PhotonNetwork.Instantiate(\"Unitychan\", new Vector3(0,0,0), Quaternion.identity);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EまずPrefabを登録しておく必要があります。Resourcesフォルダーという名前のフォルダーにプレファブを投入します。名前が違っているとエラーになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.11.26-1024x44.png\" alt=\"\" class=\"wp-image-720\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eちなみにこの状態でプレイするとエラーが起きてインスタンス化できない\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EPhotonNetwork.Instantiate() can only instantiate objects with a PhotonView component. This prefab does not have one: Unitychan\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EUnitychanがPhotonViewを持っていない系らしいです。\u003Cbr \u002F\u003EというわけでプレファブのUnitychanにスクリプトをアタッチしてみます。特に設定はいじっていません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.47.56.png\" alt=\"\" class=\"wp-image-723\" width=\"357\" height=\"287\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E実行すると空前絶後の超絶怒涛のすごいアイドルUnityちゃんが表示されました。ドーナツも床に転がっていますが気にしないでください。おそらくもう一つのデバイスで再生するとUnityちゃんが2人になっているのだろう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.49.35.png\" alt=\"\" class=\"wp-image-724\" width=\"368\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EといわけでWebでビルドしてやってみたところ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-22.12.08.png\" alt=\"\" class=\"wp-image-727\" width=\"424\" height=\"396\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E2人登場です。しかも同じ動きをします。しかしUnityの再生側は1人しかいませんでした。まぁいいや。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさぁ、Unityちゃんが登場するともう大丈夫だ。ここまでくればあとは怖いものはないだろう。って気持ちになりますね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E無料のプランの制限\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eところでこの便利なオンライン機能ですが、無料プランには制限があるようです。\u003Cbr \u002F\u003Eというのも一つのルームに500メッセージまでという制限です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eメッセージの概念がよくわからない。出会い系でいうメッセージなら500通はなかなかのポイント消費量だがゲームでの消費量が見えにくい。\u003Cbr \u002F\u003Eとりあえず、ここでは制限が500ラブレターまでとだけ頭の片隅に置いておくことにする。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eオンライン世界の私\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eここからは資料のその２に入る\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono2\" target=\"_blank\"\u003Ehttps:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono2\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオンラインでの私を特定する便利な関数があるとのことです。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EPhotonView.IsMin\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E先ほど2人のUnitychanを同じように操作してしまった。ブラウザ側とUnity側のUnitychanの両方を動かしたのは、オンライン世界の私を特定できていなかったからだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさてここで困ったことに、俺が今Unityちゃんを操作しているスクリプトはすでに基底クラスを持っていたw\u003Cbr \u002F\u003Eだが心配することはない基底クラス側で継承すればいい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EC#は複数の継承をサポートしていないいい例だぜまったく\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E話から逸れるといけないので現状の構成だけを載せておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは以下のようなインターフェースを定義しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\n\u002F\u002F\u002F &lt;summary\u003E\n\u002F\u002F\u002F キャラクターのインターフェースです\n\u002F\u002F\u002F &lt;\u002Fsummary\u003E\npublic interface CharacterBase\n{\n    void move();\n    void action(Collider col);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にインターフェースを実装している抽象クラスです。ここに\u003Cstrong\u003EMonoBehaviourPunCallbacks\u003C\u002Fstrong\u003Eを継承する仕組みを入れてます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Photon.Pun;\npublic abstract class CharacterBasicMove : MonoBehaviourPunCallbacks, CharacterBase\n{\n.......\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eそして実装クラスはCharacterBasicMoveを継承しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epublic class UnityChanMove : CharacterBasicMove\n{\n......\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eさてキャラクター動かすUpdateメソッドに条件を入れます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    private void Update()\n    {\n        if (photonView.IsMine)\n        {\n            move();\n            anim.playRun(isRun);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでオンラインの自分自身のみを動かすという概念が入りました。\u003Cbr \u002F\u003E実行するとそれが確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-22.48.50-1024x598.png\" alt=\"\" class=\"wp-image-734\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eもう1人の僕が歩き出す\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eなんだかんだいってど素人の私でもオンライン環境を確かに利用している。\u003Cbr \u002F\u003Eここまで難しいことはない。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にやることは私以外のキャラクターの更新を行うことです。\u003Cbr \u002F\u003Eといても参考サイトによると簡単に座標の更新ができるらしいのでやってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレファブのUnityちゃんを以下のようにする。というかPhotonTransformViewをアタッチしただけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-23.37.20.png\" alt=\"\" class=\"wp-image-735\" width=\"506\" height=\"618\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eすると確かに他のプレイヤーの動きが反映されていました。ちなみにドーナツを片方が食うとちゃんと消えます。\u003Cbr \u002F\u003Eただカメラの動きがちょっとおかしい。。でも今回はここまで！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちょっとオンラインゲーム作っても公開予定がないのでしばらく更新しないと思います。\u003Cbr \u002F\u003E参考サイトをみるとだいたい使い方はわかると思います。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E今回からUnityでオンラインゲームを作ろうと思います。進捗とか技術的なことを随時メモしていこうかなと思います。 途中でプロジェクトが爆発したらごめんなさい。ガチでオンラインのオの字もわからない状態から始めます。 ※あら&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funityonline01\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityでオンラインゲームを作りたい\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[44,r,60],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F702"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=702"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F702\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=702"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=702"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=702"}],curies:[{name:g,href:h,templated:a}]}},{id:713,date:ah,date_gmt:ai,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=713"},modified:ah,modified_gmt:ai,slug:"unity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F",title:{rendered:"Unity | Animationの終了時にメソッドを実行する"},content:{rendered:"\n\u003Cp\u003E基本中の基本なのですがメモしておきます。\u003Cbr \u002F\u003EアニメーションはAnimationタブで色々と設定ができますが、よくやるのはメソッドの登録かなと思います。\u003Cbr \u002F\u003Eプラスボタン（左の黒丸）を押すと発火トリガーのようなものが登録されます（右の黒丸）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-14.03.23-1024x341.png\" alt=\"\" class=\"wp-image-715\" width=\"639\" height=\"212\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eメソッドが登録できるだけです。これはアタッチされているpublicなメソッドが登録できます。\u003Cbr \u002F\u003Eなんとこれだけです。たったこれだけでアニメーションのタイミングでメソッドを呼び出すことができるのです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-14.04.05.png\" alt=\"\" class=\"wp-image-714\" width=\"410\" height=\"137\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今作っているゲームはUnitychanがドーナツを食べるという神ゲーです。\u003Cbr \u002F\u003E今回は食べる動作のアニメーションの最後にドーナツを削除するということをやっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに登録してあるendEatAnimationメソッドはこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public void endEatAnimation()\n    {\n        Destroy(hit);\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ehitの中にはドーナツが入ってて、アニメーション終了時にドーナツを削除（食べ終える）しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-16.54.59.png\" alt=\"\" class=\"wp-image-717\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eドーナツ型の腕時計ですね。わかります。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E基本中の基本なのですがメモしておきます。アニメーションはAnimationタブで色々と設定ができますが、よくやるのはメソッドの登録かなと思います。プラスボタン（左の黒丸）を押すと発火トリガーのようなものが登録されます（右&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity | Animationの終了時にメソッドを実行する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[13,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F713"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=713"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F713\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=713"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=713"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=713"}],curies:[{name:g,href:h,templated:a}]}},{id:695,date:aj,date_gmt:ak,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=695"},modified:aj,modified_gmt:ak,slug:"jsonloadsave",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Fjsonloadsave\u002F",title:{rendered:"JsonUtilityでセーブとロードをする"},content:{rendered:"\n\u003Cp\u003E2DのTileMapゲームで厄介だったのがセーブとロード機能だった。\u003Cbr \u002F\u003EJsonUtilityを利用するとゲームのオブジェクトをJson形式で保存することができる\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず必要なのは保存対象とするものを決定しておくことです。\u003Cbr \u002F\u003E後からこれも保存したいとかあれも保存したいとかってなると、保存した結果どうやって読み込むの？っていう事態になります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eセーブデータのクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回はかなり甘いのですがidとプレイヤーの位置を保存できるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n&#91;System.Serializable]\npublic class SaveData\n{\n    public List&lt;int\u003E ids;\n    public List&lt;int\u003E mustIds;\n    public Vector2 playerPosition;\n    public string sceneName;\n    public SaveData()\n    {\n        this.ids = new List&lt;int\u003E();\n        this.mustIds = new List&lt;int\u003E();\n        this.playerPosition = new Vector2();\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれが保存対象です。このクラスがJson形式となって保存されます。\u003Cbr \u002F\u003Eポイントとしてはクラスの前に[System.Serializable]という宣言があることです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがあるとシリアライズ可能なクラスになります。\u003Cbr \u002F\u003E仕事ではJavaを使っているのですが、Javaでも時々シリアライズってのを継承しているクラスがでてきて、なんだこれって読み飛ばしていたんですが、オブジェクトなどをファイルに保存したりネットワークで送受信できるようにすることらしいです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁこれが保存対象なので当然といえば当然かもしれませんね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eセーブを行うクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実際に作ったゲームで使用したコードをそのまま掲載します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing System.IO;\npublic class SaveJson : MonoBehaviour\n{\n    const string SYSTEM_DATA_PATH = \"save.txt\";\n    public void save()\n    {\n        SaveData savedata = new SaveData();\n        \u002F\u002F最初に空にする\n        foreach(int id in savedata.ids)\n        {\n            savedata.ids.Remove(id);\n        }\n        foreach(int id in savedata.mustIds)\n        {\n            savedata.mustIds.Remove(id);\n        }\n        \u002F\u002F 非活性のアイテムリストを取得する\n        setItemIdList(savedata);\n        \u002F\u002F  プレイヤーの場所を保存する\n        setPlayerPosition(savedata);\n        savedata.sceneName = UnityEngine.SceneManagement.SceneManager.GetActiveScene().name;\n        \u002F\u002FJson形式で保存する\n        string idsString = JsonUtility.ToJson(savedata);\n        StreamWriter sw = new StreamWriter(Application.dataPath + SYSTEM_DATA_PATH);\n        \u002F\u002FDebug.Log(Application.dataPath);\n        sw.Write(idsString);\n        sw.Close();\n        Debug.Log(\"Save Finished!\");\n        TalkEventManager talkEventManager = GameObject.FindGameObjectWithTag(\"GM\").GetComponent&lt;TalkEventManager\u003E();\n        string&#91;] messages = { \"セーブしました\" };\n        talkEventManager.execute(\"\", messages);\n    }\n    private void setItemIdList(SaveData data)\n    {\n        GameObject parrent = GameObject.FindGameObjectWithTag(\"ItemParrent\");\n        foreach(Transform child in parrent.transform)\n        {\n            \u002F\u002F  非活性の要素のIDを全て取得する\n            \u002F\u002F  Item Event\n            if (!child.gameObject.activeInHierarchy)\n            {\n                data.ids.Add(child.gameObject.GetComponent&lt;EventItem\u003E().getItem().id);\n            }\n        }\n        GameObject mustparrent = GameObject.FindGameObjectWithTag(\"MustParrent\");\n        foreach(Transform child in mustparrent.transform) {\n            if (!child.gameObject.activeInHierarchy)\n            {\n                data.mustIds.Add(child.gameObject.GetComponent&lt;MustTalkEvent\u003E().id);\n            }\n        }\n    }\n    private void setPlayerPosition(SaveData data)\n    {\n        data.playerPosition = GameObject.FindGameObjectWithTag(\"Player\").transform.position;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eすみません長いのですが、やっていることは単純で、SaveDataクラスを初期化したら、SaveDataクラスのデータをどんどん設定していってる感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスをインスタンス化する\u003Cbr \u002F\u003ESaveData savedata = new SaveData();\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこんな感じでSaveDataクラスの設定を行う\u003Cbr \u002F\u003Esavedata.sceneName = UnityEngine.SceneManagement.SceneManager.GetActiveScene().name;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ejson形式(文字列)にする\u003Cbr \u002F\u003Estring idsString = JsonUtility.ToJson(savedata);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eストリームライターを利用して保存する\u003Cbr \u002F\u003EStreamWriter sw = new StreamWriter(Application.dataPath + SYSTEM_DATA_PATH);\u003Cbr \u002F\u003Esw.Write(idsString);\u003Cbr \u002F\u003Esw.Close();\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eロードを行うクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eこれも実際に書いたコードをそのまま掲載します。道Jsonとなっているのは触れないでくださいね！\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing System.IO;\npublic class RoadJson : MonoBehaviour\n{\n    const string SYSTEM_DATA_PATH = \"save.txt\";\n    public void loadData()\n    {\n        if (!this.existsFile())\n        {\n            Debug.Log(\"ファイルが見つかりませんでした。\");\n            return;\n        }\n        Debug.Log(\"JSONファイルのロードを開始します\");\n        StreamReader sr = new StreamReader(Application.dataPath + SYSTEM_DATA_PATH);\n        string readJson = sr.ReadToEnd();\n        sr.Close();\n        ItemButtonManager ibm = GameObject.FindGameObjectWithTag(\"GM\").GetComponent&lt;ItemButtonManager\u003E();\n        SaveData data = JsonUtility.FromJson&lt;SaveData\u003E(readJson);\n        GameObject parrent = GameObject.FindGameObjectWithTag(\"ItemParrent\");\n        foreach (Transform child in parrent.transform)\n        {\n            if (data.ids.Contains(child.gameObject.GetComponent&lt;EventItem\u003E().getItem().id))\n            {\n                child.gameObject.SetActive(false);\n                ibm.storeItem(child.gameObject.GetComponent&lt;EventItem\u003E().getItem());\n            }\n        }\n        GameObject mustparrent = GameObject.FindGameObjectWithTag(\"MustParrent\");\n        foreach (Transform child in mustparrent.transform)\n        {\n            if (data.mustIds.Contains(child.gameObject.GetComponent&lt;MustTalkEvent\u003E().id))\n            {\n                child.gameObject.SetActive(false);\n            }\n         }\n        GameObject player = GameObject.FindGameObjectWithTag(\"Player\");\n        player.transform.position = data.playerPosition;\n    }\n    \u002F\u002F\u002F &lt;summary\u003E\n    \u002F\u002F\u002F ファイルが存在するかどうか\n    \u002F\u002F\u002F 存在する場合はTrueを返します。\n    \u002F\u002F\u002F &lt;\u002Fsummary\u003E\n    \u002F\u002F\u002F &lt;returns\u003E&lt;\u002Freturns\u003E\n    private bool existsFile()\n    {\n        if (File.Exists(Application.dataPath + SYSTEM_DATA_PATH)){\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれもやっていることは単純です。\u003Cbr \u002F\u003EまずはSaveDataクラスを文字列からオブジェクトにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは文字列を読み込む\u003Cbr \u002F\u003EStreamReader sr = new StreamReader(Application.dataPath + SYSTEM_DATA_PATH);\u003Cbr \u002F\u003Estring readJson = sr.ReadToEnd();\u003Cbr \u002F\u003Esr.Close();\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスに変換する\u003Cbr \u002F\u003ESaveData data = JsonUtility.FromJson(readJson);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスの設定を反映させる\u003Cbr \u002F\u003Eplayer.transform.position = data.playerPosition;\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eあとがき\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eゲームを作ろうって思って勉強していると、色々な情報に出会います。Json形式で保存するというのもその一つです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし実際にゲームを作るときは&#8221;テスト&#8221;なんて文字列を保存することはありません。実際に保存するのは&#8221;セーブデータ&#8221;です。\u003Cbr \u002F\u003Eなのでどうやってロードするのか？まで考えてやらないとダメですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして、後から後から機能を追加しようってなると、セーブデータにも影響します。\u003Cbr \u002F\u003Eなのでゲームを作るときは必要最低限のものは予め決めておくことが重要。変化に強い設計をすればいいんだろうけど、、私にはまだ難しい。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E2DのTileMapゲームで厄介だったのがセーブとロード機能だった。JsonUtilityを利用するとゲームのオブジェクトをJson形式で保存することができる まず必要なのは保存対象とするものを決定しておくことです。後か&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Fjsonloadsave\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EJsonUtilityでセーブとロードをする\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[36,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F695"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=695"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F695\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=695"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=695"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=695"}],curies:[{name:g,href:h,templated:a}]}},{id:691,date:al,date_gmt:am,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=691"},modified:al,modified_gmt:am,slug:"unity2dtilemapunk",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Funity2dtilemapunk\u002F",title:{rendered:"Unityの2DTileMapを利用したゲームを作った"},content:{rendered:"\n\u003Cp\u003Eゲームタイトル\u003Cbr \u002F\u003ENAIKIOKU\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレイURL\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eゲームのルール\u003Cbr \u002F\u003EKボタン 調べる、会話を進める\u003Cbr \u002F\u003EMボタン メニューを開く\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E素材\u003Cbr \u002F\u003Eドット絵世界　\u003Ca rel=\"noreferrer noopener\" href=\"http:\u002F\u002Fyms.main.jp\" target=\"_blank\"\u003Ehttp:\u002F\u002Fyms.main.jp\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-22-21.14.04-1024x568.png\" alt=\"\" class=\"wp-image-692\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityの2Dということで、いつもと違う。ぶっちゃけていうと3Dのほうが作りやすい。もう2Dゲームは作りたく無い。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EJsonUtilityを利用したセーブとロードについても一通りやったがリリースには含めないことにしましたが、一通り使い方とかは勉強しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、とにかく完成させるためにあらゆる要素を排除しました。\u003Cbr \u002F\u003E最初は動き回る敵キャラを作ろうとか、動かせるオブジェクトを作ろうとか色々考えていましたが、欲しかった要素は全て無くしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eたぶんやってたら完成しないと思います。。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた、最終的にどうしてもこれが必要だってなってソースがどんどん汚くなりました笑\u003Cbr \u002F\u003Eなのである程度最初に必要最低限の昨日は決めておいて、設計してからやったほうがいいと思いました。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EゲームタイトルNAIKIOKU プレイURLhttps:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F ゲームのルールKボタン 調べる、会話を進めるMボタン メニューを開く 素材ドット絵世界　http:\u002F\u002Fyms.ma&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Funity2dtilemapunk\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityの2DTileMapを利用したゲームを作った\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[an,ao,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F691"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=691"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F691\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=691"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=691"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=691"}],curies:[{name:g,href:h,templated:a}]}},{id:668,date:ap,date_gmt:aq,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=668"},modified:ap,modified_gmt:aq,slug:"tilemapunit1",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F05\u002Ftilemapunit1\u002F",title:{rendered:"【Unity】Tilemapを使ってゲームを作るZE【2D】"},content:{rendered:"\n\u003Cp\u003Eずっと3Dゲームを作ってきましたが、ここから2Dゲームを作ろうと思います。\u003Cbr \u002F\u003E3Dゲームに拘ってきた理由はアセットが沢山あったからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回2Dで作るのはTilemapを使ったゲームです。\u003Cbr \u002F\u003E俺自身があんまり触ったことないので、素人目線から記事を書いていきます！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E2Dキャラの動かし方とかもあまりわからない致命的な状態ですが、とりあえずタイルマップということで画像を用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E画像はドット絵世界さんからDLしました。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"http:\u002F\u002Fyms.main.jp\u002Fdotartworld\u002Findex.html\" target=\"_blank\"\u003Ehttp:\u002F\u002Fyms.main.jp\u002Fdotartworld\u002Findex.html\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eダウンロードしてきたら、画像の設定をしていきます。一枚のスプライトシートと呼ばれる画像から切り抜いて複数の画像にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESpriteModeをMultipleに変更します。\u003Cbr \u002F\u003EそしてPixelsPerUnitを32に変更します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.47.39-1024x524.png\" alt=\"\" class=\"wp-image-672\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にSpriteEditorをクリックして画像を切り抜いていきます。\u003Cbr \u002F\u003ESliceをクリックして32*32でSliceをすると切り抜きが完了です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.47.09-1024x808.png\" alt=\"\" class=\"wp-image-673\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にタイルマップを作ります。\u003Cbr \u002F\u003EこれでGridとTilemapが作られます。次にパレットを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.55.44.png\" alt=\"\" class=\"wp-image-675\" width=\"424\" height=\"212\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ETile Palette画面を表示します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.56.31.png\" alt=\"\" class=\"wp-image-674\" width=\"402\" height=\"477\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ETilePalette画面が開くので左側のプルダウンから、Create New Paletteを押してパレットをどこに保存するか聞かれるので適当なフォルダにパレットを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E先ほど分割した画像をパレットにドラッグ&amp;ドロップします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.06.46-1024x532.png\" alt=\"\" class=\"wp-image-676\" width=\"580\" height=\"301\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E選択を押しすとパレットにどんどんタイルが追加されていきます。\u003Cbr \u002F\u003Eではどんどん塗っていきます。こんな感じで。\u003Cbr \u002F\u003EちなみにActive Tilemapというのが塗る対象のタイルマップです。これをレイヤーに見立てればオブジェクトレイヤーとかとして分けられることができるかなと。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.16.57-1024x357.png\" alt=\"\" class=\"wp-image-678\" width=\"611\" height=\"213\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eではオブジェクトレイヤーを作ります。Gridのところで新規にTilemapを追加して、名前をObjectLayerというかっこいい名前にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EアクティなタイルマップをObjectLayerにして塗っていきます。\u003Cbr \u002F\u003E今回塗る箇所はプレイヤーとの当たり判定を起こす箇所です（主に物など）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.23.37-1024x313.png\" alt=\"\" class=\"wp-image-679\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eセンスあるでしょ？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれで実行するとオブジェクトレイヤーが埋もれてしまっていますので、そこを修正します。\u003Cbr \u002F\u003EObjectLayerのTilemapRendererのOrder in Layerの数値を上げます9くらいにしておきました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.24.57-1024x744.png\" alt=\"\" class=\"wp-image-680\" width=\"520\" height=\"378\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで実行するといい感じの部屋が描画されています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.26.03.png\" alt=\"\" class=\"wp-image-681\" width=\"457\" height=\"279\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eプレイヤーを登場させましょう\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eプレイヤーにはこれから作るスプリプトと、BoxColider2DとRigidBody2Dをアタッチします。\u003Cbr \u002F\u003EさらにRigidBody2Dのプロパティは以下のようにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.31.04.png\" alt=\"\" class=\"wp-image-683\" width=\"457\" height=\"588\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eスクリプトを以下のようにします\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class Movement : MonoBehaviour\n{\n    private void Update()\n    {\n        float vertical = 0;\n        float horizontal = 0;\n        horizontal = Input.GetAxisRaw(\"Horizontal\");\n        vertical = Input.GetAxisRaw(\"Vertical\");\n        Vector2 currentVec = transform.position;\n        currentVec.x += horizontal * 0.03f;\n        currentVec.y += vertical * 0.03f;\n        transform.position = currentVec;\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にObjectLayerにTilemapCollider2Dをアタッチします。\u003Cbr \u002F\u003Eこれで実行するとプレイヤーはObjectLayerとあたり判定がおきて通過できないのが確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.34.42-1024x525.png\" alt=\"\" class=\"wp-image-685\" width=\"533\" height=\"273\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回はここまで\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eずっと3Dゲームを作ってきましたが、ここから2Dゲームを作ろうと思います。3Dゲームに拘ってきた理由はアセットが沢山あったからです。 今回2Dで作るのはTilemapを使ったゲームです。俺自身があんまり触ったことないので&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F05\u002Ftilemapunit1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Tilemapを使ってゲームを作るZE【2D】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[an,45,ao,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F668"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=668"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F668\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=668"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=668"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=668"}],curies:[{name:g,href:h,templated:a}]}},{id:630,date:ar,date_gmt:as,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=630"},modified:ar,modified_gmt:as,slug:"kaizokumusoudehanai",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F31\u002Fkaizokumusoudehanai\u002F",title:{rendered:"海賊無双みたいなゲームを想像だけで作ったらカオスなゲームになった"},content:{rendered:"\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"海賊無双みたいなゲームを想像だけで作ったら大変なことになった\" width=\"750\" height=\"563\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FVqmYHZDZX9k?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今までAI機能だとか武器を拾うだとかは、このゲームを作るためにやっていました。\u003Cbr \u002F\u003E私は海賊無双というゲームがやりたくてしかたなかったです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eですが当時PS4を持っていなくて諦めた記憶があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそれからというものの、ゲームといえばスプラトゥーンになってしまい、あの頃の気持ちを思い出すために、今回このゲームを作りました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブログでは技術的なお話を少しします。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E敵キャラクターの動きは全てAI Behaviors\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E前回の記事で勉強も兼ねて紹介しました。実はこのアセットに関する情報は少ない上に古い情報ばかりだったので大変苦労しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eやってみるとわかるのですが、基本的にNavigation機能を利用しまくったようなシステムです。\u003Cbr \u002F\u003Eコードで書くのがだるいという場合や、そこまでこだわったシステムを作らない場合は採用する価値がおおいにあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E例えばアニメーションの遷移も指定できてしまうので、アニメーションコントローラーも割りかしスッキリします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれ攻撃力とか体力とかも設定できて、スクリプトからもアクセスできるようですが、今回は使用しませんでした。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E当たり判定はActiveの切り替え\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E全ての当たり判定はActiveを切り替えて行なっています。\u003Cbr \u002F\u003E攻撃時はコライダーのついたゲームオブジェクトをActiveに切り替えて当たり判定を行なっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-31-0.46.47-1024x539.png\" alt=\"\" class=\"wp-image-635\" width=\"595\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えば剣でいうと持っているときは当たり判定がおきません。理由は当たり判定用のゲームオブジェクトがActiveになっていないからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただしアニメーションを開始したらActiveに切り替えて敵との当たり判定を行なっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-31-0.49.27-1024x606.png\" alt=\"\" class=\"wp-image-636\" width=\"642\" height=\"380\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eコライダーは割と大きめに設定しました。そのほうが無双っぽいと思ったので。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E変なゲームになりましたが、やってみてください＞＜\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F 今までAI機能だとか武器を拾うだとかは、このゲームを作るためにやっていました。私は海賊無双というゲームがやりたくてしかたなかったです。 ですが当時PS4を&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F31\u002Fkaizokumusoudehanai\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E海賊無双みたいなゲームを想像だけで作ったらカオスなゲームになった\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[at,r,ae],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F630"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=630"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F630\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=630"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=630"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=630"}],curies:[{name:g,href:h,templated:a}]}},{id:593,date:au,date_gmt:av,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=593"},modified:au,modified_gmt:av,slug:"aibehaviorhowtouse",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F30\u002Faibehaviorhowtouse\u002F",title:{rendered:"【無料アセット】AI Behaviorを使う【初心者】"},content:{rendered:"\n\u003Cp\u003Eこの記事は\u003Cstrong\u003EAI Behavior\u003C\u002Fstrong\u003Eを使いたいので調査の記録です。正直このアセットの使い方全く知らない状態での調査になりますので、間違っている内容がある可能性が非常に可能性として、まぁ可能性としてある可能性があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E一応PDFのマニュアルを読みつつ進めます。引用箇所はグーグル翻訳かけたった箇所ですw\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E調査対象　08a_state_ranged_attack_and_move\u003Cbr \u002F\u003Eパス Assets\u002FAIBehavior\u002FScenes\u002FVideo_Examples\u002FStates\u002F08_state_ranged_attack.unity\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこのシーンは敵キャラがなんか丸い物体を投げてくる。敵キャラから離れると追いかけてくる。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E基本情報の確認\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずはどんなステートが登録されているか確認\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.06.25.png\" alt=\"\" class=\"wp-image-594\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E再生してみるとIdleとSeekとRangedAttackが使われている。Fleeはよくわからん。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず、Idleはアイドル状態で他のステータスへの遷移を行なっている。\u003Cbr \u002F\u003ESeekが追っかけてくる。攻撃は攻撃のステートのやつ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EIdleステートのTriggersを調査\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.08.14.png\" alt=\"\" class=\"wp-image-595\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E一番下のChange to Stateが次のステートへの遷移で、その条件が上に書いてあると思う。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.12.42.png\" alt=\"\" class=\"wp-image-598\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそれでいうと、一応Fleeステートへの遷移情報もある。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E3.4.2 Beyond distance trigger\u003C\u002Fp\u003E\u003Ccite\u003E3.4.2距離を超えたトリガー\u003Cbr \u002F\u003EAIターゲットタグのあるGameObjectが指定された「距離」よりも遠いかどうかを確認します。 「チェックモード」は、タグの付いたゲームオブジェクトまたはそのすべてが距離を超えているかどうかを指定します。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E3.4.21 Within distance trigger\u003C\u002Fp\u003E\u003Ccite\u003E3.4.21距離内トリガー\u003Cbr \u002F\u003E指定されたタグを持つGameObjectが指定された距離よりも近いかどうかをチェックします。 「チェックモード」は、タグ付きのゲームオブジェクトまたはそれらすべてが距離内にあるかどうかを指定します。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eプレイヤーを判断しているのはGeneral AP Propertiesでタグ(Player)を指定しているのかなと。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.22.06.png\" alt=\"\" class=\"wp-image-601\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003ESeekステートの調査\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E走って追いかけてくるときのステート\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.24.11.png\" alt=\"\" class=\"wp-image-603\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E距離が10になったら攻撃ステートへ遷移している。またAnimationsでアニメーションを設定しているのがわかる。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E2.3.3 Seek State\u003C\u002Fp\u003E\u003Ccite\u003E2.3.3シーク状態\u003Cbr \u002F\u003E&#8220;No Seek Target Transition&#8221;「シークターゲット遷移なし」は、ターゲットがない場合に変化する状態です。\u003Cbr \u002F\u003E&#8220;No Movement Transition&#8221;は、AIが何らかの理由（たとえば、ターゲットに到達できないなど）で停止したときに発生する状態です。\u003Cbr \u002F\u003E「Seek Target Reached Transition」は、ターゲットに到達したときに変化する状態です（たとえば、AIがプレイヤーを追跡していて、プレイヤーに到達したときに攻撃状態に変わります）。\u003Cbr \u002F\u003E「Distance To Target Threshold」は、AIがターゲットに近づく距離です。 有効にすることもできます\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003ERangedAttackステートの調査\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eトリガーなどの設定はほとんどない（なんてこったー）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.31.25.png\" alt=\"\" class=\"wp-image-606\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eその代わりAttackPropertiesが結構書いてあります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.32.18.png\" alt=\"\" class=\"wp-image-608\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eダメージやら書いてあるます。でも一番大事なのは一番下かな？メソッド呼び出し設定ですね。\u003Cbr \u002F\u003EExample Attack Compoenentってスクリプトがアタッチされています。このスクリプトのRangedAttackメソッドを呼んでいるようです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E攻撃タイミングはアニメーションによるのかな？\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E2.3.5 Attack State &amp; Mecanim Attack State\u003C\u002Fp\u003E\u003Ccite\u003E「攻撃ベース」は、「攻撃方法」が呼び出されるタイミングを定義します。これは、アニメーションの特定のポイントまたは時間間隔に基づくことができます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003E応用編使ってみる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eというわけで、ちょっと使ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今、開発中のゲームなので色々記載されていますが、気にしないでください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAI管理したいオブジェクトを選択して、ToolsからAI Behavior &gt; Mecanim Setupを選択すると、色々と勝手にアタッチされます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.19.12.png\" alt=\"\" class=\"wp-image-613\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E地面にはNavigationをbakeして歩けるようにしておきます。\u003Cbr \u002F\u003E次にAIにNav Mesh Agentをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最初に色々なステートが付いているのでIdleとAttackとSeekとFlee以外を消しておきます。\u003Cbr \u002F\u003E（画像はIdleに-してますがIdleは残しておいてください）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.26.16.png\" alt=\"\" class=\"wp-image-615\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとりあえずIdleからAttackにしてみようと思います。（まずは簡単なところからいきますw）\u003Cbr \u002F\u003EIdleのEidtを押してIdleの編集をします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E下記のようなトリガーを追加します。\u003Cbr \u002F\u003Eとりあえずトリガー条件をWithinDistanceTriggerにしてください。画像のDistanceが0になっていますが、10にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.38.53.png\" alt=\"\" class=\"wp-image-616\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eその前にアニメーションの設定を行います。AI Animation Stateスクリプトをみます。これはアニメーションを管理するスクリプトです。ここに登録されているアニメーションのステート名をレイヤー.ステート名で指定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.50.51.png\" alt=\"\" class=\"wp-image-618\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそしたら、いったりきたりになりますが、Idleの設定に持っどってAnimationsに先ほど追加したアニメーションを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.46.27.png\" alt=\"\" class=\"wp-image-617\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次に攻撃のステートの設定をします。\u003Cbr \u002F\u003E攻撃のAnimationsは攻撃用のステートにしておきます。攻撃用のメソッドを追加しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれを追加にするにはAIBehavior.AttackDataを引数にとったメソッドが必要らしいです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyAITest.cs\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\nusing UnityEngine;\nusing AIBehavior;\npublic class EnemeyAITest : MonoBehaviour\n{\n    public void Test(AttackData attackData)\n    {\n        Debug.Log(\"AI-TEST\");\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EこれをAIキャラクターにアタッチしておきます。そうするとメソッドが選択できるようになります。\u003Cbr \u002F\u003Eかならずpublicメソッドにしてください。参照できません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-21.21.04.png\" alt=\"\" class=\"wp-image-619\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eよーし実行実行！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eうーんステートが変化してるんだけよくわからんw\u003Cbr \u002F\u003Eというわけで、私の場合はステート変化しませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E見直す点はここです。\u003Cbr \u002F\u003Eアニメーションの設定スクリプトでCross Fade In とCross Fade Outにチェックを入れました。\u003Cbr \u002F\u003Eあと、アニメーションのステートNameは空白に注意してくださいw\u003Cbr \u002F\u003E私は空白があってうまく動いていませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-0.46.27.png\" alt=\"\" class=\"wp-image-622\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでうまく行きました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E近寄ると攻撃してくる\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-0.48.51.png\" alt=\"\" class=\"wp-image-623\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんとなくコツというか基本操作は覚えたので、ゴリゴリ組んでいけそうな気がする・・・？\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E1.4.2 Mecanim animations\u003C\u002Fp\u003E\u003Ccite\u003E追加のコードなしでAIがアニメーションを完全に制御できるようにするには、「クロスフェードイン」および「クロスフェードアウト」オプションをオンにする必要があります。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003E追記メモ\u003C\u002Fh2\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EQ. 攻撃時に意図しない動きになる\u003C\u002Fp\u003E\u003Ccite\u003EA. AIBehabiorsの攻撃ステートがMecanimAttackStateになっていることを確認します。\u003Cbr \u002F\u003E例えば、普通のAttackStateだと私の場合はダメでした。\u003Cbr \u002F\u003E\u003Cbr \u002F\u003Eまた、攻撃ステートのFind Visible Target Onlyのチェックも外しておくと良いかも。\u003Cbr \u002F\u003E\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-7.59.56-1.png\" alt=\"\" class=\"wp-image-627\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-8.01.44.png\" alt=\"\" class=\"wp-image-628\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eこの記事はAI Behaviorを使いたいので調査の記録です。正直このアセットの使い方全く知らない状態での調査になりますので、間違っている内容がある可能性が非常に可能性として、まぁ可能性としてある可能性があります。 一応&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F30\u002Faibehaviorhowtouse\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【無料アセット】AI Behaviorを使う【初心者】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[ab,14,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F593"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=593"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F593\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=593"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=593"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=593"}],curies:[{name:g,href:h,templated:a}]}},{id:580,date:aw,date_gmt:ax,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=580"},modified:aw,modified_gmt:ax,slug:"kantanbenrioisii",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F",title:{rendered:"簡単に複数のアイテムを入れ替える処理"},content:{rendered:"\n\u003Cp\u003E前回の記事ではアイテム側にスクリプトを持たせていました。あれはあれでいいんですけど\u003Cbr \u002F\u003Eアイテムが複数あった場合はうまくいきません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eということでアイテムを入れ替えるような処理をしていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはUnityちゃんに空のゲームオブジェクトをつけてコライダーとRigidbodyを設定していきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.00.21-1-1024x403.png\" alt=\"\" class=\"wp-image-582\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eアイテム側はスクリプト消しておきます。\u003Cstrong\u003EそしてItemというタグ\u003C\u002Fstrong\u003Eをつけておいてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.01.18-1024x525.png\" alt=\"\" class=\"wp-image-583\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを作成します。前回のスクリプトと似ているので大丈夫です。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnitychanItemManager : MonoBehaviour\n{\n    \u002F\u002F アイテムを持っているかどうか\n    private bool hasItem = false;\n    private const string ITEM_TAG_NAME = \"Item\";\n    private GameObject currentWeapon;\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.R))\n        {\n            \u002F\u002Fアイテムを持っている時に、リリースする\n            if(hasItem)\n            {\n                ReleaseItem();\n            }\n        }\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if(col.tag == ITEM_TAG_NAME)\n        {\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002F アイテムをすでに所持している場合は拾えない。\n                if (hasItem)\n                {\n                    return;\n                }\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                col.gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                col.transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                col.transform.localRotation = Quaternion.Euler(0, 100, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.hasItem = true;\n                this.currentWeapon = col.gameObject;\n            }\n        }\n    }\n    \u002F**\n     *\n     * 現在、手にしている武器を親(右手)から離す処理。\n     *\n     * *\u002F\n    private void ReleaseItem()\n    {\n        \u002F\u002F 親から外す\n        this.currentWeapon.transform.parent = null;\n        this.currentWeapon = null;\n        this.hasItem = false;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E説明はコメントで書いておきましたのでざっくり説明します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EアイテムAを持っているときはリリースしないと別のアイテムを取得できません。\u003Cbr \u002F\u003EリリースはRボタンを押すとできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれを先ほどUnitychanの子要素に追加した空のゲームオブエジェクトにアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E銃を持った後\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.04.37.png\" alt=\"\" class=\"wp-image-584\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eリリースして剣を持つ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.05.20.png\" alt=\"\" class=\"wp-image-586\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E前回の記事ではアイテム側にスクリプトを持たせていました。あれはあれでいいんですけどアイテムが複数あった場合はうまくいきません。 https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F と&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E簡単に複数のアイテムを入れ替える処理\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,ay,72],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F580"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=580"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F580\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=580"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=580"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=580"}],curies:[{name:g,href:h,templated:a}]}},{id:553,date:az,date_gmt:aA,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=553"},modified:az,modified_gmt:aA,slug:"itemsetsuge",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F",title:{rendered:"わかりやすい！アイテムを拾ってキャラクターにセットするまで"},content:{rendered:"\n\u003Cp\u003Eこの記事には最新版があります\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eかっこいい剣を見つけたので使ってみようと思う。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.28.50-1024x443.png\" alt=\"\" class=\"wp-image-554\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E早速地面に置いてみた。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.29.44.png\" alt=\"\" class=\"wp-image-555\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eかっっけー！！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eボックスコライダーをつけます。さらにトリガーにしておきます。\u003Cbr \u002F\u003Eこれでプレイヤーがこの範囲に入った時に、武器をセットするかしないか選択できるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.32.43-1024x682.png\" alt=\"\" class=\"wp-image-557\" width=\"503\" height=\"334\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして当たり判定を行う前にUnitychanにRigidbodyをつけておきます。今回はGravityを0にしています。あと、コライダーもつけておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-11.04.26.png\" alt=\"\" class=\"wp-image-559\" width=\"359\" height=\"552\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ItemGetEvent : MonoBehaviour\n{\n    private GameObject player;\n    private const string UNITYCHAN = \"Unitychan\";\n    private bool setedItem = false;\n    private void Start()\n    {\n        \u002F\u002F プレイヤーにUnitychanのタグをつけておいてください\n        player = GameObject.FindGameObjectWithTag(UNITYCHAN);\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if (this.setedItem)\n        {\n            return;\n        }\n        if(col.tag == UNITYCHAN)\n        {\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n            }\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eさぁ、これで剣に近づいてGボタンを押します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-16.57.28.png\" alt=\"\" class=\"wp-image-567\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E剣を持つことに成功です。\u003Cbr \u002F\u003E剣の角度を変えたい場合はスクリプトを以下のようにしてください\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                transform.localRotation = Quaternion.Euler(0, 180, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n            }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-17.05.50.png\" alt=\"\" class=\"wp-image-569\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eヤンキーみたいに剣を持つことに成功です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E剣に近寄ったら持てることを知らせる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E近寄ったら持てるということをユーザーに知らせましょう。\u003Cbr \u002F\u003Eちょっと荒技感ありますが、とりあえずやります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずはエフェクトを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.56.12-1024x378.png\" alt=\"\" class=\"wp-image-572\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの中のエフェクトを剣の子要素にして非アクティブにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.57.08.png\" alt=\"\" class=\"wp-image-573\" width=\"289\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを編集します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ItemGetEvent : MonoBehaviour\n{\n    private GameObject player;\n    private const string UNITYCHAN = \"Unitychan\";\n    private bool setedItem = false;\n    &#91;SerializeField]\n    private GameObject effect;\n    private void Start()\n    {\n        \u002F\u002F プレイヤーにUnitychanのタグをつけておいてください\n        player = GameObject.FindGameObjectWithTag(UNITYCHAN);\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if (this.setedItem)\n        {\n            return;\n        }\n        if(col.tag == UNITYCHAN)\n        {\n            if(!this.setedItem)\n            {\n                this.effect.SetActive(true);\n            }\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                transform.localRotation = Quaternion.Euler(0, 180, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n                this.effect.SetActive(false);\n            }\n        }\n    }\n    private void OnTriggerExit(Collider col)\n    {\n        if (col.tag == UNITYCHAN)\n        {\n             this.effect.SetActive(false);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E近寄るとエフェクトが発火します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.51.54-1024x456.png\" alt=\"\" class=\"wp-image-574\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eこの記事には最新版があります⇨https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F かっこいい剣を見つけたので使ってみようと思う。 早速地面に置いてみた。 かっっけー！！ ボ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003Eわかりやすい！アイテムを拾ってキャラクターにセットするまで\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,ay,73],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F553"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=553"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F553\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=553"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=553"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=553"}],curies:[{name:g,href:h,templated:a}]}},{id:537,date:aB,date_gmt:aC,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=537"},modified:aB,modified_gmt:aC,slug:"unitymuitemukimuki",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Funitymuitemukimuki\u002F",title:{rendered:"【Unity】向いてる方向に動くという狂人ムーブを救いたい"},content:{rendered:"\n\u003Cp\u003E勉強用です。一緒にどうぞ^^^;\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.08.48.png\" alt=\"\" class=\"wp-image-539\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E私たちはカメラマンだ。このモデルが向いてる方向に歩いてくるということは、カメラマンに近寄ってくるということだ。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class MoveTest : MonoBehaviour\n{\n    \u002F\u002F Update is called once per frame\n    void Update()\n    {\n        Debug.Log(transform.forward);\n        transform.position += transform.forward * Time.deltaTime;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでカメラマンに近寄ってくる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにtransform.forwardで得られるあたいは\u003Cbr \u002F\u003E(0,0,1)だこれはZが1ですね。つまりZ方向に向かって移動しているのがわかる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.43.18-1024x487.png\" alt=\"\" class=\"wp-image-542\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして回転させると、カメラマンからどんどん離れていく。なぜならば、zがマイナス値だからだ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.46.41-1024x481.png\" alt=\"\" class=\"wp-image-544\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度は上ボタンを押して移動するようにしよう。そしてさらにカメラマンの位置も変更しよう\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.51.25.png\" alt=\"\" class=\"wp-image-545\" width=\"526\" height=\"531\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eさぁ実行して上キーを押すとなんとUnityちゃんが近寄ってくるではないか\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.52.29-1024x468.png\" alt=\"\" class=\"wp-image-546\" width=\"527\" height=\"241\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E何もおかしいことはない。いやおかしい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなんでかっていうと、上ボタンを押しているのにカメラマンに近寄ってきているからです。これスプラトゥーンでいったら上方向の入力をしているのに、後退している動きです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eだから、カメラ起点にした動きにしないとダメだったんです。\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもしこの時、カメラの向いている方向に動くならば、Unityちゃんはカメラマンから遠ざかっていました。でもゲームならこれが正しい動きです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E２Dゲームとかならアリよりのアリかと思います。しかしカメラがプロのアングルですごい撮影をするようなゲームではこの動きはいけません。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eカメラの向いている方向に動かす\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E以下は完全に自分の試験用です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコード\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class MoveTest : MonoBehaviour\n{\n    \u002F\u002F Update is called once per frame\n    void Update()\n    {\n        Debug.Log(transform.forward);\n        if (Input.GetKey(\"up\")) {\n            transform.position += Camera.main.transform.forward * Time.deltaTime;\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E結果逆の結果になりました。上ボタンを押すとどんどん遠ざかっていく、正しい動きになりました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-22.00.48-1024x549.png\" alt=\"\" class=\"wp-image-550\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回のポイントはtransform.forwardだ。\u003Cbr \u002F\u003Eこれはオブジェクトの向いている方向を取得できるので、カメラの向いてる方向も取得できるってわけだ。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E勉強用です。一緒にどうぞ^^^; 私たちはカメラマンだ。このモデルが向いてる方向に歩いてくるということは、カメラマンに近寄ってくるということだ。 これでカメラマンに近寄ってくる。 ちなみにtransform.forwar&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Funitymuitemukimuki\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】向いてる方向に動くという狂人ムーブを救いたい\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[25,r,62],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F537"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=537"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F537\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=537"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=537"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=537"}],curies:[{name:g,href:h,templated:a}]}},{id:518,date:aD,date_gmt:aE,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=518"},modified:aD,modified_gmt:aE,slug:"procameramanero",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F",title:{rendered:"Cinemachineを使ってノンコードカメラワークを実現する"},content:{rendered:"\n\u003Cp\u003Eプロアングルでの撮影も可能なプロカメラであるChinemachineを使ってUnityちゃんを動かします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキャラクターを動かそうとしたときにカメラの向いてる方向を起点として動かさないと思わぬ動きをすることがあります。例えば前進しようとしてるのに右に移動したり。理由は簡単で、プレイヤーの動く方向とカメラが写している方向がマッチしていないからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなのでプレイヤーはカメラを起点にして動かします。\u003Cbr \u002F\u003Eそしてそのカメラにはある程度自動で動いてもらおうという考えです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回使うカメラがFreeLookカメラです。こいつは設定したキャラクターの周りを上中下のレベルで自由に動き回ることができるカメラで、よくわるサードパーソンカメラと同じような感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以前書いた記事\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFreeLookカメラを追加したら以下のように設定します。\u003Cbr \u002F\u003EFollow = unitychan\u003Cbr \u002F\u003ELook At = unitychanに追加した空のゲームオブジェクト(unitychanの頭の位置に設定します)\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.45.47-1024x288.png\" alt=\"\" class=\"wp-image-522\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次に大切な設定です。\u003Cbr \u002F\u003EBindingTypeをWordSpaceにします。これはですね、よくわかりませんが、カメラがワールド空間で同じ方向を向いてターゲットを追いかけるとUnityデザイナーズバイブルには書いてありますね。はい。（なんのことかさっぱりだわ）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.48.00.png\" alt=\"\" class=\"wp-image-523\" width=\"244\" height=\"219\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでカメラの動きはバッチリでーす\u003Cbr \u002F\u003EGameWindowGuidesをオンにするとガイドが表示されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.50.28.png\" alt=\"\" class=\"wp-image-524\" width=\"533\" height=\"415\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスクリプトの記載\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eカメラの向きを起点にして移動させます。\u003Cbr \u002F\u003E正直いってカメラの向きとかよくわからないので他のサイトを参考にしました。あざっす\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003EVector3.Scale\u003C\u002Ftd\u003E\u003Ctd\u003E2 つのベクトルの各成分を乗算します\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003Etransform.forward\u003C\u002Ftd\u003E\u003Ctd\u003Eオブジェクトの正面の向き\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003EVector3.Normalize\u003C\u002Ftd\u003E\u003Ctd\u003Emagnitude を 1 としたベクトルを作成します\u003Cbr \u002F\u003EDebug.Log(new Vector3(1, 1, 1).normalized);\u003Cbr \u002F\u003E(0.6, 0.6, 0.6)\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Cbr \u002F\u003E汚いけどコードです。変数を割り当てるなどして綺麗にするといいと思います。\u003Cbr \u002F\u003E正直normalizedがよくわからん。つけると動きが滑らかになっている感じがするが。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnityChanInput : MonoBehaviour\n{\n    &#91;SerializeField]\n    private Camera camera;\n    &#91;SerializeField]\n    private float moveSpeed = 0.05f;\n    void FixedUpdate()\n    {\n        float inputHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        float inputVertical = Input.GetAxisRaw(\"Vertical\");\n        Vector3 movepos = inputVertical * Vector3.Scale(camera.transform.forward, new Vector3(1, 0, 1)).normalized * moveSpeed + inputHorizontal * camera.transform.right * moveSpeed;\n        transform.position = new Vector3(transform.position.x + movepos.x,0,transform.position.z + movepos.z);\n        \u002F\u002F 移動方向にプレイヤーを回転（向きを変える）\n        if(movepos != Vector3.zero) {\n            transform.rotation = Quaternion.LookRotation(movepos);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-18.59.45-1024x574.png\" alt=\"\" class=\"wp-image-530\" width=\"467\" height=\"261\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EVector3.Scale(camera.transform.forward, new Vector3(1, 0, 1))としないと上の画像のようにカメラのY方向の回転まで計算されてしまう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれである程度完成です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはカメラのRigをいじってカメラの移動範囲を制限すると好みのカメラができると思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに私はこんな感じにしました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-20.50.11-502x1024.png\" alt=\"\" class=\"wp-image-534\" width=\"346\" height=\"705\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EYAxisのInvertにチェックを入れてカメラの動きを逆転させました。\u003Cbr \u002F\u003E移動範囲も少し狭くして視界に制限をかけました。ここはお好みで。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-20.51.53.png\" alt=\"\" class=\"wp-image-535\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラに対するスクリプトは一切書いてないですが、かっちょええ感じのカメラが勝手にできますし、パラメータもインスペクタタブから編集できるので、カメラをスクリプトから操作するよりも高性能かと思います。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Eメモ\u003C\u002Fp\u003E\u003Ccite\u003EスクリプトからBinding Modeを変更する\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Evcamera.GetCinemachineComponent&lt;CinemachineTransposer\u003E().m_BindingMode = CinemachineTransposer.BindingMode.LockToTargetWithWorldUp;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eプロアングルでの撮影も可能なプロカメラであるChinemachineを使ってUnityちゃんを動かします。 キャラクターを動かそうとしたときにカメラの向いてる方向を起点として動かさないと思わぬ動きをすることがあります。例&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003ECinemachineを使ってノンコードカメラワークを実現する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F518"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=518"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F518\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=518"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=518"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=518"}],curies:[{name:g,href:h,templated:a}]}},{id:493,date:aF,date_gmt:aG,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=493"},modified:aF,modified_gmt:aG,slug:"conboattack",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F25\u002Fconboattack\u002F",title:{rendered:"超わかりやすいUnityちゃんでコンボアニメーション"},content:{rendered:"\n\u003Cp\u003E今回はUnityちゃんでコンボアニメーションを超わかりやすく作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずはアニメーターを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-23.38.08.png\" alt=\"\" class=\"wp-image-496\" width=\"431\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eアニメーションはアセットストアでfightで検索すればゴロゴロ出てくるので、適当に使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして作成したコントローラーをダブルクリックして、Animatorウインドウを表示します。\u003Cbr \u002F\u003Eそして３つほどステートを作成して画像のように線を引っ張ってください\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.03.25.png\" alt=\"\" class=\"wp-image-500\" width=\"511\" height=\"344\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E一旦このようにします。\u003Cbr \u002F\u003E何をするかというとアニメーションを連続で再生します。まずはコンボ技なんて考えず、どういったアニメーションを連続で繰り出すのか見ていきましょう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこのコントローラーをUnitychanにアタッチします。\u003Cbr \u002F\u003EこれでUnitychanが動く準備ができました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.04.32-1-1024x506.png\" alt=\"\" class=\"wp-image-502\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EまたAnimatorウインドウに戻って、追加した３つのステートに適当にアニメーションをつけます。\u003Cbr \u002F\u003Eステートを選択して、Motionにアニメーションを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.09.21-1024x350.png\" alt=\"\" class=\"wp-image-504\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生するとUnitychanが連続コンボを繰り出しているのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.10.46.png\" alt=\"\" class=\"wp-image-505\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあとはボタンを押して制御できるようにしていきましょう。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EStateMachineBehaviourを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E普段Unityからスクリプトを作成すると\u003Cstrong\u003EMonoBehaviour\u003C\u002Fstrong\u003Eというクラスを継承したクラスが作成されます。\u003Cbr \u002F\u003EStateMachineBehaviourというのはアニメーションの最初のフレームやら最後のフレームやれでメソッドを実行できるものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.unity3d.com\u002Fja\u002Fcurrent\u002FScriptReference\u002FStateMachineBehaviour.html\"\u003Ehttps:\u002F\u002Fdocs.unity3d.com\u002Fja\u002Fcurrent\u002FScriptReference\u002FStateMachineBehaviour.html\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけでスクリプトを作成して、このクラスを継承させる以下のコードを記載します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnityChanComb : StateMachineBehaviour\n{\n    \u002F\u002F 最初のフレームで呼ばれる\n    public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        animator.SetBool(\"Attack\", false);\n    }\n    \u002F\u002F　最後のフレームで呼ばれる\n    public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        animator.SetBool(\"Attack\", false);\n    }\n    \u002F\u002F最初と最後のフレーム以外で呼ばれる\n    public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        if (Input.GetKeyDown(KeyCode.A))\n        {\n            animator.SetBool(\"Attack\", true);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E基本的にアニメーションが走った時にアニメーションを終了させるフラグを立てます。\u003Cbr \u002F\u003Eそうすることで一つのアニメーションが終わったら終わり。つまりコンボさせないことができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンボさせたいときは最初のフレーム以外でtrueにしておくというイメージです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは作っていたコントローラーにAttackというboolのパラメータを追加して、トランジションの設定を行います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.11.45.png\" alt=\"\" class=\"wp-image-508\" width=\"456\" height=\"155\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EIdleステートを追加しておきます。ついでにSet as Layer Default Stateにします。これで初期ステートになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.16.25-1024x476.png\" alt=\"\" class=\"wp-image-509\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E全ての線にAttack trueを設定しおきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.18.16-1024x657.png\" alt=\"\" class=\"wp-image-511\" width=\"516\" height=\"330\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生するとIdle状態のままです。なんでかっていうと、Attackがtrueになっていないからです。さきほど作成したスクリプトをステートに適用します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.12.44-1024x482.png\" alt=\"\" class=\"wp-image-513\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでAボタンを押した時に、アニメーションが再生されます。\u003Cbr \u002F\u003Eこのままではアニメーションが一つずつ進んでしまいます。\u003Cbr \u002F\u003EようするにAボタンを押すたびにコンボが進みます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E一度でもコンボが発生しない場合はIdleに戻してあげましょう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.21.05-1024x631.png\" alt=\"\" class=\"wp-image-514\" width=\"584\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでコンボの完成です。連打しているとコンボになりますし、ボタンを押さないでいるとステートがアイドルに戻るようになりました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.30.11.png\" alt=\"\" class=\"wp-image-516\" width=\"125\" height=\"185\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E今回はUnityちゃんでコンボアニメーションを超わかりやすく作ってみます。 まずはアニメーターを作成します。 アニメーションはアセットストアでfightで検索すればゴロゴロ出てくるので、適当に使います。 そして作成したコ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F25\u002Fconboattack\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E超わかりやすいUnityちゃんでコンボアニメーション\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,aH,66],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F493"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=493"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F493\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=493"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=493"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=493"}],curies:[{name:g,href:h,templated:a}]}},{id:483,date:aI,date_gmt:aJ,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=483"},modified:aI,modified_gmt:aJ,slug:"tensaigame1",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F24\u002Ftensaigame1\u002F",title:{rendered:"【Unity】制作期間1日で3Dゲーム作ってみた"},content:{rendered:"\n\u003Cp\u003Eハイスピードで3Dゲームを作ってみました。\u003Cbr \u002F\u003E前回の逃走中ゲーム作成で得たノウハウにDungeon Architectというアセットのパワーをプラスして、最速でそこそこのゲーム作成に成功しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Ftensaigame\u002Fweb\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Ftensaigame\u002Fweb\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDungeon Architectのチュートリアルを少しやったのですが時間的に足りないと思ったので、サンプルを拝借しました（爆）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-7.54.03-1024x594.png\" alt=\"\" class=\"wp-image-486\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eステージは３つあって難易度で分かれています\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E前回の逃走中ゲームに似ているのですが、敵キャラに見つからないようにゴールを目指します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-7.55.29-1024x612.png\" alt=\"\" class=\"wp-image-487\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eゲーム要素として途中で落ちているお菓子を拾うことができるようにして、スコア機能を作りました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-8.00.34-1024x486.png\" alt=\"\" class=\"wp-image-488\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E本当は敵キャラクターを攻撃してぶっ壊せるような仕組みを入れようとしたのですが、そうするとゲームが簡単になり過ぎるのでやめました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回はDungeon Architectという最強アセットに出会ったので、次回はもっとこのアセットを使いこなして、アクションゲーム的なものを作成したいなと思っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回やってみようと思った理由の一つに「unity1week」という存在があります。なんかTwitterみていたら、１週間でゲームを作ろうという企画をやっているらしく、私もやりたいと思いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E私の場合は逃走中ゲームを作ったばかりだったので「unity1day」にしました。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eハイスピードで3Dゲームを作ってみました。前回の逃走中ゲーム作成で得たノウハウにDungeon Architectというアセットのパワーをプラスして、最速でそこそこのゲーム作成に成功しました。 https:\u002F\u002Fvolkr&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F24\u002Ftensaigame1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】制作期間1日で3Dゲーム作ってみた\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[23,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F483"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=483"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F483\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=483"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=483"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=483"}],curies:[{name:g,href:h,templated:a}]}},{id:472,date:aK,date_gmt:aL,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=472"},modified:aK,modified_gmt:aL,slug:"animedokuzi",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F22\u002Fanimedokuzi\u002F",title:{rendered:"vThirdPersonに独自のアニメーションを追加する方法"},content:{rendered:"\n\u003Cp\u003EvThirdPersonを使うと簡単に高機能ハイセンスプロアングルカメラを追加できます。\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは普通に作る\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-0.01.17-909x1024.png\" alt=\"\" class=\"wp-image-473\" width=\"486\" height=\"547\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E攻撃アニメーションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EこれでCreateするとカメラもプレイヤーのアニメーションも全て完成された状態になっています。\u003Cbr \u002F\u003Eでは、アニメーションを追加するにはどうしたらいいのか？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E移動のアニメーションはこのままでいいとして、攻撃アニメーションを追加してみます。\u003Cbr \u002F\u003Eまず、そもそもこんなコントローラーになっているのです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"492\" height=\"228\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.32.14.png\" alt=\"\" class=\"wp-image-475\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E移動に関してはLocomotionが担っております。スペースキーを押すとジャンプできますが、それはAirborneが担っております。しかし線がありません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれはどういうことかというと、\u003Cstrong\u003ECrossFadeInFixedTime\u003C\u002Fstrong\u003Eというメソッドを利用しています。\u003Cbr \u002F\u003Eこれについては詳しい記事がありました。\u003Cbr \u002F\u003E⇨\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.hanachiru-blog.com\u002Fentry\u002F2019\u002F05\u002F14\u002F185408\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.hanachiru-blog.com\u002Fentry\u002F2019\u002F05\u002F14\u002F185408\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E簡単に言えばスクリプトからアニメーションを操作します。そうすることで大量の線で結ばれたコントローラーから解放されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E第一引数にステート名、第二引数に遷移にかかる時間を指定してメソッドを利用します。\u003Cbr \u002F\u003EvThirdPersonControllerではこのように使用されています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        public virtual void Jump()\n        {\n            \u002F\u002F trigger jump behaviour\n            jumpCounter = jumpTimer;\n            isJumping = true;\n            \u002F\u002F trigger jump animations\n            if (input.sqrMagnitude &lt; 0.1f)\n                animator.CrossFadeInFixedTime(\"Jump\", 0.1f);\n            else\n                animator.CrossFadeInFixedTime(\"JumpMove\", .2f);\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこうやってみると使い方は簡単なので早速攻撃アニメーションを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EvThirdPersonControllerに以下を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        public virtual void Punch()\n        {\n            if (!isJumping)\n            {\n                animator.CrossFadeInFixedTime(\"Punch\", 0.1f);\n            }\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E続いてvThirdPersonInputに以下のメソッドを追加します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n        protected virtual void PunchInput()\n        {\n            if (Input.GetKeyDown(KeyCode.U))\n            {\n                cc.Punch();\n            }\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EさらにvThirdPersonInputのInputHandleメソッドにこのメソッドを呼ぶように追記します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        protected virtual void InputHandle()\n        {\n            MoveInput();\n            CameraInput();\n            SprintInput();\n            StrafeInput();\n            JumpInput();\n            PunchInput();\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EちなみにこのメソッドはUpdateから呼ばれているメソッドです。これでPunchを繰り出す準備ができました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはSub-State Machineを追加します。適当にAtackという名前でもつけておきます。そしたら作成したAtackをダブルクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"792\" height=\"388\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.41.36.png\" alt=\"\" class=\"wp-image-476\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EステートをPunchという名前で追加します。ここは名前をスクリプトに合わせておく必要があります。追加すると勝手にEntryから線が引かれます。ステートを追加したらExitに線を引っ張っておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"704\" height=\"250\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.43.09.png\" alt=\"\" class=\"wp-image-477\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EPunchにアニメーションを設定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.45.53.png\" alt=\"\" class=\"wp-image-478\" width=\"295\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eさぁゲームを開始します。Uボタンを押下すると攻撃アニメーションが始まるので確認します。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"568\" height=\"336\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.50.33.png\" alt=\"\" class=\"wp-image-481\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EvThirdPersonを使うと簡単に高機能ハイセンスプロアングルカメラを追加できます。⇨https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F22\u002Fanimedokuzi\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EvThirdPersonに独自のアニメーションを追加する方法\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,aH],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F472"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=472"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F472\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=472"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=472"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=472"}],curies:[{name:g,href:h,templated:a}]}},{id:463,date:aM,date_gmt:aN,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=463"},modified:aM,modified_gmt:aN,slug:"unitychantosochu",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F21\u002Funitychantosochu\u002F",title:{rendered:"Unityちゃんで逃走中みたいなゲームを作った結果wwww"},content:{rendered:"\n\u003Cp\u003Eクソゲーができたまんたの大行進\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EWeb版\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EWindow版(ダウンロード)\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fexe.zip\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fexe.zip\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-21-13.45.49-1024x598.png\" alt=\"\" class=\"wp-image-468\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EWeb版は文字が表示されないなどの初歩的なバグがあります（フォントの問題で）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E前回作った2Dのクソゲーに比べるとそこそこマシになった。\u003Cbr \u002F\u003E３Dゲームの場合は考える要素が２Dに比べると増えるのは確かだが\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E豊富なアセットを考えると２Dより３Dのほうが作りやすいんじゃね？と思った。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回のゲームのメイン機能はNavgationが担っています。これは移動範囲を限定できる機能で、Unityが勝手にやってくれます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはPlayerは以前紹介した\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eを使いました。これを使うとプレイヤーの移動とカメラを考える必要がありませんので時間短縮になりました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUIは簡単に作れるので便利です\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-21-13.54.58-1024x396.png\" alt=\"\" class=\"wp-image-470\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eただ走っているだけではゲーム性がないので、ミッションを投入しましたので、少しばかりゲーム性を持たせる事に成功しました。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eクソゲーができたまんたの大行進 Web版 https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F Window版(ダウンロード) https:\u002F\u002Fvolkruss.com\u002Funityto&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F21\u002Funitychantosochu\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityちゃんで逃走中みたいなゲームを作った結果wwww\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[at,r,aO],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F463"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=463"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F463\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=463"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=463"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=463"}],curies:[{name:g,href:h,templated:a}]}},{id:449,date:aP,date_gmt:aQ,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=449"},modified:aP,modified_gmt:aQ,slug:"playmaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F28\u002Fplaymaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b\u002F",title:{rendered:"PlaymakerでUGUIのButtonイベントを発火する"},content:{rendered:"\n\u003Cp\u003EUnityのButtonはクリックイベントを手軽につけることができるし、簡単にスクリプトのメソッドを発火できるのですが、いちいちスクリプト用意するの面倒くさいし、コードが増えるし、キーボード打つと指が痛いですよね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで、Playmakerで簡単にイベントを発火させましょう。\u003Cbr \u002F\u003Eまずはボタンのイベントを受け取るようのゲームオブジェクトを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlaymakerUIという名前にしました。なんでもいいですおー＾＾\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"430\" height=\"242\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.56.35.png\" alt=\"\" class=\"wp-image-452\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこいつにFSMをつけます。\u003Cbr \u002F\u003EまずはEventを設定します。今回はバックボタンを押した時を想定しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.58.23.png\" alt=\"\" class=\"wp-image-453\" width=\"510\" height=\"119\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAdd Global Transitionをクリックして今作成したEventを指定します。\u003Cbr \u002F\u003E勝手に新しいステートをもった遷移情報が出来上がります。こいつをPlatmakerから呼び出す簡単なお仕事です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.59.57.png\" alt=\"\" class=\"wp-image-454\" width=\"347\" height=\"213\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eイベントを発火させたいButtonを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlaymakerの設定がしてあるPlaymakerUIってゲームオブジェクトを指定します。そしてイベントはPlaymakerFSMからSendEventを選択ですぅ。イベントは先ほどのEvent名であるClickBackを入力すればおけ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"514\" height=\"214\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.49.02.png\" alt=\"\" class=\"wp-image-450\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-19.02.47.png\" alt=\"\" class=\"wp-image-455\" width=\"434\" height=\"484\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E以上で、ボタンからPlaymakerのイベントを発火できます。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EUnityのButtonはクリックイベントを手軽につけることができるし、簡単にスクリプトのメソッドを発火できるのですが、いちいちスクリプト用意するの面倒くさいし、コードが増えるし、キーボード打つと指が痛いですよね。 とい&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F28\u002Fplaymaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerでUGUIのButtonイベントを発火する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[v],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F449"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=449"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F449\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=449"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=449"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=449"}],curies:[{name:g,href:h,templated:a}]}},{id:437,date:aR,date_gmt:aS,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=437"},modified:aR,modified_gmt:aS,slug:"playmaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F27\u002Fplaymaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99\u002F",title:{rendered:"PlaymakerのGetNextChildをしばき倒す"},content:{rendered:"\n\u003Cp\u003Eアセットをダウンロードしたんですが、子要素全てにMeshColliderをアタッチしたいと思いました。というわけでPlaymakerで子要素をループしてアタッチする方法です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.39.49.png\" alt=\"\" class=\"wp-image-440\" width=\"478\" height=\"218\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとにかくChildがいる間はアタッチしまくって、ChildがなくなったらEndLoopにいきます。\u003Cbr \u002F\u003EState1ではGetNextChildというActionを使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E子要素を走査していき、見つかったら子要素を変数CurrentChildに格納します。\u003Cbr \u002F\u003EそしてNextChildというEventに遷移します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"730\" height=\"276\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.44.54.png\" alt=\"\" class=\"wp-image-441\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENextChildでは、その子要素にコライダーを付与する。\u003Cbr \u002F\u003E終わったらまたState1に戻ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.47.03-1024x419.png\" alt=\"\" class=\"wp-image-442\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの調子で子要素が順番に処理されていき、全ての子要素のループが終わったらEndLoopにいきます。EndLoopはActionも何もないただの状態です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eスクリプト書くより早いですね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E子要素の子要素までループする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E子要素の子要素まで走査できないので作ります。\u003Cbr \u002F\u003E複雑になりますがやっていることは同じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただし、子要素の子要素へループする前、つまり親要素の子要素をループする際に、コライダーをつけるじAddChildColiderというStateを用意しています。\u003Cbr \u002F\u003E子要素のループが走った時に毎回コライダーがつけられてしまうのでね。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"824\" height=\"360\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.13.38.png\" alt=\"\" class=\"wp-image-444\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E子要素の子要素をループする。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.16.02-1024x476.png\" alt=\"\" class=\"wp-image-445\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.16.53-1024x485.png\" alt=\"\" class=\"wp-image-446\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003E追記\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E普通にヒエラルキーで子要素全選択してコライダーアタッチすれば一発だったわあはははは\u003Cbr \u002F\u003Eでも、Playmakerで子要素ループする練習にはなったかな^^^\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eアセットをダウンロードしたんですが、子要素全てにMeshColliderをアタッチしたいと思いました。というわけでPlaymakerで子要素をループしてアタッチする方法です。 とにかくChildがいる間はアタッチしまくっ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F27\u002Fplaymaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerのGetNextChildをしばき倒す\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[v,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F437"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=437"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F437\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=437"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=437"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=437"}],curies:[{name:g,href:h,templated:a}]}},{id:426,date:aT,date_gmt:aU,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=426"},modified:aT,modified_gmt:aU,slug:"fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F25\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F",title:{rendered:"Fungusを使ってメニュー(Menu)というか選択肢？をしばく"},content:{rendered:"\n\u003Cp\u003E今日作るのはこれだ！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-8.55.31.png\" alt=\"\" class=\"wp-image-427\" width=\"496\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMenuというか選択肢というか、まぁどっちもでよいのだが、クリックすると発生するイベントが変化するあれだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eギャルゲーでいえば「お兄ちゃんと遊ぶ」「お兄ちゃんなんか大嫌い」「お兄ちゃん臭い」の選択肢を選んでエンディングに影響を与えるアレだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ簡単に実装できるのでサラッと書いていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこのメニューを作るには文字通り&#8221;Menu&#8221;を使います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-8.59.07.png\" alt=\"\" class=\"wp-image-429\" width=\"327\" height=\"247\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのYesNoはなんなのかというと、ただのBlockです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EYesブロックとNoブロックを用意しておいて、Yesの時はYesのブロックに流れる設定をするだけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.01.38.png\" alt=\"\" class=\"wp-image-431\" width=\"351\" height=\"401\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのように設定しておくと勝手に以下の画像のように遷移情報が付与されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.00.37.png\" alt=\"\" class=\"wp-image-430\" width=\"322\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eビジュアル的にもわかりやすくなります。勝手にやってくれるので便利ですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにYesの中身は、Sayするだけになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.04.01.png\" alt=\"\" class=\"wp-image-433\" width=\"318\" height=\"353\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.03.20.png\" alt=\"\" class=\"wp-image-432\" width=\"461\" height=\"227\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMenuをシャッフルする\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eクイズゲームを作りたいならシャッフル機能を使えば良い。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-19.48.37.png\" alt=\"\" class=\"wp-image-435\" width=\"255\" height=\"243\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで並び順がランダムになります。すGEー！\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E今日作るのはこれだ！ Menuというか選択肢というか、まぁどっちもでよいのだが、クリックすると発生するイベントが変化するあれだ。 ギャルゲーでいえば「お兄ちゃんと遊ぶ」「お兄ちゃんなんか大嫌い」「お兄ちゃん臭い」の選択肢&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F25\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusを使ってメニュー(Menu)というか選択肢？をしばく\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[u,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F426"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=426"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F426\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=426"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=426"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=426"}],curies:[{name:g,href:h,templated:a}]}},{id:419,date:aV,date_gmt:aW,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=419"},modified:aV,modified_gmt:aW,slug:"fungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F24\u002Ffungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b\u002F",title:{rendered:"Fungusをスクリプトから操作する"},content:{rendered:"\n\u003Cp\u003EPlaymakerとの連携はできたのですが、メソッドを呼ぶことくらいしか今の所できていません。つまりFungusの変数にアクセスする方法がわかりません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eということでしぶしぶ、スクリプトからFungusにアクセスして変数を取得します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerが会話中かどうか判定します。PlayerにTalkingという変数を持たせます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.23.29-945x1024.png\" alt=\"\" class=\"wp-image-421\" width=\"436\" height=\"472\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eスクリプトから、この変数にアクセスします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epublic Fungus.Flowchart flowchart;\n...\n        private bool GetPlayerTalking()\n        {\n            return flowchart.GetBooleanVariable(\"Talking\");\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれだけです。\u003Cbr \u002F\u003Eflowchartを指定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.26.25.png\" alt=\"\" class=\"wp-image-422\" width=\"386\" height=\"476\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E簡単にアクセスできます。GetBooleanVariableにkeyを渡すとその変数が取得できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eflowchartから別のflowchartを呼び出すにはCallを使用します。\u003Cbr \u002F\u003Eこの時にCallModeを最初はContinueにしました。Stopにすると以降のコマンドが呼ばれませんでした。この辺は要調査です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.28.36.png\" alt=\"\" class=\"wp-image-424\" width=\"302\" height=\"358\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで会話中は移動できないという仕組みが出来上がりです。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EPlaymakerとの連携はできたのですが、メソッドを呼ぶことくらいしか今の所できていません。つまりFungusの変数にアクセスする方法がわかりません。 ということでしぶしぶ、スクリプトからFungusにアクセスして変数&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F24\u002Ffungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusをスクリプトから操作する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[u,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F419"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=419"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F419\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=419"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=419"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=419"}],curies:[{name:g,href:h,templated:a}]}},{id:321,date:aX,date_gmt:aY,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=321"},modified:aX,modified_gmt:aY,slug:"playmaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F16\u002Fplaymaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b\u002F",title:{rendered:"PlaymakerとFungusを使っていい感じの会話イベント作る"},content:{rendered:"\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F\" target=\"_blank\"\u003E前回はゲームオブジェクトがヒットしたら会話シーンが発生するというものでした。\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし実際のゲームではそんな仕組みはほとんどなく、ボタンをクリックして当たり判定でもあればそいつ会話が発生するというものだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eつまり女子と話がしたければAボタンを押せってことです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EScriptを書くと面倒くさそうですがPlaymakerなら余裕ですね。\u003Cbr \u002F\u003E見ての通りプレイヤーがRayCastを発射しています。そしてhitobjにnpc2が設定されているのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.18.35-1024x298.png\" alt=\"\" class=\"wp-image-322\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの状態でKボタンを押すと会話イベントが発生します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.18.46.png\" alt=\"\" class=\"wp-image-323\" width=\"495\" height=\"408\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで壮大な物語が動き出す予感がしますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキャラクターなどは前回と同じですが、もう1人追加しておきます。\u003Cbr \u002F\u003E流れとしては、プレイヤーが発射するRayCastにNPCがヒットしていてKボタンを押したら、そのオブジェクトのFlowchartのブロックが発火されるという仕組みです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerのStateにRayCastを追加します。\u003Cbr \u002F\u003Eヒットした時にhitobjにヒットしたオブジェクトを格納するようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまたレイヤーマスクを使ってNPCレイヤーのものだけが当たり判定を起こすようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.25.31-1024x899.png\" alt=\"\" class=\"wp-image-325\" width=\"581\" height=\"510\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EそしてKが押された時に次のステートに遷移します。\u003Cbr \u002F\u003EあとWaitを使って再帰的にState2に遷移しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.26.58.png\" alt=\"\" class=\"wp-image-326\" width=\"495\" height=\"275\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E理由はずっと変数に格納されたままになってしまうので、hitobjにはNoneを指定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.28.06.png\" alt=\"\" class=\"wp-image-327\" width=\"490\" height=\"282\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EKに移った時は\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E取得したhitobjのTagがNPCであるかどうか判定します。\u003Cbr \u002F\u003EつまりNPCにはNPCのタグをつけておきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというかこの状況ではNPCしか取得できないのですが、Playmakerの使い方がよくわかってないのでこんなことしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまぁとりあえずNPCのときはヒットしたものがNPCに遷移します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.30.16-1024x498.png\" alt=\"\" class=\"wp-image-328\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E変数のhitobjが入っていますので、SendMessageを使ってメソッドを発火します。\u003Cbr \u002F\u003EExecuteBlockのtalk1です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E発火したら1秒後にステートを元に戻します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.31.56-1024x462.png\" alt=\"\" class=\"wp-image-329\" width=\"545\" height=\"245\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで完成です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.29.47.png\" alt=\"\" class=\"wp-image-330\" width=\"468\" height=\"391\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで簡単な会話イベントはいけるぜ？\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E前回はゲームオブジェクトがヒットしたら会話シーンが発生するというものでした。 しかし実際のゲームではそんな仕組みはほとんどなく、ボタンをクリックして当たり判定でもあればそいつ会話が発生するというものだ。 つまり女子と話が&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F16\u002Fplaymaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerとFungusを使っていい感じの会話イベント作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[u,v,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F321"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=321"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F321\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=321"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=321"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=321"}],curies:[{name:g,href:h,templated:a}]}},{id:307,date:aZ,date_gmt:a_,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=307"},modified:aZ,modified_gmt:a_,slug:"unity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F",title:{rendered:"Unity PlaymakerとFungusで会話シーンを作る"},content:{rendered:"\n\u003Cp\u003EPlaymakerは100年くらい前に買っておいたので、使えるのですがこれは有料アセットなのでPlaymakerを利用できる人向けの記事になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFungusは会話シナリオを簡単に作れる無料のアセットです。Playmakerを利用しなくてもできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は２つとも導入済の前提でお話しします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUnityちゃんとmisakiがヒットしたら会話イベントを発生させます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.44.18-1024x576.png\" alt=\"\" class=\"wp-image-312\" width=\"460\" height=\"259\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EmisakiにはtriggerのコライダーとFlowChartをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.40.43.png\" alt=\"\" class=\"wp-image-310\" width=\"287\" height=\"199\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.40.53.png\" alt=\"\" class=\"wp-image-311\" width=\"293\" height=\"288\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Emisakiにplaymakerのfmsを設定します。\u003Cbr \u002F\u003Eまずはプレイヤーとのヒットを検知します。ヒットした場合はState4に遷移します。PlayerにはPlayerタグをつけておいてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.47.23-1024x556.png\" alt=\"\" class=\"wp-image-314\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eplayerがhitしたら、FlowchartのExecuteBlockを発火するようにします。\u003Cbr \u002F\u003EBlockNameはtalk1にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.49.51-1024x804.png\" alt=\"\" class=\"wp-image-315\" width=\"515\" height=\"404\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでPlaymakerの準備は完了simasitanodeFungusの設定をします。misakiのopenFlowChartWindowをクリックして開きます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブロックをtalk1にしたら、今回は使わないけど勉強のためにVariablesのbooleanを追加してfinishにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.51.43-1024x468.png\" alt=\"\" class=\"wp-image-316\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.54.09.png\" alt=\"\" class=\"wp-image-317\" width=\"326\" height=\"67\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそしたらtalk1をクリックして＋ボタンを押してEventを追加します。\u003Cbr \u002F\u003E今回はfinishの値を変更するのとメッセージ(say)の設定を行います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.55.44-793x1024.png\" alt=\"\" class=\"wp-image-318\" width=\"495\" height=\"639\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで準備オッケーです。Unityちゃんとmisakiをぶつけると会話が始まります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以上になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFungusについて今日導入したばかりなので、まだまだ未知数です。Playmakerは100年前に使っていたのほとんど忘れています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにキャラクターを設定すればこんなこともできます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.58.41-1024x628.png\" alt=\"\" class=\"wp-image-319\" width=\"562\" height=\"344\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E前回の2Dのノベルゲームを作成したが、これならRPGの会話シーンとか作れますね。でもノベルゲームを作るのはキツそうだなといった印象です。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EPlaymakerは100年くらい前に買っておいたので、使えるのですがこれは有料アセットなのでPlaymakerを利用できる人向けの記事になります。 Fungusは会話シナリオを簡単に作れる無料のアセットです。Playm&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity PlaymakerとFungusで会話シーンを作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[u,v,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F307"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=307"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F307\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=307"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=307"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=307"}],curies:[{name:g,href:h,templated:a}]}},{id:304,date:a$,date_gmt:ba,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=304"},modified:a$,modified_gmt:ba,slug:"unity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F",title:{rendered:"Unityで無料でThird Person Controllerを使った結果"},content:{rendered:"\n\u003Cp\u003E答えはこれです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"Free Unity Third Person Controller Asset\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FHUtZsZBAlss?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの動画の通りにやると、なかなかいかしたキャラクターコントローラーができます。\u003Cbr \u002F\u003Eジャンプもできるし、なんならカメラの設定もしてる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cstrong\u003E車輪の再開発はやめようず\u003C\u002Fstrong\u003Eってことですね。。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-11.55.42-1024x607.png\" alt=\"\" class=\"wp-image-305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eめちゃめちゃいい感じのキャラクターコントローラーが使えます。\u003Cbr \u002F\u003E頭悩ませてプレイヤー動かしたりカメラ動かすのはやめましょう。\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E答えはこれです この動画の通りにやると、なかなかいかしたキャラクターコントローラーができます。ジャンプもできるし、なんならカメラの設定もしてる。 車輪の再開発はやめようずってことですね。。 めちゃめちゃいい感じのキャラク&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで無料でThird Person Controllerを使った結果\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[48,r],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F304"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=304"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F304\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=304"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=304"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=304"}],curies:[{name:g,href:h,templated:a}]}},{id:253,date:bb,date_gmt:bc,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=253"},modified:bb,modified_gmt:bc,slug:"cinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F",title:{rendered:"Cinemachineをしばく"},content:{rendered:"\n\u003Cp\u003E世の中には２種類のゲームエンジンが存在する。UnityかUnity以外か。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで今日はCinemachineというカメラを制御する機能をしばき倒していこうと思います。\u003Cbr \u002F\u003Eこれはもともと有料だったらしいのですが今はなんと無料で使えるのです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Funity.com\u002Fja\u002Funity\u002Ffeatures\u002Feditor\u002Fart-and-design\u002Fcinemachine\"\u003Ehttps:\u002F\u002Funity.com\u002Fja\u002Funity\u002Ffeatures\u002Feditor\u002Fart-and-design\u002Fcinemachine\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもうカメラで迷うことはありませんね。画面はこんな感じでーす\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.04.23-1024x488.png\" alt=\"\" class=\"wp-image-254\" width=\"560\" height=\"267\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれ実はもうすでにCinemachineが投入されています。まだ投入しただけなんで投入しましょう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.05.14.png\" alt=\"\" class=\"wp-image-255\" width=\"291\" height=\"316\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで準備オーケーです。ちなみにこんなのねえよって人はこれをインポートしてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.06.54-1024x936.png\" alt=\"\" class=\"wp-image-256\" width=\"541\" height=\"494\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ECV vcam1にunitychanを追従させるように設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.07.53.png\" alt=\"\" class=\"wp-image-258\" width=\"375\" height=\"191\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラが追従するターゲットとカメラを向ける対象をunitychanにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eおうおう！これでいい感じになるんやろ！おらスタートしてみいや！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.12.26-1024x474.png\" alt=\"\" class=\"wp-image-261\" width=\"541\" height=\"250\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんじゃこりゃ！ありがとうございましたwwwwww草WWwwww草WWww森wwwwwWW\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそうかきっとUnityちゃんを動かすといいんだろ！ってわけでスクリプトをアタッチして微調整します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.25.30.png\" alt=\"\" class=\"wp-image-263\" width=\"459\" height=\"529\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityちゃんに追従してカメラが回転したぞ！！！！？？？？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E！？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.26.45-1024x408.png\" alt=\"\" class=\"wp-image-264\" width=\"404\" height=\"160\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなるほど素晴らしい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFollowOffsetでカメラと追跡オブジェクトの距離を設定できる。今回はz方向にマイナス４メートル、y方向に2メートル\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそしてAimを設定してカメラの向き先を少し上に向ける設定だ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.08.46-1024x383.png\" alt=\"\" class=\"wp-image-283\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EYawDampingでカメラの追従する動きが少し滑らかになっている（スロー）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E壁にめり込まないカメラを作る\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.14.39-1024x548.png\" alt=\"\" class=\"wp-image-285\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおいカメラマン！しっかり仕事しろや！！\u003Cbr \u002F\u003EというわけでAdd ExtensionからCinemachineColiderを追加すると！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.15.30.png\" alt=\"\" class=\"wp-image-286\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.15.57-1024x486.png\" alt=\"\" class=\"wp-image-287\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおおおおおお！カメラが突き抜けない！！まるでグラビア撮影のワンシーンだぞ！！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさて、カメラが衝突した時の戦略(strategy)を試すと面白いぞ？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.19.09.png\" alt=\"\" class=\"wp-image-290\" width=\"515\" height=\"405\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityちゃんの回転を無視したい場合\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-14-11.49.30-1024x326.png\" alt=\"\" class=\"wp-image-292\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EFreeLookで自由人になる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eとりあえず、いろんなカメラがあったんで試してみるか。というわけでFreeLookカメラに変更して、お作法通りUnityちゃんを追従させた。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.42.49-1024x491.png\" alt=\"\" class=\"wp-image-266\" width=\"413\" height=\"198\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度はマウスの位置によってカメラの位置が変化するようになった。一定の範囲ないをカメラが動きまわるようだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EField Of Viewの値でカメラの撮影範囲を調節できる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-15.34.13.png\" alt=\"\" class=\"wp-image-269\" width=\"520\" height=\"401\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラの移動範囲はRigで設定します。いい感じの値がよくわからん。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.05.12-1024x266.png\" alt=\"\" class=\"wp-image-270\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E高さを調整する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.06.45-1024x378.png\" alt=\"\" class=\"wp-image-272\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ERadiusを設定すると上部の範囲が大きくなりました。上から激写するときに広く撮影できます。あれ？スプラトゥーンみてぇだなぁ！？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.07.49-1024x368.png\" alt=\"\" class=\"wp-image-273\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E上中下の順番でカメラの移動範囲を制御できるようだ。上から激写する時は広くカメラを動かすようにして、下からのプロアングルで撮影するときは、カメラの移動範囲を狭くするなどする。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.11.05-1024x360.png\" alt=\"\" class=\"wp-image-274\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EAimを設定するとカメラの向きを設定できるようです。例えばこんなことが\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.57.07-1024x356.png\" alt=\"\" class=\"wp-image-278\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの辺は難しいなあ。。。といった印象。middleのあれのyを1にするとちょうど良い感じ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-17.00.25-1024x352.png\" alt=\"\" class=\"wp-image-280\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E世の中には２種類のゲームエンジンが存在する。UnityかUnity以外か。 というわけで今日はCinemachineというカメラを制御する機能をしばき倒していこうと思います。これはもともと有料だったらしいのですが今はなん&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003ECinemachineをしばく\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[19],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F253"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=253"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F253\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=253"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=253"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=253"}],curies:[{name:g,href:h,templated:a}]}},{id:202,date:bd,date_gmt:be,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=202"},modified:bd,modified_gmt:be,slug:"3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F10\u002F3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99\u002F",title:{rendered:"3DのUnityちゃんを動かす"},content:{rendered:"\n\u003Cp\u003EUnityちゃんは無料で使えます。\u003Cbr \u002F\u003EAssetStoreからUnity-Chan!をダウンロードしてプロジェクトにインポートします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.09.37-1024x622.png\" alt=\"\" class=\"wp-image-203\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EUnityちゃんを動かす\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eといっても用意されているものを使えばOK\u003Cbr \u002F\u003Eまずはスクリプトをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUnityChanControlScriptWithRgidBody.csをUnityちゃんにアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.11.17-1024x449.png\" alt=\"\" class=\"wp-image-204\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAnimatorをアタッチします。\u003Cbr \u002F\u003EUnityChanLocomotions.controllerをUnityちゃんのAnimatorのControllerに設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.12.57-1024x380.png\" alt=\"\" class=\"wp-image-205\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでUnityちゃんが動き回るようになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.15.02-1024x443.png\" alt=\"\" class=\"wp-image-206\"\u002F\u003E\u003C\u002Ffigure\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003EUnityちゃんは無料で使えます。AssetStoreからUnity-Chan!をダウンロードしてプロジェクトにインポートします。 Unityちゃんを動かす といっても用意されているものを使えばOKまずはスクリプトをアタ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F10\u002F3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E3DのUnityちゃんを動かす\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[aO],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F202"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=202"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F202\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=202"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=202"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=202"}],curies:[{name:g,href:h,templated:a}]}},{id:197,date:bf,date_gmt:bg,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=197"},modified:bf,modified_gmt:bg,slug:"unity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F08\u002Funity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b\u002F",title:{rendered:"Unityで2Dのギャルゲーを作ったので公開"},content:{rendered:"\n\u003Cp\u003Eプレイ\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eシナリオを考えるのが難しかったですが、シナリオを考えないとゲームにならないので頑張って考えました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回作ったのがギャルゲーです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eギャルゲーで考えないといけないのはシナリオ90割で、残りの10割をスクリプトに時間をかけます。\u003Cbr \u002F\u003E溢れ出たパーセンテージですが、スクリプトに関しては\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fkanchi0914.hatenablog.com\u002Fentry\u002F2019\u002F07\u002F23\u002F070005\" target=\"_blank\"\u003Ehttps:\u002F\u002Fkanchi0914.hatenablog.com\u002Fentry\u002F2019\u002F07\u002F23\u002F070005\u003C\u002Fa\u003E\u003Cbr \u002F\u003E参考にしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテキストファイルをパースしてシナリオを表示させます。\u003Cbr \u002F\u003E条件付きルート遷移(if文)の追加とBGMの追加などは必要でしたが、基本的にスクリプトは参考サイト様に倣って書き上げた。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E画面についてはさすがUnityです。ロジックを書く必要がなく、私がやった作業はただ並べるだけ。すごいなぁ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003Eプレイ https:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F シナリオを考えるのが難しかったですが、シナリオを考えないとゲームにならないので頑張って考えました。 今回作ったのがギャルゲーです。 ギャルゲーで考&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F08\u002Funity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで2Dのギャルゲーを作ったので公開\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,63],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F197"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=197"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F197\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=197"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=197"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=197"}],curies:[{name:g,href:h,templated:a}]}},{id:192,date:bh,date_gmt:bi,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=192"},modified:bh,modified_gmt:bi,slug:"unity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f",status:k,type:l,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F31\u002Funity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f\u002F",title:{rendered:"Unityでゲームを作ったので公開した"},content:{rendered:"\n\u003Cp\u003E色々と面倒臭いところは省略したのでゲームとしての完成度はとても低いが、Unityの使い方を勉強するのにはちょうど良かったです。\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"wp-block-image\"\u003E\u003Cfigure class=\"aligncenter size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002FimageLicenseLogo.png\" alt=\"\" class=\"wp-image-193\"\u002F\u003E\u003Cfigcaption\u003E\u003Ca href=\"https:\u002F\u002Funity-chan.com\u002Fcontents\u002Flicense_jp\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Funity-chan.com\u002Fcontents\u002Flicense_jp\u002F\u003C\u002Fa\u003E\u003C\u002Ffigcaption\u003E\u003C\u002Ffigure\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003Eプレイ場所：\u003Ca href=\"http:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F\"\u003Ehttp:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eゲームを作るならUnityだなぁと思いました。実はUnityに入る前にはmelon.jsとcocos2dxを試していますが、やはりUnityだと確信しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n",protected:b},excerpt:{rendered:"\u003Cp\u003E色々と面倒臭いところは省略したのでゲームとしての完成度はとても低いが、Unityの使い方を勉強するのにはちょうど良かったです。 プレイ場所：http:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F ゲームを作&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F31\u002Funity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityでゲームを作ったので公開した\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:b},author:i,featured_media:c,comment_status:d,ping_status:d,sticky:b,template:e,format:m,meta:[],categories:[j],tags:[r,65],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F192"}],collection:[{href:n}],about:[{href:o}],author:[{embeddable:a,href:p}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=192"}],"version-history":[{count:c,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F192\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=192"}],"wp:term":[{taxonomy:f,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=192"},{taxonomy:q,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=192"}],curies:[{name:g,href:h,templated:a}]}}]},categoryName:bj}],fetch:{"0":{categories:{categories:[{id:2,count:x,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:g,href:h,templated:a}]}},{id:bk,count:x,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:g,href:h,templated:a}]}},{id:77,count:i,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fgulp\u002F",name:bl,slug:bl,taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F77"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=77"}],curies:[{name:g,href:h,templated:a}]}},{id:x,count:j,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:g,href:h,templated:a}]}},{id:bm,count:x,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:g,href:h,templated:a}]}},{id:j,count:40,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:bj,slug:"unity",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:g,href:h,templated:a}]}},{id:7,count:z,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:g,href:h,templated:a}]}},{id:8,count:bm,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:g,href:h,templated:a}]}},{id:z,count:bk,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:g,href:h,templated:a}]}},{id:i,count:c,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:f,parent:c,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:s}],about:[{href:t}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:g,href:h,templated:a}]}}]}}},mutations:void 0}}(true,false,0,"open","","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}",1,6,"publish","post","standard","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1","post_tag",51,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",27,42,28,4,29,9,"2020-12-14T22:36:06","2020-12-14T13:36:06","2020-12-14T22:14:53","2020-12-14T13:14:53",20,"2020-12-13T18:21:51","2020-12-13T09:21:51","2020-12-10T00:35:26","2020-12-09T15:35:26","2020-12-09T00:17:47","2020-12-08T15:17:47","2020-11-21T23:08:27","2020-11-21T14:08:27","2020-11-20T01:21:19","2020-11-19T16:21:19","2020-11-19T12:27:14","2020-11-19T03:27:14","2020-11-07T18:29:46","2020-11-07T09:29:46","2020-10-27T23:27:34","2020-10-27T14:27:34","2020-10-25T23:17:09","2020-10-25T14:17:09","2020-10-06T01:38:25","2020-10-05T16:38:25",38,74,"2020-10-02T02:07:08","2020-10-01T17:07:08",12,"2020-09-28T01:11:35","2020-09-27T16:11:35",64,"2020-09-24T23:41:44","2020-09-24T14:41:44","2020-09-24T16:55:47","2020-09-24T07:55:47","2020-09-22T23:06:28","2020-09-22T14:06:28","2020-09-22T22:10:38","2020-09-22T13:10:38",10,50,"2020-09-05T00:35:59","2020-09-04T15:35:59","2020-08-31T00:52:27","2020-08-30T15:52:27",11,"2020-08-30T00:50:45","2020-08-29T15:50:45","2020-08-28T00:06:24","2020-08-27T15:06:24",57,"2020-08-27T19:59:15","2020-08-27T10:59:15","2020-08-26T22:04:42","2020-08-26T13:04:42","2020-08-26T20:54:17","2020-08-26T11:54:17","2020-08-25T22:31:21","2020-08-25T13:31:21",58,"2020-08-24T08:08:18","2020-08-23T23:08:18","2020-08-22T11:52:28","2020-08-22T02:52:28","2020-08-21T13:57:11","2020-08-21T04:57:11",52,"2020-06-28T19:04:20","2020-06-28T10:04:20","2020-06-27T01:17:24","2020-06-26T16:17:24","2020-06-25T09:04:43","2020-06-25T00:04:43","2020-06-24T00:32:45","2020-06-23T15:32:45","2020-06-16T23:34:32","2020-06-16T14:34:32","2020-06-15T22:01:06","2020-06-15T13:01:06","2020-06-15T11:57:23","2020-06-15T02:57:23","2020-06-13T19:05:39","2020-06-13T10:05:39","2020-06-10T08:15:46","2020-06-09T23:15:46","2020-06-08T21:12:40","2020-06-08T12:12:40","2020-05-31T11:58:50","2020-05-31T02:58:50","Unity",3,"gulp",5)));