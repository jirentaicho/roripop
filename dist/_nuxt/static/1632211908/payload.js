__NUXT_JSONP__("/", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD,eE,eF,eG,eH,eI,eJ,eK,eL,eM,eN,eO,eP,eQ,eR,eS,eT,eU,eV,eW,eX,eY,eZ,e_,e$,fa,fb,fc,fd,fe,ff,fg,fh,fi,fj,fk,fl,fm,fn,fo,fp,fq,fr,fs,ft,fu,fv,fw,fx,fy,fz,fA,fB,fC,fD,fE,fF,fG,fH,fI,fJ,fK,fL,fM,fN,fO,fP,fQ,fR,fS,fT,fU,fV,fW,fX,fY,fZ,f_,f$,ga,gb,gc,gd,ge,gf,gg,gh,gi,gj,gk,gl,gm,gn,go,gp,gq,gr,gs,gt,gu,gv,gw,gx,gy,gz,gA,gB,gC,gD,gE,gF,gG,gH,gI,gJ,gK,gL,gM,gN,gO,gP,gQ,gR,gS,gT,gU,gV,gW,gX,gY,gZ,g_,g$,ha,hb,hc,hd,he,hf,hg,hh,hi,hj,hk,hl,hm,hn,ho,hp,hq,hr,hs,ht,hu,hv,hw,hx,hy,hz,hA,hB,hC,hD,hE,hF,hG,hH,hI,hJ,hK,hL,hM,hN,hO,hP,hQ,hR,hS,hT,hU,hV,hW,hX,hY,hZ,h_,h$,ia,ib,ic,id,ie,if0,ig,ih,ii,ij,ik,il,im,in0,io,ip,iq,ir,is,it,iu,iv,iw,ix,iy,iz,iA,iB,iC,iD,iE,iF,iG,iH,iI,iJ,iK,iL,iM,iN,iO,iP,iQ,iR,iS,iT,iU,iV,iW,iX,iY,iZ,i_,i$,ja,jb,jc,jd,je,jf,jg,jh,ji,jj,jk,jl,jm,jn,jo,jp,jq,jr,js,jt,ju,jv,jw,jx,jy,jz,jA,jB,jC,jD,jE,jF,jG,jH,jI,jJ,jK,jL,jM,jN,jO,jP,jQ,jR,jS,jT,jU,jV,jW,jX,jY,jZ,j_,j$,ka,kb,kc,kd,ke,kf,kg,kh,ki,kj,kk,kl,km,kn,ko,kp,kq,kr,ks,kt,ku,kv,kw,kx,ky,kz,kA,kB,kC,kD,kE,kF,kG,kH,kI,kJ,kK,kL,kM,kN,kO,kP,kQ,kR,kS,kT,kU,kV,kW,kX,kY,kZ,k_,k$,la,lb,lc,ld,le,lf,lg,lh,li,lj,lk,ll,lm,ln,lo,lp,lq,lr,ls,lt,lu,lv,lw,lx,ly,lz,lA,lB,lC,lD,lE,lF,lG,lH,lI,lJ,lK,lL,lM,lN,lO,lP,lQ,lR,lS,lT,lU,lV,lW,lX,lY,lZ,l_,l$,ma,mb,mc,md,me,mf,mg,mh,mi,mj,mk,ml,mm,mn,mo,mp,mq,mr,ms,mt,mu,mv,mw,mx,my,mz,mA,mB,mC,mD,mE,mF,mG,mH,mI,mJ,mK,mL,mM,mN,mO,mP,mQ,mR,mS,mT,mU,mV,mW,mX,mY,mZ,m_,m$,na,nb,nc,nd,ne,nf,ng,nh,ni,nj,nk,nl,nm,nn,no,np,nq,nr,ns,nt,nu,nv,nw,nx,ny,nz,nA,nB,nC,nD,nE,nF,nG,nH,nI,nJ,nK,nL,nM,nN,nO,nP,nQ,nR,nS,nT,nU,nV,nW,nX,nY,nZ,n_,n$,oa,ob,oc,od,oe,of,og,oh,oi,oj,ok,ol,om,on,oo,op,oq,or,os,ot,ou,ov,ow,ox,oy,oz,oA,oB,oC,oD,oE,oF,oG,oH,oI,oJ,oK,oL,oM,oN,oO,oP,oQ,oR,oS,oT,oU,oV,oW,oX,oY,oZ,o_,o$,pa,pb,pc,pd,pe,pf,pg,ph,pi,pj,pk,pl,pm,pn,po,pp,pq,pr,ps,pt,pu,pv,pw,px,py,pz,pA,pB,pC,pD,pE,pF,pG,pH,pI,pJ,pK,pL,pM,pN,pO,pP,pQ,pR,pS,pT,pU,pV,pW,pX,pY,pZ,p_,p$,qa,qb,qc,qd,qe,qf,qg,qh,qi,qj,qk,ql,qm,qn,qo,qp,qq,qr,qs,qt,qu,qv,qw,qx,qy,qz,qA,qB,qC,qD,qE,qF,qG,qH,qI,qJ,qK,qL,qM,qN,qO,qP,qQ,qR,qS,qT,qU,qV,qW,qX,qY,qZ,q_,q$,ra,rb,rc,rd,re,rf,rg,rh,ri,rj,rk,rl,rm,rn,ro,rp,rq,rr,rs,rt,ru,rv,rw,rx,ry,rz,rA,rB,rC,rD,rE,rF,rG,rH,rI,rJ,rK,rL,rM,rN,rO,rP,rQ,rR,rS,rT,rU,rV,rW,rX,rY,rZ,r_,r$,sa,sb,sc,sd,se,sf,sg,sh,si,sj,sk,sl,sm,sn,so,sp,sq,sr,ss,st,su,sv,sw,sx,sy,sz,sA,sB,sC,sD,sE,sF,sG,sH,sI,sJ,sK,sL,sM,sN,sO,sP,sQ,sR,sS,sT,sU,sV,sW,sX,sY,sZ,s_,s$,ta,tb,tc,td,te,tf,tg,th,ti,tj,tk,tl,tm,tn,to,tp,tq,tr,ts,tt,tu,tv,tw,tx,ty,tz,tA,tB,tC,tD,tE,tF,tG,tH,tI,tJ,tK,tL,tM,tN,tO,tP,tQ,tR,tS,tT,tU,tV,tW,tX,tY,tZ,t_,t$,ua,ub,uc,ud,ue,uf,ug,uh,ui,uj,uk,ul,um,un,uo,up,uq,ur,us,ut,uu,uv,uw,ux,uy,uz,uA,uB,uC,uD,uE,uF,uG,uH,uI,uJ,uK,uL,uM,uN,uO,uP,uQ,uR,uS,uT,uU,uV,uW,uX,uY,uZ,u_,u$,va,vb,vc,vd,ve,vf,vg,vh,vi,vj,vk,vl,vm,vn,vo,vp,vq,vr,vs,vt,vu,vv){return {data:[{posts:[{id:cV,date:P,date_gmt:Q,guid:{rendered:cW},modified:P,modified_gmt:Q,slug:cX,status:j,type:k,link:cY,title:{rendered:cZ},content:{rendered:c_,protected:b},excerpt:{rendered:c$,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[cT],tags:[da,R,S],_links:{self:[{href:db}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dc}],"version-history":[{count:s,href:dd}],"predecessor-version":[{id:de,href:df}],"wp:attachment":[{href:dg}],"wp:term":[{taxonomy:f,embeddable:a,href:dh},{taxonomy:p,embeddable:a,href:di}],curies:[{name:g,href:h,templated:a}]}},{id:dj,date:T,date_gmt:U,guid:{rendered:dk},modified:T,modified_gmt:U,slug:dl,status:j,type:k,link:dm,title:{rendered:dn},content:{rendered:do0,protected:b},excerpt:{rendered:dp,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[F],tags:[G,dq,S],_links:{self:[{href:dr}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ds}],"version-history":[{count:d,href:dt}],"wp:attachment":[{href:du}],"wp:term":[{taxonomy:f,embeddable:a,href:dv},{taxonomy:p,embeddable:a,href:dw}],curies:[{name:g,href:h,templated:a}]}},{id:dx,date:V,date_gmt:W,guid:{rendered:dy},modified:V,modified_gmt:W,slug:dz,status:j,type:k,link:dA,title:{rendered:dB},content:{rendered:dC,protected:b},excerpt:{rendered:dD,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[dE,X],_links:{self:[{href:dF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dG}],"version-history":[{count:d,href:dH}],"wp:attachment":[{href:dI}],"wp:term":[{taxonomy:f,embeddable:a,href:dJ},{taxonomy:p,embeddable:a,href:dK}],curies:[{name:g,href:h,templated:a}]}},{id:dL,date:Y,date_gmt:Z,guid:{rendered:dM},modified:Y,modified_gmt:Z,slug:dN,status:j,type:k,link:dO,title:{rendered:dP},content:{rendered:dQ,protected:b},excerpt:{rendered:dR,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[_],_links:{self:[{href:dS}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dT}],"version-history":[{count:d,href:dU}],"wp:attachment":[{href:dV}],"wp:term":[{taxonomy:f,embeddable:a,href:dW},{taxonomy:p,embeddable:a,href:dX}],curies:[{name:g,href:h,templated:a}]}},{id:dY,date:$,date_gmt:aa,guid:{rendered:dZ},modified:$,modified_gmt:aa,slug:d_,status:j,type:k,link:d$,title:{rendered:ea},content:{rendered:eb,protected:b},excerpt:{rendered:ec,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y,t],tags:[ed,_],_links:{self:[{href:ee}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ef}],"version-history":[{count:d,href:eg}],"wp:attachment":[{href:eh}],"wp:term":[{taxonomy:f,embeddable:a,href:ei},{taxonomy:p,embeddable:a,href:ej}],curies:[{name:g,href:h,templated:a}]}},{id:ek,date:ab,date_gmt:ac,guid:{rendered:el},modified:ab,modified_gmt:ac,slug:em,status:j,type:k,link:en,title:{rendered:eo},content:{rendered:ep,protected:b},excerpt:{rendered:eq,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,R,er],_links:{self:[{href:es}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:et}],"version-history":[{count:d,href:eu}],"wp:attachment":[{href:ev}],"wp:term":[{taxonomy:f,embeddable:a,href:ew},{taxonomy:p,embeddable:a,href:ex}],curies:[{name:g,href:h,templated:a}]}},{id:ey,date:ad,date_gmt:ae,guid:{rendered:ez},modified:ad,modified_gmt:ae,slug:eA,status:j,type:k,link:eB,title:{rendered:eC},content:{rendered:eD,protected:b},excerpt:{rendered:eE,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,v],_links:{self:[{href:eF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:eG}],"version-history":[{count:d,href:eH}],"wp:attachment":[{href:eI}],"wp:term":[{taxonomy:f,embeddable:a,href:eJ},{taxonomy:p,embeddable:a,href:eK}],curies:[{name:g,href:h,templated:a}]}},{id:eL,date:af,date_gmt:ag,guid:{rendered:eM},modified:af,modified_gmt:ag,slug:eN,status:j,type:k,link:eO,title:{rendered:eP},content:{rendered:eQ,protected:b},excerpt:{rendered:eR,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,eS,v],_links:{self:[{href:eT}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:eU}],"version-history":[{count:d,href:eV}],"wp:attachment":[{href:eW}],"wp:term":[{taxonomy:f,embeddable:a,href:eX},{taxonomy:p,embeddable:a,href:eY}],curies:[{name:g,href:h,templated:a}]}},{id:eZ,date:ah,date_gmt:ai,guid:{rendered:e_},modified:ah,modified_gmt:ai,slug:e$,status:j,type:k,link:fa,title:{rendered:fb},content:{rendered:fc,protected:b},excerpt:{rendered:fd,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fe}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ff}],"version-history":[{count:d,href:fg}],"wp:attachment":[{href:fh}],"wp:term":[{taxonomy:f,embeddable:a,href:fi},{taxonomy:p,embeddable:a,href:fj}],curies:[{name:g,href:h,templated:a}]}},{id:fk,date:aj,date_gmt:ak,guid:{rendered:fl},modified:aj,modified_gmt:ak,slug:fm,status:j,type:k,link:fn,title:{rendered:fo},content:{rendered:fp,protected:b},excerpt:{rendered:fq,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fr}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fs}],"version-history":[{count:d,href:ft}],"wp:attachment":[{href:fu}],"wp:term":[{taxonomy:f,embeddable:a,href:fv},{taxonomy:p,embeddable:a,href:fw}],curies:[{name:g,href:h,templated:a}]}},{id:fx,date:al,date_gmt:am,guid:{rendered:fy},modified:al,modified_gmt:am,slug:fz,status:j,type:k,link:fA,title:{rendered:fB},content:{rendered:fC,protected:b},excerpt:{rendered:fD,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fE}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fF}],"version-history":[{count:d,href:fG}],"wp:attachment":[{href:fH}],"wp:term":[{taxonomy:f,embeddable:a,href:fI},{taxonomy:p,embeddable:a,href:fJ}],curies:[{name:g,href:h,templated:a}]}},{id:fK,date:an,date_gmt:ao,guid:{rendered:fL},modified:an,modified_gmt:ao,slug:fM,status:j,type:k,link:fN,title:{rendered:fO},content:{rendered:fP,protected:b},excerpt:{rendered:fQ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[H],_links:{self:[{href:fR}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fS}],"version-history":[{count:d,href:fT}],"wp:attachment":[{href:fU}],"wp:term":[{taxonomy:f,embeddable:a,href:fV},{taxonomy:p,embeddable:a,href:fW}],curies:[{name:g,href:h,templated:a}]}},{id:fX,date:ap,date_gmt:aq,guid:{rendered:fY},modified:ap,modified_gmt:aq,slug:fZ,status:j,type:k,link:f_,title:{rendered:f$},content:{rendered:ga,protected:b},excerpt:{rendered:gb,protected:b},author:i,featured_media:ar,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K,cU,gc],_links:{self:[{href:gd}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ge}],"version-history":[{count:d,href:gf}],"wp:featuredmedia":[{embeddable:a,href:as}],"wp:attachment":[{href:gg}],"wp:term":[{taxonomy:f,embeddable:a,href:gh},{taxonomy:p,embeddable:a,href:gi}],curies:[{name:g,href:h,templated:a}]}},{id:gj,date:at,date_gmt:au,guid:{rendered:gk},modified:at,modified_gmt:au,slug:gl,status:j,type:k,link:gm,title:{rendered:gn},content:{rendered:go,protected:b},excerpt:{rendered:gp,protected:b},author:i,featured_media:av,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K],_links:{self:[{href:gq}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gr}],"version-history":[{count:d,href:gs}],"wp:featuredmedia":[{embeddable:a,href:aw}],"wp:attachment":[{href:gt}],"wp:term":[{taxonomy:f,embeddable:a,href:gu},{taxonomy:p,embeddable:a,href:gv}],curies:[{name:g,href:h,templated:a}]}},{id:gw,date:ax,date_gmt:ay,guid:{rendered:gx},modified:ax,modified_gmt:ay,slug:gy,status:j,type:k,link:gz,title:{rendered:gA},content:{rendered:gB,protected:b},excerpt:{rendered:gC,protected:b},author:i,featured_media:gD,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K,gE],_links:{self:[{href:gF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gG}],"version-history":[{count:d,href:gH}],"wp:featuredmedia":[{embeddable:a,href:gI}],"wp:attachment":[{href:gJ}],"wp:term":[{taxonomy:f,embeddable:a,href:gK},{taxonomy:p,embeddable:a,href:gL}],curies:[{name:g,href:h,templated:a}]}},{id:gM,date:az,date_gmt:aA,guid:{rendered:gN},modified:az,modified_gmt:aA,slug:gO,status:j,type:k,link:gP,title:{rendered:gQ},content:{rendered:gR,protected:b},excerpt:{rendered:gS,protected:b},author:i,featured_media:ar,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v,gT,gU,gV],_links:{self:[{href:gW}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gX}],"version-history":[{count:d,href:gY}],"wp:featuredmedia":[{embeddable:a,href:as}],"wp:attachment":[{href:gZ}],"wp:term":[{taxonomy:f,embeddable:a,href:g_},{taxonomy:p,embeddable:a,href:g$}],curies:[{name:g,href:h,templated:a}]}},{id:ha,date:aB,date_gmt:aC,guid:{rendered:hb},modified:aB,modified_gmt:aC,slug:hc,status:j,type:k,link:hd,title:{rendered:he},content:{rendered:hf,protected:b},excerpt:{rendered:hg,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[],_links:{self:[{href:hh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hi}],"version-history":[{count:d,href:hj}],"wp:attachment":[{href:hk}],"wp:term":[{taxonomy:f,embeddable:a,href:hl},{taxonomy:p,embeddable:a,href:hm}],curies:[{name:g,href:h,templated:a}]}},{id:hn,date:aD,date_gmt:aE,guid:{rendered:ho},modified:aD,modified_gmt:aE,slug:hp,status:j,type:k,link:hq,title:{rendered:hr},content:{rendered:hs,protected:b},excerpt:{rendered:ht,protected:b},author:i,featured_media:av,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[H,hu],_links:{self:[{href:hv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hw}],"version-history":[{count:d,href:hx}],"wp:featuredmedia":[{embeddable:a,href:aw}],"wp:attachment":[{href:hy}],"wp:term":[{taxonomy:f,embeddable:a,href:hz},{taxonomy:p,embeddable:a,href:hA}],curies:[{name:g,href:h,templated:a}]}},{id:hB,date:aF,date_gmt:aG,guid:{rendered:hC},modified:aF,modified_gmt:aG,slug:hD,status:j,type:k,link:hE,title:{rendered:hF},content:{rendered:hG,protected:b},excerpt:{rendered:hH,protected:b},author:i,featured_media:hI,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:hJ}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hK}],"version-history":[{count:d,href:hL}],"wp:featuredmedia":[{embeddable:a,href:hM}],"wp:attachment":[{href:hN}],"wp:term":[{taxonomy:f,embeddable:a,href:hO},{taxonomy:p,embeddable:a,href:hP}],curies:[{name:g,href:h,templated:a}]}},{id:hQ,date:aH,date_gmt:aI,guid:{rendered:hR},modified:aH,modified_gmt:aI,slug:hS,status:j,type:k,link:hT,title:{rendered:hU},content:{rendered:hV,protected:b},excerpt:{rendered:hW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[aJ,r],_links:{self:[{href:hX}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hY}],"version-history":[{count:d,href:hZ}],"wp:attachment":[{href:h_}],"wp:term":[{taxonomy:f,embeddable:a,href:h$},{taxonomy:p,embeddable:a,href:ia}],curies:[{name:g,href:h,templated:a}]}},{id:ib,date:aK,date_gmt:aL,guid:{rendered:ic},modified:aK,modified_gmt:aL,slug:id,status:j,type:k,link:ie,title:{rendered:if0},content:{rendered:ig,protected:b},excerpt:{rendered:ih,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:ii}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ij}],"version-history":[{count:d,href:ik}],"wp:attachment":[{href:il}],"wp:term":[{taxonomy:f,embeddable:a,href:im},{taxonomy:p,embeddable:a,href:in0}],curies:[{name:g,href:h,templated:a}]}},{id:io,date:aM,date_gmt:aN,guid:{rendered:ip},modified:aM,modified_gmt:aN,slug:iq,status:j,type:k,link:ir,title:{rendered:is},content:{rendered:it,protected:b},excerpt:{rendered:iu,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[aJ,I,r],_links:{self:[{href:iv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iw}],"version-history":[{count:d,href:ix}],"wp:attachment":[{href:iy}],"wp:term":[{taxonomy:f,embeddable:a,href:iz},{taxonomy:p,embeddable:a,href:iA}],curies:[{name:g,href:h,templated:a}]}},{id:iB,date:aO,date_gmt:aP,guid:{rendered:iC},modified:aO,modified_gmt:aP,slug:iD,status:j,type:k,link:iE,title:{rendered:iF},content:{rendered:iG,protected:b},excerpt:{rendered:iH,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:iI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iJ}],"version-history":[{count:d,href:iK}],"wp:attachment":[{href:iL}],"wp:term":[{taxonomy:f,embeddable:a,href:iM},{taxonomy:p,embeddable:a,href:iN}],curies:[{name:g,href:h,templated:a}]}},{id:iO,date:aQ,date_gmt:aR,guid:{rendered:iP},modified:aQ,modified_gmt:aR,slug:iQ,status:j,type:k,link:iR,title:{rendered:iS},content:{rendered:iT,protected:b},excerpt:{rendered:iU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:iV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iW}],"version-history":[{count:d,href:iX}],"wp:attachment":[{href:iY}],"wp:term":[{taxonomy:f,embeddable:a,href:iZ},{taxonomy:p,embeddable:a,href:i_}],curies:[{name:g,href:h,templated:a}]}},{id:i$,date:aS,date_gmt:aT,guid:{rendered:ja},modified:aS,modified_gmt:aT,slug:jb,status:j,type:k,link:jc,title:{rendered:jd},content:{rendered:je,protected:b},excerpt:{rendered:jf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:jg}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jh}],"version-history":[{count:d,href:ji}],"wp:attachment":[{href:jj}],"wp:term":[{taxonomy:f,embeddable:a,href:jk},{taxonomy:p,embeddable:a,href:jl}],curies:[{name:g,href:h,templated:a}]}},{id:jm,date:aU,date_gmt:aV,guid:{rendered:jn},modified:aU,modified_gmt:aV,slug:jo,status:j,type:k,link:jp,title:{rendered:jq},content:{rendered:jr,protected:b},excerpt:{rendered:js,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:jt}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ju}],"version-history":[{count:d,href:jv}],"wp:attachment":[{href:jw}],"wp:term":[{taxonomy:f,embeddable:a,href:jx},{taxonomy:p,embeddable:a,href:jy}],curies:[{name:g,href:h,templated:a}]}},{id:jz,date:aW,date_gmt:aX,guid:{rendered:jA},modified:aW,modified_gmt:aX,slug:jB,status:j,type:k,link:jC,title:{rendered:jD},content:{rendered:jE,protected:b},excerpt:{rendered:jF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[jG,J],_links:{self:[{href:jH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jI}],"version-history":[{count:d,href:jJ}],"wp:attachment":[{href:jK}],"wp:term":[{taxonomy:f,embeddable:a,href:jL},{taxonomy:p,embeddable:a,href:jM}],curies:[{name:g,href:h,templated:a}]}},{id:jN,date:aY,date_gmt:aZ,guid:{rendered:jO},modified:aY,modified_gmt:aZ,slug:jP,status:j,type:k,link:jQ,title:{rendered:jR},content:{rendered:jS,protected:b},excerpt:{rendered:jT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[u,J],_links:{self:[{href:jU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jV}],"version-history":[{count:d,href:jW}],"wp:attachment":[{href:jX}],"wp:term":[{taxonomy:f,embeddable:a,href:jY},{taxonomy:p,embeddable:a,href:jZ}],curies:[{name:g,href:h,templated:a}]}},{id:j_,date:a_,date_gmt:a$,guid:{rendered:j$},modified:a_,modified_gmt:a$,slug:ka,status:j,type:k,link:kb,title:{rendered:kc},content:{rendered:kd,protected:b},excerpt:{rendered:ke,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[u,J],_links:{self:[{href:kf}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kg}],"version-history":[{count:d,href:kh}],"wp:attachment":[{href:ki}],"wp:term":[{taxonomy:f,embeddable:a,href:kj},{taxonomy:p,embeddable:a,href:kk}],curies:[{name:g,href:h,templated:a}]}},{id:kl,date:ba,date_gmt:bb,guid:{rendered:km},modified:ba,modified_gmt:bb,slug:kn,status:j,type:k,link:ko,title:{rendered:kp},content:{rendered:kq,protected:b},excerpt:{rendered:kr,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[ks,u,J],_links:{self:[{href:kt}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ku}],"version-history":[{count:d,href:kv}],"wp:attachment":[{href:kw}],"wp:term":[{taxonomy:f,embeddable:a,href:kx},{taxonomy:p,embeddable:a,href:ky}],curies:[{name:g,href:h,templated:a}]}},{id:kz,date:bc,date_gmt:bd,guid:{rendered:kA},modified:bc,modified_gmt:bd,slug:kB,status:j,type:k,link:kC,title:{rendered:kD},content:{rendered:kE,protected:b},excerpt:{rendered:kF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:kG}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kH}],"version-history":[{count:d,href:kI}],"wp:attachment":[{href:kJ}],"wp:term":[{taxonomy:f,embeddable:a,href:kK},{taxonomy:p,embeddable:a,href:kL}],curies:[{name:g,href:h,templated:a}]}},{id:kM,date:be,date_gmt:bf,guid:{rendered:kN},modified:be,modified_gmt:bf,slug:kO,status:j,type:k,link:kP,title:{rendered:kQ},content:{rendered:kR,protected:b},excerpt:{rendered:kS,protected:b},author:i,featured_media:kT,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q,F],tags:[w,r],_links:{self:[{href:kU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kV}],"version-history":[{count:d,href:kW}],"wp:featuredmedia":[{embeddable:a,href:kX}],"wp:attachment":[{href:kY}],"wp:term":[{taxonomy:f,embeddable:a,href:kZ},{taxonomy:p,embeddable:a,href:k_}],curies:[{name:g,href:h,templated:a}]}},{id:k$,date:bg,date_gmt:bh,guid:{rendered:la},modified:bg,modified_gmt:bh,slug:lb,status:j,type:k,link:lc,title:{rendered:ld},content:{rendered:le,protected:b},excerpt:{rendered:lf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[lg,A],_links:{self:[{href:lh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:li}],"version-history":[{count:d,href:lj}],"wp:attachment":[{href:lk}],"wp:term":[{taxonomy:f,embeddable:a,href:ll},{taxonomy:p,embeddable:a,href:lm}],curies:[{name:g,href:h,templated:a}]}},{id:ln,date:bi,date_gmt:bj,guid:{rendered:lo},modified:bi,modified_gmt:bj,slug:lp,status:j,type:k,link:lq,title:{rendered:lr},content:{rendered:ls,protected:b},excerpt:{rendered:lt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bk,r,bl],_links:{self:[{href:lu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lv}],"version-history":[{count:d,href:lw}],"wp:attachment":[{href:lx}],"wp:term":[{taxonomy:f,embeddable:a,href:ly},{taxonomy:p,embeddable:a,href:lz}],curies:[{name:g,href:h,templated:a}]}},{id:lA,date:bm,date_gmt:bn,guid:{rendered:lB},modified:bm,modified_gmt:bn,slug:lC,status:j,type:k,link:lD,title:{rendered:lE},content:{rendered:lF,protected:b},excerpt:{rendered:lG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bo,bk,r,bl],_links:{self:[{href:lH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lI}],"version-history":[{count:d,href:lJ}],"wp:attachment":[{href:lK}],"wp:term":[{taxonomy:f,embeddable:a,href:lL},{taxonomy:p,embeddable:a,href:lM}],curies:[{name:g,href:h,templated:a}]}},{id:lN,date:bp,date_gmt:bq,guid:{rendered:lO},modified:bp,modified_gmt:bq,slug:lP,status:j,type:k,link:lQ,title:{rendered:lR},content:{rendered:lS,protected:b},excerpt:{rendered:lT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,M],_links:{self:[{href:lU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lV}],"version-history":[{count:d,href:lW}],"wp:attachment":[{href:lX}],"wp:term":[{taxonomy:f,embeddable:a,href:lY},{taxonomy:p,embeddable:a,href:lZ}],curies:[{name:g,href:h,templated:a}]}},{id:l_,date:br,date_gmt:bs,guid:{rendered:l$},modified:br,modified_gmt:bs,slug:ma,status:j,type:k,link:mb,title:{rendered:mc},content:{rendered:md,protected:b},excerpt:{rendered:me,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[mf,r,mg],_links:{self:[{href:mh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mi}],"version-history":[{count:d,href:mj}],"wp:attachment":[{href:mk}],"wp:term":[{taxonomy:f,embeddable:a,href:ml},{taxonomy:p,embeddable:a,href:mm}],curies:[{name:g,href:h,templated:a}]}},{id:mn,date:bt,date_gmt:bu,guid:{rendered:mo},modified:bt,modified_gmt:bu,slug:mp,status:j,type:k,link:mq,title:{rendered:mr},content:{rendered:ms,protected:b},excerpt:{rendered:mt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bv,r],_links:{self:[{href:mu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mv}],"version-history":[{count:d,href:mw}],"wp:attachment":[{href:mx}],"wp:term":[{taxonomy:f,embeddable:a,href:my},{taxonomy:p,embeddable:a,href:mz}],curies:[{name:g,href:h,templated:a}]}},{id:mA,date:bw,date_gmt:bx,guid:{rendered:mB},modified:bw,modified_gmt:bx,slug:mC,status:j,type:k,link:mD,title:{rendered:mE},content:{rendered:mF,protected:b},excerpt:{rendered:mG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[mH,r],_links:{self:[{href:mI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mJ}],"version-history":[{count:d,href:mK}],"wp:attachment":[{href:mL}],"wp:term":[{taxonomy:f,embeddable:a,href:mM},{taxonomy:p,embeddable:a,href:mN}],curies:[{name:g,href:h,templated:a}]}},{id:mO,date:by,date_gmt:bz,guid:{rendered:mP},modified:by,modified_gmt:bz,slug:mQ,status:j,type:k,link:mR,title:{rendered:mS},content:{rendered:mT,protected:b},excerpt:{rendered:mU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bA,bB,r],_links:{self:[{href:mV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mW}],"version-history":[{count:d,href:mX}],"wp:attachment":[{href:mY}],"wp:term":[{taxonomy:f,embeddable:a,href:mZ},{taxonomy:p,embeddable:a,href:m_}],curies:[{name:g,href:h,templated:a}]}},{id:m$,date:bC,date_gmt:bD,guid:{rendered:na},modified:bC,modified_gmt:bD,slug:nb,status:j,type:k,link:nc,title:{rendered:nd},content:{rendered:ne,protected:b},excerpt:{rendered:nf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bA,ng,bB,r],_links:{self:[{href:nh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ni}],"version-history":[{count:d,href:nj}],"wp:attachment":[{href:nk}],"wp:term":[{taxonomy:f,embeddable:a,href:nl},{taxonomy:p,embeddable:a,href:nm}],curies:[{name:g,href:h,templated:a}]}},{id:nn,date:bE,date_gmt:bF,guid:{rendered:no},modified:bE,modified_gmt:bF,slug:np,status:j,type:k,link:nq,title:{rendered:nr},content:{rendered:ns,protected:b},excerpt:{rendered:nt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bG,r,M],_links:{self:[{href:nu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nv}],"version-history":[{count:d,href:nw}],"wp:attachment":[{href:nx}],"wp:term":[{taxonomy:f,embeddable:a,href:ny},{taxonomy:p,embeddable:a,href:nz}],curies:[{name:g,href:h,templated:a}]}},{id:nA,date:bH,date_gmt:bI,guid:{rendered:nB},modified:bH,modified_gmt:bI,slug:nC,status:j,type:k,link:nD,title:{rendered:nE},content:{rendered:nF,protected:b},excerpt:{rendered:nG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bo,nH,r],_links:{self:[{href:nI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nJ}],"version-history":[{count:d,href:nK}],"wp:attachment":[{href:nL}],"wp:term":[{taxonomy:f,embeddable:a,href:nM},{taxonomy:p,embeddable:a,href:nN}],curies:[{name:g,href:h,templated:a}]}},{id:nO,date:bJ,date_gmt:bK,guid:{rendered:nP},modified:bJ,modified_gmt:bK,slug:nQ,status:j,type:k,link:nR,title:{rendered:nS},content:{rendered:nT,protected:b},excerpt:{rendered:nU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,N,nV],_links:{self:[{href:nW}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nX}],"version-history":[{count:d,href:nY}],"wp:attachment":[{href:nZ}],"wp:term":[{taxonomy:f,embeddable:a,href:n_},{taxonomy:p,embeddable:a,href:n$}],curies:[{name:g,href:h,templated:a}]}},{id:oa,date:bL,date_gmt:bM,guid:{rendered:ob},modified:bL,modified_gmt:bM,slug:oc,status:j,type:k,link:od,title:{rendered:oe},content:{rendered:of,protected:b},excerpt:{rendered:og,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,N,oh],_links:{self:[{href:oi}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oj}],"version-history":[{count:d,href:ok}],"wp:attachment":[{href:ol}],"wp:term":[{taxonomy:f,embeddable:a,href:om},{taxonomy:p,embeddable:a,href:on}],curies:[{name:g,href:h,templated:a}]}},{id:oo,date:bN,date_gmt:bO,guid:{rendered:op},modified:bN,modified_gmt:bO,slug:oq,status:j,type:k,link:or,title:{rendered:os},content:{rendered:ot,protected:b},excerpt:{rendered:ou,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[ov,r,ow],_links:{self:[{href:ox}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oy}],"version-history":[{count:d,href:oz}],"wp:attachment":[{href:oA}],"wp:term":[{taxonomy:f,embeddable:a,href:oB},{taxonomy:p,embeddable:a,href:oC}],curies:[{name:g,href:h,templated:a}]}},{id:oD,date:bP,date_gmt:bQ,guid:{rendered:oE},modified:bP,modified_gmt:bQ,slug:oF,status:j,type:k,link:oG,title:{rendered:oH},content:{rendered:oI,protected:b},excerpt:{rendered:oJ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r],_links:{self:[{href:oK}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oL}],"version-history":[{count:d,href:oM}],"wp:attachment":[{href:oN}],"wp:term":[{taxonomy:f,embeddable:a,href:oO},{taxonomy:p,embeddable:a,href:oP}],curies:[{name:g,href:h,templated:a}]}},{id:oQ,date:bR,date_gmt:bS,guid:{rendered:oR},modified:bR,modified_gmt:bS,slug:oS,status:j,type:k,link:oT,title:{rendered:oU},content:{rendered:oV,protected:b},excerpt:{rendered:oW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,bT,oX],_links:{self:[{href:oY}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oZ}],"version-history":[{count:d,href:o_}],"wp:attachment":[{href:o$}],"wp:term":[{taxonomy:f,embeddable:a,href:pa},{taxonomy:p,embeddable:a,href:pb}],curies:[{name:g,href:h,templated:a}]}},{id:pc,date:bU,date_gmt:bV,guid:{rendered:pd},modified:bU,modified_gmt:bV,slug:pe,status:j,type:k,link:pf,title:{rendered:pg},content:{rendered:ph,protected:b},excerpt:{rendered:pi,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[pj,r],_links:{self:[{href:pk}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pl}],"version-history":[{count:d,href:pm}],"wp:attachment":[{href:pn}],"wp:term":[{taxonomy:f,embeddable:a,href:po},{taxonomy:p,embeddable:a,href:pp}],curies:[{name:g,href:h,templated:a}]}},{id:pq,date:bW,date_gmt:bX,guid:{rendered:pr},modified:bW,modified_gmt:bX,slug:ps,status:j,type:k,link:pt,title:{rendered:pu},content:{rendered:pv,protected:b},excerpt:{rendered:pw,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,bT],_links:{self:[{href:px}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:py}],"version-history":[{count:d,href:pz}],"wp:attachment":[{href:pA}],"wp:term":[{taxonomy:f,embeddable:a,href:pB},{taxonomy:p,embeddable:a,href:pC}],curies:[{name:g,href:h,templated:a}]}},{id:pD,date:bY,date_gmt:bZ,guid:{rendered:pE},modified:bY,modified_gmt:bZ,slug:pF,status:j,type:k,link:pG,title:{rendered:pH},content:{rendered:pI,protected:b},excerpt:{rendered:pJ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bG,r,b_],_links:{self:[{href:pK}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pL}],"version-history":[{count:d,href:pM}],"wp:attachment":[{href:pN}],"wp:term":[{taxonomy:f,embeddable:a,href:pO},{taxonomy:p,embeddable:a,href:pP}],curies:[{name:g,href:h,templated:a}]}},{id:pQ,date:b$,date_gmt:ca,guid:{rendered:pR},modified:b$,modified_gmt:ca,slug:pS,status:j,type:k,link:pT,title:{rendered:pU},content:{rendered:pV,protected:b},excerpt:{rendered:pW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[A],_links:{self:[{href:pX}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pY}],"version-history":[{count:d,href:pZ}],"wp:attachment":[{href:p_}],"wp:term":[{taxonomy:f,embeddable:a,href:p$},{taxonomy:p,embeddable:a,href:qa}],curies:[{name:g,href:h,templated:a}]}},{id:qb,date:cb,date_gmt:cc,guid:{rendered:qc},modified:cb,modified_gmt:cc,slug:qd,status:j,type:k,link:qe,title:{rendered:qf},content:{rendered:qg,protected:b},excerpt:{rendered:qh,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[A,r],_links:{self:[{href:qi}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qj}],"version-history":[{count:d,href:qk}],"wp:attachment":[{href:ql}],"wp:term":[{taxonomy:f,embeddable:a,href:qm},{taxonomy:p,embeddable:a,href:qn}],curies:[{name:g,href:h,templated:a}]}},{id:qo,date:cd,date_gmt:ce,guid:{rendered:qp},modified:cd,modified_gmt:ce,slug:qq,status:j,type:k,link:qr,title:{rendered:qs},content:{rendered:qt,protected:b},excerpt:{rendered:qu,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:qv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qw}],"version-history":[{count:d,href:qx}],"wp:attachment":[{href:qy}],"wp:term":[{taxonomy:f,embeddable:a,href:qz},{taxonomy:p,embeddable:a,href:qA}],curies:[{name:g,href:h,templated:a}]}},{id:qB,date:cf,date_gmt:cg,guid:{rendered:qC},modified:cf,modified_gmt:cg,slug:qD,status:j,type:k,link:qE,title:{rendered:qF},content:{rendered:qG,protected:b},excerpt:{rendered:qH,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:qI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qJ}],"version-history":[{count:d,href:qK}],"wp:attachment":[{href:qL}],"wp:term":[{taxonomy:f,embeddable:a,href:qM},{taxonomy:p,embeddable:a,href:qN}],curies:[{name:g,href:h,templated:a}]}},{id:qO,date:ch,date_gmt:ci,guid:{rendered:qP},modified:ch,modified_gmt:ci,slug:qQ,status:j,type:k,link:qR,title:{rendered:qS},content:{rendered:qT,protected:b},excerpt:{rendered:qU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:qV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qW}],"version-history":[{count:d,href:qX}],"wp:attachment":[{href:qY}],"wp:term":[{taxonomy:f,embeddable:a,href:qZ},{taxonomy:p,embeddable:a,href:q_}],curies:[{name:g,href:h,templated:a}]}},{id:q$,date:cj,date_gmt:ck,guid:{rendered:ra},modified:cj,modified_gmt:ck,slug:rb,status:j,type:k,link:rc,title:{rendered:rd},content:{rendered:re,protected:b},excerpt:{rendered:rf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[rg],_links:{self:[{href:rh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ri}],"version-history":[{count:d,href:rj}],"wp:attachment":[{href:rk}],"wp:term":[{taxonomy:f,embeddable:a,href:rl},{taxonomy:p,embeddable:a,href:rm}],curies:[{name:g,href:h,templated:a}]}},{id:rn,date:cl,date_gmt:cm,guid:{rendered:ro},modified:cl,modified_gmt:cm,slug:rp,status:j,type:k,link:rq,title:{rendered:rr},content:{rendered:rs,protected:b},excerpt:{rendered:rt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:ru}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rv}],"version-history":[{count:d,href:rw}],"wp:attachment":[{href:rx}],"wp:term":[{taxonomy:f,embeddable:a,href:ry},{taxonomy:p,embeddable:a,href:rz}],curies:[{name:g,href:h,templated:a}]}},{id:rA,date:cn,date_gmt:co,guid:{rendered:rB},modified:cn,modified_gmt:co,slug:rC,status:j,type:k,link:rD,title:{rendered:rE},content:{rendered:rF,protected:b},excerpt:{rendered:rG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:rH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rI}],"version-history":[{count:d,href:rJ}],"wp:attachment":[{href:rK}],"wp:term":[{taxonomy:f,embeddable:a,href:rL},{taxonomy:p,embeddable:a,href:rM}],curies:[{name:g,href:h,templated:a}]}},{id:rN,date:cp,date_gmt:cq,guid:{rendered:rO},modified:cp,modified_gmt:cq,slug:rP,status:j,type:k,link:rQ,title:{rendered:rR},content:{rendered:rS,protected:b},excerpt:{rendered:rT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,A,r],_links:{self:[{href:rU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rV}],"version-history":[{count:d,href:rW}],"wp:attachment":[{href:rX}],"wp:term":[{taxonomy:f,embeddable:a,href:rY},{taxonomy:p,embeddable:a,href:rZ}],curies:[{name:g,href:h,templated:a}]}},{id:r_,date:cr,date_gmt:cs,guid:{rendered:r$},modified:cr,modified_gmt:cs,slug:sa,status:j,type:k,link:sb,title:{rendered:sc},content:{rendered:sd,protected:b},excerpt:{rendered:se,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,A,r],_links:{self:[{href:sf}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sg}],"version-history":[{count:d,href:sh}],"wp:attachment":[{href:si}],"wp:term":[{taxonomy:f,embeddable:a,href:sj},{taxonomy:p,embeddable:a,href:sk}],curies:[{name:g,href:h,templated:a}]}},{id:sl,date:ct,date_gmt:cu,guid:{rendered:sm},modified:ct,modified_gmt:cu,slug:sn,status:j,type:k,link:so,title:{rendered:sp},content:{rendered:sq,protected:b},excerpt:{rendered:sr,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[ss,r],_links:{self:[{href:st}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:su}],"version-history":[{count:d,href:sv}],"wp:attachment":[{href:sw}],"wp:term":[{taxonomy:f,embeddable:a,href:sx},{taxonomy:p,embeddable:a,href:sy}],curies:[{name:g,href:h,templated:a}]}},{id:sz,date:cv,date_gmt:cw,guid:{rendered:sA},modified:cv,modified_gmt:cw,slug:sB,status:j,type:k,link:sC,title:{rendered:sD},content:{rendered:sE,protected:b},excerpt:{rendered:sF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[sG],_links:{self:[{href:sH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sI}],"version-history":[{count:d,href:sJ}],"wp:attachment":[{href:sK}],"wp:term":[{taxonomy:f,embeddable:a,href:sL},{taxonomy:p,embeddable:a,href:sM}],curies:[{name:g,href:h,templated:a}]}},{id:sN,date:cx,date_gmt:cy,guid:{rendered:sO},modified:cx,modified_gmt:cy,slug:sP,status:j,type:k,link:sQ,title:{rendered:sR},content:{rendered:sS,protected:b},excerpt:{rendered:sT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[b_],_links:{self:[{href:sU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sV}],"version-history":[{count:d,href:sW}],"wp:attachment":[{href:sX}],"wp:term":[{taxonomy:f,embeddable:a,href:sY},{taxonomy:p,embeddable:a,href:sZ}],curies:[{name:g,href:h,templated:a}]}},{id:s_,date:cz,date_gmt:cA,guid:{rendered:s$},modified:cz,modified_gmt:cA,slug:ta,status:j,type:k,link:tb,title:{rendered:tc},content:{rendered:td,protected:b},excerpt:{rendered:te,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,tf],_links:{self:[{href:tg}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:th}],"version-history":[{count:d,href:ti}],"wp:attachment":[{href:tj}],"wp:term":[{taxonomy:f,embeddable:a,href:tk},{taxonomy:p,embeddable:a,href:tl}],curies:[{name:g,href:h,templated:a}]}},{id:tm,date:cB,date_gmt:cC,guid:{rendered:tn},modified:cB,modified_gmt:cC,slug:to,status:j,type:k,link:tp,title:{rendered:tq},content:{rendered:tr,protected:b},excerpt:{rendered:ts,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,tt],_links:{self:[{href:tu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tv}],"version-history":[{count:d,href:tw}],"wp:attachment":[{href:tx}],"wp:term":[{taxonomy:f,embeddable:a,href:ty},{taxonomy:p,embeddable:a,href:tz}],curies:[{name:g,href:h,templated:a}]}},{id:tA,date:cD,date_gmt:cE,guid:{rendered:tB},modified:cD,modified_gmt:cE,slug:tC,status:j,type:k,link:tD,title:{rendered:tE},content:{rendered:tF,protected:b},excerpt:{rendered:tG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[tH,H,X],_links:{self:[{href:tI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tJ}],"version-history":[{count:d,href:tK}],"wp:attachment":[{href:tL}],"wp:term":[{taxonomy:f,embeddable:a,href:tM},{taxonomy:p,embeddable:a,href:tN}],curies:[{name:g,href:h,templated:a}]}},{id:tO,date:cF,date_gmt:cG,guid:{rendered:tP},modified:cF,modified_gmt:cG,slug:tQ,status:j,type:k,link:tR,title:{rendered:tS},content:{rendered:tT,protected:b},excerpt:{rendered:tU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:tV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tW}],"version-history":[{count:d,href:tX}],"wp:attachment":[{href:tY}],"wp:term":[{taxonomy:f,embeddable:a,href:tZ},{taxonomy:p,embeddable:a,href:t_}],curies:[{name:g,href:h,templated:a}]}},{id:t$,date:cH,date_gmt:cI,guid:{rendered:ua},modified:cH,modified_gmt:cI,slug:ub,status:j,type:k,link:uc,title:{rendered:ud},content:{rendered:ue,protected:b},excerpt:{rendered:uf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:ug}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uh}],"version-history":[{count:d,href:ui}],"wp:attachment":[{href:uj}],"wp:term":[{taxonomy:f,embeddable:a,href:uk},{taxonomy:p,embeddable:a,href:ul}],curies:[{name:g,href:h,templated:a}]}},{id:um,date:cJ,date_gmt:cK,guid:{rendered:un},modified:cJ,modified_gmt:cK,slug:uo,status:j,type:k,link:up,title:{rendered:uq},content:{rendered:ur,protected:b},excerpt:{rendered:us,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:ut}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uu}],"version-history":[{count:d,href:uv}],"wp:attachment":[{href:uw}],"wp:term":[{taxonomy:f,embeddable:a,href:ux},{taxonomy:p,embeddable:a,href:uy}],curies:[{name:g,href:h,templated:a}]}},{id:N,date:cL,date_gmt:cM,guid:{rendered:uz},modified:cL,modified_gmt:cM,slug:uA,status:j,type:k,link:uB,title:{rendered:uC},content:{rendered:uD,protected:b},excerpt:{rendered:uE,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:uF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uG}],"version-history":[{count:d,href:uH}],"wp:attachment":[{href:uI}],"wp:term":[{taxonomy:f,embeddable:a,href:uJ},{taxonomy:p,embeddable:a,href:uK}],curies:[{name:g,href:h,templated:a}]}},{id:bv,date:cN,date_gmt:cO,guid:{rendered:uL},modified:cN,modified_gmt:cO,slug:uM,status:j,type:k,link:uN,title:{rendered:uO},content:{rendered:uP,protected:b},excerpt:{rendered:uQ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:uR}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uS}],"version-history":[{count:d,href:uT}],"wp:attachment":[{href:uU}],"wp:term":[{taxonomy:f,embeddable:a,href:uV},{taxonomy:p,embeddable:a,href:uW}],curies:[{name:g,href:h,templated:a}]}},{id:s,date:cP,date_gmt:cQ,guid:{rendered:uX},modified:cP,modified_gmt:cQ,slug:uY,status:j,type:k,link:uZ,title:{rendered:u_},content:{rendered:u$,protected:b},excerpt:{rendered:va,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[vb,H,vc,M],_links:{self:[{href:vd}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ve}],"version-history":[{count:d,href:vf}],"wp:attachment":[{href:vg}],"wp:term":[{taxonomy:f,embeddable:a,href:vh},{taxonomy:p,embeddable:a,href:vi}],curies:[{name:g,href:h,templated:a}]}},{id:i,date:cR,date_gmt:cS,guid:{rendered:vj},modified:cR,modified_gmt:cS,slug:vk,status:j,type:k,link:vl,title:{rendered:vm},content:{rendered:vn,protected:b},excerpt:{rendered:vo,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[F],tags:[],_links:{self:[{href:vp}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:vq}],"version-history":[{count:d,href:vr}],"wp:attachment":[{href:vs}],"wp:term":[{taxonomy:f,embeddable:a,href:vt},{taxonomy:p,embeddable:a,href:vu}],curies:[{name:g,href:h,templated:a}]}}]}],fetch:{"0":{categories:{categories:[{id:E,count:t,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:g,href:h,templated:a}]}},{id:y,count:t,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:g,href:h,templated:a}]}},{id:cT,count:i,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fgulp\u002F",name:vv,slug:vv,taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F77"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=77"}],curies:[{name:g,href:h,templated:a}]}},{id:t,count:q,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:g,href:h,templated:a}]}},{id:z,count:t,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:g,href:h,templated:a}]}},{id:q,count:cU,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:"Unity",slug:"unity",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:g,href:h,templated:a}]}},{id:s,count:F,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:g,href:h,templated:a}]}},{id:x,count:z,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:g,href:h,templated:a}]}},{id:F,count:y,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:g,href:h,templated:a}]}},{id:i,count:d,description:e,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:f,parent:d,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:C}],about:[{href:D}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:g,href:h,templated:a}]}}]}},"1":{contents:{posts:[{id:cV,date:P,date_gmt:Q,guid:{rendered:cW},modified:P,modified_gmt:Q,slug:cX,status:j,type:k,link:cY,title:{rendered:cZ},content:{rendered:c_,protected:b},excerpt:{rendered:c$,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[cT],tags:[da,R,S],_links:{self:[{href:db}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dc}],"version-history":[{count:s,href:dd}],"predecessor-version":[{id:de,href:df}],"wp:attachment":[{href:dg}],"wp:term":[{taxonomy:f,embeddable:a,href:dh},{taxonomy:p,embeddable:a,href:di}],curies:[{name:g,href:h,templated:a}]}},{id:dj,date:T,date_gmt:U,guid:{rendered:dk},modified:T,modified_gmt:U,slug:dl,status:j,type:k,link:dm,title:{rendered:dn},content:{rendered:do0,protected:b},excerpt:{rendered:dp,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[F],tags:[G,dq,S],_links:{self:[{href:dr}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ds}],"version-history":[{count:d,href:dt}],"wp:attachment":[{href:du}],"wp:term":[{taxonomy:f,embeddable:a,href:dv},{taxonomy:p,embeddable:a,href:dw}],curies:[{name:g,href:h,templated:a}]}},{id:dx,date:V,date_gmt:W,guid:{rendered:dy},modified:V,modified_gmt:W,slug:dz,status:j,type:k,link:dA,title:{rendered:dB},content:{rendered:dC,protected:b},excerpt:{rendered:dD,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[dE,X],_links:{self:[{href:dF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dG}],"version-history":[{count:d,href:dH}],"wp:attachment":[{href:dI}],"wp:term":[{taxonomy:f,embeddable:a,href:dJ},{taxonomy:p,embeddable:a,href:dK}],curies:[{name:g,href:h,templated:a}]}},{id:dL,date:Y,date_gmt:Z,guid:{rendered:dM},modified:Y,modified_gmt:Z,slug:dN,status:j,type:k,link:dO,title:{rendered:dP},content:{rendered:dQ,protected:b},excerpt:{rendered:dR,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[_],_links:{self:[{href:dS}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:dT}],"version-history":[{count:d,href:dU}],"wp:attachment":[{href:dV}],"wp:term":[{taxonomy:f,embeddable:a,href:dW},{taxonomy:p,embeddable:a,href:dX}],curies:[{name:g,href:h,templated:a}]}},{id:dY,date:$,date_gmt:aa,guid:{rendered:dZ},modified:$,modified_gmt:aa,slug:d_,status:j,type:k,link:d$,title:{rendered:ea},content:{rendered:eb,protected:b},excerpt:{rendered:ec,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y,t],tags:[ed,_],_links:{self:[{href:ee}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ef}],"version-history":[{count:d,href:eg}],"wp:attachment":[{href:eh}],"wp:term":[{taxonomy:f,embeddable:a,href:ei},{taxonomy:p,embeddable:a,href:ej}],curies:[{name:g,href:h,templated:a}]}},{id:ek,date:ab,date_gmt:ac,guid:{rendered:el},modified:ab,modified_gmt:ac,slug:em,status:j,type:k,link:en,title:{rendered:eo},content:{rendered:ep,protected:b},excerpt:{rendered:eq,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,R,er],_links:{self:[{href:es}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:et}],"version-history":[{count:d,href:eu}],"wp:attachment":[{href:ev}],"wp:term":[{taxonomy:f,embeddable:a,href:ew},{taxonomy:p,embeddable:a,href:ex}],curies:[{name:g,href:h,templated:a}]}},{id:ey,date:ad,date_gmt:ae,guid:{rendered:ez},modified:ad,modified_gmt:ae,slug:eA,status:j,type:k,link:eB,title:{rendered:eC},content:{rendered:eD,protected:b},excerpt:{rendered:eE,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,v],_links:{self:[{href:eF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:eG}],"version-history":[{count:d,href:eH}],"wp:attachment":[{href:eI}],"wp:term":[{taxonomy:f,embeddable:a,href:eJ},{taxonomy:p,embeddable:a,href:eK}],curies:[{name:g,href:h,templated:a}]}},{id:eL,date:af,date_gmt:ag,guid:{rendered:eM},modified:af,modified_gmt:ag,slug:eN,status:j,type:k,link:eO,title:{rendered:eP},content:{rendered:eQ,protected:b},excerpt:{rendered:eR,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[y],tags:[G,eS,v],_links:{self:[{href:eT}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:eU}],"version-history":[{count:d,href:eV}],"wp:attachment":[{href:eW}],"wp:term":[{taxonomy:f,embeddable:a,href:eX},{taxonomy:p,embeddable:a,href:eY}],curies:[{name:g,href:h,templated:a}]}},{id:eZ,date:ah,date_gmt:ai,guid:{rendered:e_},modified:ah,modified_gmt:ai,slug:e$,status:j,type:k,link:fa,title:{rendered:fb},content:{rendered:fc,protected:b},excerpt:{rendered:fd,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fe}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ff}],"version-history":[{count:d,href:fg}],"wp:attachment":[{href:fh}],"wp:term":[{taxonomy:f,embeddable:a,href:fi},{taxonomy:p,embeddable:a,href:fj}],curies:[{name:g,href:h,templated:a}]}},{id:fk,date:aj,date_gmt:ak,guid:{rendered:fl},modified:aj,modified_gmt:ak,slug:fm,status:j,type:k,link:fn,title:{rendered:fo},content:{rendered:fp,protected:b},excerpt:{rendered:fq,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fr}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fs}],"version-history":[{count:d,href:ft}],"wp:attachment":[{href:fu}],"wp:term":[{taxonomy:f,embeddable:a,href:fv},{taxonomy:p,embeddable:a,href:fw}],curies:[{name:g,href:h,templated:a}]}},{id:fx,date:al,date_gmt:am,guid:{rendered:fy},modified:al,modified_gmt:am,slug:fz,status:j,type:k,link:fA,title:{rendered:fB},content:{rendered:fC,protected:b},excerpt:{rendered:fD,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v],_links:{self:[{href:fE}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fF}],"version-history":[{count:d,href:fG}],"wp:attachment":[{href:fH}],"wp:term":[{taxonomy:f,embeddable:a,href:fI},{taxonomy:p,embeddable:a,href:fJ}],curies:[{name:g,href:h,templated:a}]}},{id:fK,date:an,date_gmt:ao,guid:{rendered:fL},modified:an,modified_gmt:ao,slug:fM,status:j,type:k,link:fN,title:{rendered:fO},content:{rendered:fP,protected:b},excerpt:{rendered:fQ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[H],_links:{self:[{href:fR}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:fS}],"version-history":[{count:d,href:fT}],"wp:attachment":[{href:fU}],"wp:term":[{taxonomy:f,embeddable:a,href:fV},{taxonomy:p,embeddable:a,href:fW}],curies:[{name:g,href:h,templated:a}]}},{id:fX,date:ap,date_gmt:aq,guid:{rendered:fY},modified:ap,modified_gmt:aq,slug:fZ,status:j,type:k,link:f_,title:{rendered:f$},content:{rendered:ga,protected:b},excerpt:{rendered:gb,protected:b},author:i,featured_media:ar,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K,cU,gc],_links:{self:[{href:gd}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ge}],"version-history":[{count:d,href:gf}],"wp:featuredmedia":[{embeddable:a,href:as}],"wp:attachment":[{href:gg}],"wp:term":[{taxonomy:f,embeddable:a,href:gh},{taxonomy:p,embeddable:a,href:gi}],curies:[{name:g,href:h,templated:a}]}},{id:gj,date:at,date_gmt:au,guid:{rendered:gk},modified:at,modified_gmt:au,slug:gl,status:j,type:k,link:gm,title:{rendered:gn},content:{rendered:go,protected:b},excerpt:{rendered:gp,protected:b},author:i,featured_media:av,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K],_links:{self:[{href:gq}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gr}],"version-history":[{count:d,href:gs}],"wp:featuredmedia":[{embeddable:a,href:aw}],"wp:attachment":[{href:gt}],"wp:term":[{taxonomy:f,embeddable:a,href:gu},{taxonomy:p,embeddable:a,href:gv}],curies:[{name:g,href:h,templated:a}]}},{id:gw,date:ax,date_gmt:ay,guid:{rendered:gx},modified:ax,modified_gmt:ay,slug:gy,status:j,type:k,link:gz,title:{rendered:gA},content:{rendered:gB,protected:b},excerpt:{rendered:gC,protected:b},author:i,featured_media:gD,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[t],tags:[K,gE],_links:{self:[{href:gF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gG}],"version-history":[{count:d,href:gH}],"wp:featuredmedia":[{embeddable:a,href:gI}],"wp:attachment":[{href:gJ}],"wp:term":[{taxonomy:f,embeddable:a,href:gK},{taxonomy:p,embeddable:a,href:gL}],curies:[{name:g,href:h,templated:a}]}},{id:gM,date:az,date_gmt:aA,guid:{rendered:gN},modified:az,modified_gmt:aA,slug:gO,status:j,type:k,link:gP,title:{rendered:gQ},content:{rendered:gR,protected:b},excerpt:{rendered:gS,protected:b},author:i,featured_media:ar,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[v,gT,gU,gV],_links:{self:[{href:gW}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:gX}],"version-history":[{count:d,href:gY}],"wp:featuredmedia":[{embeddable:a,href:as}],"wp:attachment":[{href:gZ}],"wp:term":[{taxonomy:f,embeddable:a,href:g_},{taxonomy:p,embeddable:a,href:g$}],curies:[{name:g,href:h,templated:a}]}},{id:ha,date:aB,date_gmt:aC,guid:{rendered:hb},modified:aB,modified_gmt:aC,slug:hc,status:j,type:k,link:hd,title:{rendered:he},content:{rendered:hf,protected:b},excerpt:{rendered:hg,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[x],tags:[],_links:{self:[{href:hh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hi}],"version-history":[{count:d,href:hj}],"wp:attachment":[{href:hk}],"wp:term":[{taxonomy:f,embeddable:a,href:hl},{taxonomy:p,embeddable:a,href:hm}],curies:[{name:g,href:h,templated:a}]}},{id:hn,date:aD,date_gmt:aE,guid:{rendered:ho},modified:aD,modified_gmt:aE,slug:hp,status:j,type:k,link:hq,title:{rendered:hr},content:{rendered:hs,protected:b},excerpt:{rendered:ht,protected:b},author:i,featured_media:av,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[H,hu],_links:{self:[{href:hv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hw}],"version-history":[{count:d,href:hx}],"wp:featuredmedia":[{embeddable:a,href:aw}],"wp:attachment":[{href:hy}],"wp:term":[{taxonomy:f,embeddable:a,href:hz},{taxonomy:p,embeddable:a,href:hA}],curies:[{name:g,href:h,templated:a}]}},{id:hB,date:aF,date_gmt:aG,guid:{rendered:hC},modified:aF,modified_gmt:aG,slug:hD,status:j,type:k,link:hE,title:{rendered:hF},content:{rendered:hG,protected:b},excerpt:{rendered:hH,protected:b},author:i,featured_media:hI,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:hJ}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hK}],"version-history":[{count:d,href:hL}],"wp:featuredmedia":[{embeddable:a,href:hM}],"wp:attachment":[{href:hN}],"wp:term":[{taxonomy:f,embeddable:a,href:hO},{taxonomy:p,embeddable:a,href:hP}],curies:[{name:g,href:h,templated:a}]}},{id:hQ,date:aH,date_gmt:aI,guid:{rendered:hR},modified:aH,modified_gmt:aI,slug:hS,status:j,type:k,link:hT,title:{rendered:hU},content:{rendered:hV,protected:b},excerpt:{rendered:hW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[aJ,r],_links:{self:[{href:hX}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:hY}],"version-history":[{count:d,href:hZ}],"wp:attachment":[{href:h_}],"wp:term":[{taxonomy:f,embeddable:a,href:h$},{taxonomy:p,embeddable:a,href:ia}],curies:[{name:g,href:h,templated:a}]}},{id:ib,date:aK,date_gmt:aL,guid:{rendered:ic},modified:aK,modified_gmt:aL,slug:id,status:j,type:k,link:ie,title:{rendered:if0},content:{rendered:ig,protected:b},excerpt:{rendered:ih,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:ii}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ij}],"version-history":[{count:d,href:ik}],"wp:attachment":[{href:il}],"wp:term":[{taxonomy:f,embeddable:a,href:im},{taxonomy:p,embeddable:a,href:in0}],curies:[{name:g,href:h,templated:a}]}},{id:io,date:aM,date_gmt:aN,guid:{rendered:ip},modified:aM,modified_gmt:aN,slug:iq,status:j,type:k,link:ir,title:{rendered:is},content:{rendered:it,protected:b},excerpt:{rendered:iu,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[aJ,I,r],_links:{self:[{href:iv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iw}],"version-history":[{count:d,href:ix}],"wp:attachment":[{href:iy}],"wp:term":[{taxonomy:f,embeddable:a,href:iz},{taxonomy:p,embeddable:a,href:iA}],curies:[{name:g,href:h,templated:a}]}},{id:iB,date:aO,date_gmt:aP,guid:{rendered:iC},modified:aO,modified_gmt:aP,slug:iD,status:j,type:k,link:iE,title:{rendered:iF},content:{rendered:iG,protected:b},excerpt:{rendered:iH,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[I,r],_links:{self:[{href:iI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iJ}],"version-history":[{count:d,href:iK}],"wp:attachment":[{href:iL}],"wp:term":[{taxonomy:f,embeddable:a,href:iM},{taxonomy:p,embeddable:a,href:iN}],curies:[{name:g,href:h,templated:a}]}},{id:iO,date:aQ,date_gmt:aR,guid:{rendered:iP},modified:aQ,modified_gmt:aR,slug:iQ,status:j,type:k,link:iR,title:{rendered:iS},content:{rendered:iT,protected:b},excerpt:{rendered:iU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:iV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:iW}],"version-history":[{count:d,href:iX}],"wp:attachment":[{href:iY}],"wp:term":[{taxonomy:f,embeddable:a,href:iZ},{taxonomy:p,embeddable:a,href:i_}],curies:[{name:g,href:h,templated:a}]}},{id:i$,date:aS,date_gmt:aT,guid:{rendered:ja},modified:aS,modified_gmt:aT,slug:jb,status:j,type:k,link:jc,title:{rendered:jd},content:{rendered:je,protected:b},excerpt:{rendered:jf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:jg}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jh}],"version-history":[{count:d,href:ji}],"wp:attachment":[{href:jj}],"wp:term":[{taxonomy:f,embeddable:a,href:jk},{taxonomy:p,embeddable:a,href:jl}],curies:[{name:g,href:h,templated:a}]}},{id:jm,date:aU,date_gmt:aV,guid:{rendered:jn},modified:aU,modified_gmt:aV,slug:jo,status:j,type:k,link:jp,title:{rendered:jq},content:{rendered:jr,protected:b},excerpt:{rendered:js,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[L,r],_links:{self:[{href:jt}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ju}],"version-history":[{count:d,href:jv}],"wp:attachment":[{href:jw}],"wp:term":[{taxonomy:f,embeddable:a,href:jx},{taxonomy:p,embeddable:a,href:jy}],curies:[{name:g,href:h,templated:a}]}},{id:jz,date:aW,date_gmt:aX,guid:{rendered:jA},modified:aW,modified_gmt:aX,slug:jB,status:j,type:k,link:jC,title:{rendered:jD},content:{rendered:jE,protected:b},excerpt:{rendered:jF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[jG,J],_links:{self:[{href:jH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jI}],"version-history":[{count:d,href:jJ}],"wp:attachment":[{href:jK}],"wp:term":[{taxonomy:f,embeddable:a,href:jL},{taxonomy:p,embeddable:a,href:jM}],curies:[{name:g,href:h,templated:a}]}},{id:jN,date:aY,date_gmt:aZ,guid:{rendered:jO},modified:aY,modified_gmt:aZ,slug:jP,status:j,type:k,link:jQ,title:{rendered:jR},content:{rendered:jS,protected:b},excerpt:{rendered:jT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[u,J],_links:{self:[{href:jU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:jV}],"version-history":[{count:d,href:jW}],"wp:attachment":[{href:jX}],"wp:term":[{taxonomy:f,embeddable:a,href:jY},{taxonomy:p,embeddable:a,href:jZ}],curies:[{name:g,href:h,templated:a}]}},{id:j_,date:a_,date_gmt:a$,guid:{rendered:j$},modified:a_,modified_gmt:a$,slug:ka,status:j,type:k,link:kb,title:{rendered:kc},content:{rendered:kd,protected:b},excerpt:{rendered:ke,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[u,J],_links:{self:[{href:kf}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kg}],"version-history":[{count:d,href:kh}],"wp:attachment":[{href:ki}],"wp:term":[{taxonomy:f,embeddable:a,href:kj},{taxonomy:p,embeddable:a,href:kk}],curies:[{name:g,href:h,templated:a}]}},{id:kl,date:ba,date_gmt:bb,guid:{rendered:km},modified:ba,modified_gmt:bb,slug:kn,status:j,type:k,link:ko,title:{rendered:kp},content:{rendered:kq,protected:b},excerpt:{rendered:kr,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[ks,u,J],_links:{self:[{href:kt}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ku}],"version-history":[{count:d,href:kv}],"wp:attachment":[{href:kw}],"wp:term":[{taxonomy:f,embeddable:a,href:kx},{taxonomy:p,embeddable:a,href:ky}],curies:[{name:g,href:h,templated:a}]}},{id:kz,date:bc,date_gmt:bd,guid:{rendered:kA},modified:bc,modified_gmt:bd,slug:kB,status:j,type:k,link:kC,title:{rendered:kD},content:{rendered:kE,protected:b},excerpt:{rendered:kF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:kG}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kH}],"version-history":[{count:d,href:kI}],"wp:attachment":[{href:kJ}],"wp:term":[{taxonomy:f,embeddable:a,href:kK},{taxonomy:p,embeddable:a,href:kL}],curies:[{name:g,href:h,templated:a}]}},{id:kM,date:be,date_gmt:bf,guid:{rendered:kN},modified:be,modified_gmt:bf,slug:kO,status:j,type:k,link:kP,title:{rendered:kQ},content:{rendered:kR,protected:b},excerpt:{rendered:kS,protected:b},author:i,featured_media:kT,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q,F],tags:[w,r],_links:{self:[{href:kU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:kV}],"version-history":[{count:d,href:kW}],"wp:featuredmedia":[{embeddable:a,href:kX}],"wp:attachment":[{href:kY}],"wp:term":[{taxonomy:f,embeddable:a,href:kZ},{taxonomy:p,embeddable:a,href:k_}],curies:[{name:g,href:h,templated:a}]}},{id:k$,date:bg,date_gmt:bh,guid:{rendered:la},modified:bg,modified_gmt:bh,slug:lb,status:j,type:k,link:lc,title:{rendered:ld},content:{rendered:le,protected:b},excerpt:{rendered:lf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[lg,A],_links:{self:[{href:lh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:li}],"version-history":[{count:d,href:lj}],"wp:attachment":[{href:lk}],"wp:term":[{taxonomy:f,embeddable:a,href:ll},{taxonomy:p,embeddable:a,href:lm}],curies:[{name:g,href:h,templated:a}]}},{id:ln,date:bi,date_gmt:bj,guid:{rendered:lo},modified:bi,modified_gmt:bj,slug:lp,status:j,type:k,link:lq,title:{rendered:lr},content:{rendered:ls,protected:b},excerpt:{rendered:lt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bk,r,bl],_links:{self:[{href:lu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lv}],"version-history":[{count:d,href:lw}],"wp:attachment":[{href:lx}],"wp:term":[{taxonomy:f,embeddable:a,href:ly},{taxonomy:p,embeddable:a,href:lz}],curies:[{name:g,href:h,templated:a}]}},{id:lA,date:bm,date_gmt:bn,guid:{rendered:lB},modified:bm,modified_gmt:bn,slug:lC,status:j,type:k,link:lD,title:{rendered:lE},content:{rendered:lF,protected:b},excerpt:{rendered:lG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bo,bk,r,bl],_links:{self:[{href:lH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lI}],"version-history":[{count:d,href:lJ}],"wp:attachment":[{href:lK}],"wp:term":[{taxonomy:f,embeddable:a,href:lL},{taxonomy:p,embeddable:a,href:lM}],curies:[{name:g,href:h,templated:a}]}},{id:lN,date:bp,date_gmt:bq,guid:{rendered:lO},modified:bp,modified_gmt:bq,slug:lP,status:j,type:k,link:lQ,title:{rendered:lR},content:{rendered:lS,protected:b},excerpt:{rendered:lT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,M],_links:{self:[{href:lU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:lV}],"version-history":[{count:d,href:lW}],"wp:attachment":[{href:lX}],"wp:term":[{taxonomy:f,embeddable:a,href:lY},{taxonomy:p,embeddable:a,href:lZ}],curies:[{name:g,href:h,templated:a}]}},{id:l_,date:br,date_gmt:bs,guid:{rendered:l$},modified:br,modified_gmt:bs,slug:ma,status:j,type:k,link:mb,title:{rendered:mc},content:{rendered:md,protected:b},excerpt:{rendered:me,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[mf,r,mg],_links:{self:[{href:mh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mi}],"version-history":[{count:d,href:mj}],"wp:attachment":[{href:mk}],"wp:term":[{taxonomy:f,embeddable:a,href:ml},{taxonomy:p,embeddable:a,href:mm}],curies:[{name:g,href:h,templated:a}]}},{id:mn,date:bt,date_gmt:bu,guid:{rendered:mo},modified:bt,modified_gmt:bu,slug:mp,status:j,type:k,link:mq,title:{rendered:mr},content:{rendered:ms,protected:b},excerpt:{rendered:mt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bv,r],_links:{self:[{href:mu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mv}],"version-history":[{count:d,href:mw}],"wp:attachment":[{href:mx}],"wp:term":[{taxonomy:f,embeddable:a,href:my},{taxonomy:p,embeddable:a,href:mz}],curies:[{name:g,href:h,templated:a}]}},{id:mA,date:bw,date_gmt:bx,guid:{rendered:mB},modified:bw,modified_gmt:bx,slug:mC,status:j,type:k,link:mD,title:{rendered:mE},content:{rendered:mF,protected:b},excerpt:{rendered:mG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[mH,r],_links:{self:[{href:mI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mJ}],"version-history":[{count:d,href:mK}],"wp:attachment":[{href:mL}],"wp:term":[{taxonomy:f,embeddable:a,href:mM},{taxonomy:p,embeddable:a,href:mN}],curies:[{name:g,href:h,templated:a}]}},{id:mO,date:by,date_gmt:bz,guid:{rendered:mP},modified:by,modified_gmt:bz,slug:mQ,status:j,type:k,link:mR,title:{rendered:mS},content:{rendered:mT,protected:b},excerpt:{rendered:mU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bA,bB,r],_links:{self:[{href:mV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:mW}],"version-history":[{count:d,href:mX}],"wp:attachment":[{href:mY}],"wp:term":[{taxonomy:f,embeddable:a,href:mZ},{taxonomy:p,embeddable:a,href:m_}],curies:[{name:g,href:h,templated:a}]}},{id:m$,date:bC,date_gmt:bD,guid:{rendered:na},modified:bC,modified_gmt:bD,slug:nb,status:j,type:k,link:nc,title:{rendered:nd},content:{rendered:ne,protected:b},excerpt:{rendered:nf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bA,ng,bB,r],_links:{self:[{href:nh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ni}],"version-history":[{count:d,href:nj}],"wp:attachment":[{href:nk}],"wp:term":[{taxonomy:f,embeddable:a,href:nl},{taxonomy:p,embeddable:a,href:nm}],curies:[{name:g,href:h,templated:a}]}},{id:nn,date:bE,date_gmt:bF,guid:{rendered:no},modified:bE,modified_gmt:bF,slug:np,status:j,type:k,link:nq,title:{rendered:nr},content:{rendered:ns,protected:b},excerpt:{rendered:nt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bG,r,M],_links:{self:[{href:nu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nv}],"version-history":[{count:d,href:nw}],"wp:attachment":[{href:nx}],"wp:term":[{taxonomy:f,embeddable:a,href:ny},{taxonomy:p,embeddable:a,href:nz}],curies:[{name:g,href:h,templated:a}]}},{id:nA,date:bH,date_gmt:bI,guid:{rendered:nB},modified:bH,modified_gmt:bI,slug:nC,status:j,type:k,link:nD,title:{rendered:nE},content:{rendered:nF,protected:b},excerpt:{rendered:nG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bo,nH,r],_links:{self:[{href:nI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nJ}],"version-history":[{count:d,href:nK}],"wp:attachment":[{href:nL}],"wp:term":[{taxonomy:f,embeddable:a,href:nM},{taxonomy:p,embeddable:a,href:nN}],curies:[{name:g,href:h,templated:a}]}},{id:nO,date:bJ,date_gmt:bK,guid:{rendered:nP},modified:bJ,modified_gmt:bK,slug:nQ,status:j,type:k,link:nR,title:{rendered:nS},content:{rendered:nT,protected:b},excerpt:{rendered:nU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,N,nV],_links:{self:[{href:nW}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:nX}],"version-history":[{count:d,href:nY}],"wp:attachment":[{href:nZ}],"wp:term":[{taxonomy:f,embeddable:a,href:n_},{taxonomy:p,embeddable:a,href:n$}],curies:[{name:g,href:h,templated:a}]}},{id:oa,date:bL,date_gmt:bM,guid:{rendered:ob},modified:bL,modified_gmt:bM,slug:oc,status:j,type:k,link:od,title:{rendered:oe},content:{rendered:of,protected:b},excerpt:{rendered:og,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,N,oh],_links:{self:[{href:oi}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oj}],"version-history":[{count:d,href:ok}],"wp:attachment":[{href:ol}],"wp:term":[{taxonomy:f,embeddable:a,href:om},{taxonomy:p,embeddable:a,href:on}],curies:[{name:g,href:h,templated:a}]}},{id:oo,date:bN,date_gmt:bO,guid:{rendered:op},modified:bN,modified_gmt:bO,slug:oq,status:j,type:k,link:or,title:{rendered:os},content:{rendered:ot,protected:b},excerpt:{rendered:ou,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[ov,r,ow],_links:{self:[{href:ox}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oy}],"version-history":[{count:d,href:oz}],"wp:attachment":[{href:oA}],"wp:term":[{taxonomy:f,embeddable:a,href:oB},{taxonomy:p,embeddable:a,href:oC}],curies:[{name:g,href:h,templated:a}]}},{id:oD,date:bP,date_gmt:bQ,guid:{rendered:oE},modified:bP,modified_gmt:bQ,slug:oF,status:j,type:k,link:oG,title:{rendered:oH},content:{rendered:oI,protected:b},excerpt:{rendered:oJ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r],_links:{self:[{href:oK}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oL}],"version-history":[{count:d,href:oM}],"wp:attachment":[{href:oN}],"wp:term":[{taxonomy:f,embeddable:a,href:oO},{taxonomy:p,embeddable:a,href:oP}],curies:[{name:g,href:h,templated:a}]}},{id:oQ,date:bR,date_gmt:bS,guid:{rendered:oR},modified:bR,modified_gmt:bS,slug:oS,status:j,type:k,link:oT,title:{rendered:oU},content:{rendered:oV,protected:b},excerpt:{rendered:oW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,bT,oX],_links:{self:[{href:oY}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:oZ}],"version-history":[{count:d,href:o_}],"wp:attachment":[{href:o$}],"wp:term":[{taxonomy:f,embeddable:a,href:pa},{taxonomy:p,embeddable:a,href:pb}],curies:[{name:g,href:h,templated:a}]}},{id:pc,date:bU,date_gmt:bV,guid:{rendered:pd},modified:bU,modified_gmt:bV,slug:pe,status:j,type:k,link:pf,title:{rendered:pg},content:{rendered:ph,protected:b},excerpt:{rendered:pi,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[pj,r],_links:{self:[{href:pk}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pl}],"version-history":[{count:d,href:pm}],"wp:attachment":[{href:pn}],"wp:term":[{taxonomy:f,embeddable:a,href:po},{taxonomy:p,embeddable:a,href:pp}],curies:[{name:g,href:h,templated:a}]}},{id:pq,date:bW,date_gmt:bX,guid:{rendered:pr},modified:bW,modified_gmt:bX,slug:ps,status:j,type:k,link:pt,title:{rendered:pu},content:{rendered:pv,protected:b},excerpt:{rendered:pw,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,bT],_links:{self:[{href:px}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:py}],"version-history":[{count:d,href:pz}],"wp:attachment":[{href:pA}],"wp:term":[{taxonomy:f,embeddable:a,href:pB},{taxonomy:p,embeddable:a,href:pC}],curies:[{name:g,href:h,templated:a}]}},{id:pD,date:bY,date_gmt:bZ,guid:{rendered:pE},modified:bY,modified_gmt:bZ,slug:pF,status:j,type:k,link:pG,title:{rendered:pH},content:{rendered:pI,protected:b},excerpt:{rendered:pJ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[bG,r,b_],_links:{self:[{href:pK}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pL}],"version-history":[{count:d,href:pM}],"wp:attachment":[{href:pN}],"wp:term":[{taxonomy:f,embeddable:a,href:pO},{taxonomy:p,embeddable:a,href:pP}],curies:[{name:g,href:h,templated:a}]}},{id:pQ,date:b$,date_gmt:ca,guid:{rendered:pR},modified:b$,modified_gmt:ca,slug:pS,status:j,type:k,link:pT,title:{rendered:pU},content:{rendered:pV,protected:b},excerpt:{rendered:pW,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[A],_links:{self:[{href:pX}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:pY}],"version-history":[{count:d,href:pZ}],"wp:attachment":[{href:p_}],"wp:term":[{taxonomy:f,embeddable:a,href:p$},{taxonomy:p,embeddable:a,href:qa}],curies:[{name:g,href:h,templated:a}]}},{id:qb,date:cb,date_gmt:cc,guid:{rendered:qc},modified:cb,modified_gmt:cc,slug:qd,status:j,type:k,link:qe,title:{rendered:qf},content:{rendered:qg,protected:b},excerpt:{rendered:qh,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[A,r],_links:{self:[{href:qi}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qj}],"version-history":[{count:d,href:qk}],"wp:attachment":[{href:ql}],"wp:term":[{taxonomy:f,embeddable:a,href:qm},{taxonomy:p,embeddable:a,href:qn}],curies:[{name:g,href:h,templated:a}]}},{id:qo,date:cd,date_gmt:ce,guid:{rendered:qp},modified:cd,modified_gmt:ce,slug:qq,status:j,type:k,link:qr,title:{rendered:qs},content:{rendered:qt,protected:b},excerpt:{rendered:qu,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:qv}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qw}],"version-history":[{count:d,href:qx}],"wp:attachment":[{href:qy}],"wp:term":[{taxonomy:f,embeddable:a,href:qz},{taxonomy:p,embeddable:a,href:qA}],curies:[{name:g,href:h,templated:a}]}},{id:qB,date:cf,date_gmt:cg,guid:{rendered:qC},modified:cf,modified_gmt:cg,slug:qD,status:j,type:k,link:qE,title:{rendered:qF},content:{rendered:qG,protected:b},excerpt:{rendered:qH,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,r],_links:{self:[{href:qI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qJ}],"version-history":[{count:d,href:qK}],"wp:attachment":[{href:qL}],"wp:term":[{taxonomy:f,embeddable:a,href:qM},{taxonomy:p,embeddable:a,href:qN}],curies:[{name:g,href:h,templated:a}]}},{id:qO,date:ch,date_gmt:ci,guid:{rendered:qP},modified:ch,modified_gmt:ci,slug:qQ,status:j,type:k,link:qR,title:{rendered:qS},content:{rendered:qT,protected:b},excerpt:{rendered:qU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:qV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:qW}],"version-history":[{count:d,href:qX}],"wp:attachment":[{href:qY}],"wp:term":[{taxonomy:f,embeddable:a,href:qZ},{taxonomy:p,embeddable:a,href:q_}],curies:[{name:g,href:h,templated:a}]}},{id:q$,date:cj,date_gmt:ck,guid:{rendered:ra},modified:cj,modified_gmt:ck,slug:rb,status:j,type:k,link:rc,title:{rendered:rd},content:{rendered:re,protected:b},excerpt:{rendered:rf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[rg],_links:{self:[{href:rh}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ri}],"version-history":[{count:d,href:rj}],"wp:attachment":[{href:rk}],"wp:term":[{taxonomy:f,embeddable:a,href:rl},{taxonomy:p,embeddable:a,href:rm}],curies:[{name:g,href:h,templated:a}]}},{id:rn,date:cl,date_gmt:cm,guid:{rendered:ro},modified:cl,modified_gmt:cm,slug:rp,status:j,type:k,link:rq,title:{rendered:rr},content:{rendered:rs,protected:b},excerpt:{rendered:rt,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:ru}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rv}],"version-history":[{count:d,href:rw}],"wp:attachment":[{href:rx}],"wp:term":[{taxonomy:f,embeddable:a,href:ry},{taxonomy:p,embeddable:a,href:rz}],curies:[{name:g,href:h,templated:a}]}},{id:rA,date:cn,date_gmt:co,guid:{rendered:rB},modified:cn,modified_gmt:co,slug:rC,status:j,type:k,link:rD,title:{rendered:rE},content:{rendered:rF,protected:b},excerpt:{rendered:rG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[E],tags:[O],_links:{self:[{href:rH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rI}],"version-history":[{count:d,href:rJ}],"wp:attachment":[{href:rK}],"wp:term":[{taxonomy:f,embeddable:a,href:rL},{taxonomy:p,embeddable:a,href:rM}],curies:[{name:g,href:h,templated:a}]}},{id:rN,date:cp,date_gmt:cq,guid:{rendered:rO},modified:cp,modified_gmt:cq,slug:rP,status:j,type:k,link:rQ,title:{rendered:rR},content:{rendered:rS,protected:b},excerpt:{rendered:rT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,A,r],_links:{self:[{href:rU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:rV}],"version-history":[{count:d,href:rW}],"wp:attachment":[{href:rX}],"wp:term":[{taxonomy:f,embeddable:a,href:rY},{taxonomy:p,embeddable:a,href:rZ}],curies:[{name:g,href:h,templated:a}]}},{id:r_,date:cr,date_gmt:cs,guid:{rendered:r$},modified:cr,modified_gmt:cs,slug:sa,status:j,type:k,link:sb,title:{rendered:sc},content:{rendered:sd,protected:b},excerpt:{rendered:se,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[w,A,r],_links:{self:[{href:sf}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sg}],"version-history":[{count:d,href:sh}],"wp:attachment":[{href:si}],"wp:term":[{taxonomy:f,embeddable:a,href:sj},{taxonomy:p,embeddable:a,href:sk}],curies:[{name:g,href:h,templated:a}]}},{id:sl,date:ct,date_gmt:cu,guid:{rendered:sm},modified:ct,modified_gmt:cu,slug:sn,status:j,type:k,link:so,title:{rendered:sp},content:{rendered:sq,protected:b},excerpt:{rendered:sr,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[ss,r],_links:{self:[{href:st}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:su}],"version-history":[{count:d,href:sv}],"wp:attachment":[{href:sw}],"wp:term":[{taxonomy:f,embeddable:a,href:sx},{taxonomy:p,embeddable:a,href:sy}],curies:[{name:g,href:h,templated:a}]}},{id:sz,date:cv,date_gmt:cw,guid:{rendered:sA},modified:cv,modified_gmt:cw,slug:sB,status:j,type:k,link:sC,title:{rendered:sD},content:{rendered:sE,protected:b},excerpt:{rendered:sF,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[sG],_links:{self:[{href:sH}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sI}],"version-history":[{count:d,href:sJ}],"wp:attachment":[{href:sK}],"wp:term":[{taxonomy:f,embeddable:a,href:sL},{taxonomy:p,embeddable:a,href:sM}],curies:[{name:g,href:h,templated:a}]}},{id:sN,date:cx,date_gmt:cy,guid:{rendered:sO},modified:cx,modified_gmt:cy,slug:sP,status:j,type:k,link:sQ,title:{rendered:sR},content:{rendered:sS,protected:b},excerpt:{rendered:sT,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[b_],_links:{self:[{href:sU}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:sV}],"version-history":[{count:d,href:sW}],"wp:attachment":[{href:sX}],"wp:term":[{taxonomy:f,embeddable:a,href:sY},{taxonomy:p,embeddable:a,href:sZ}],curies:[{name:g,href:h,templated:a}]}},{id:s_,date:cz,date_gmt:cA,guid:{rendered:s$},modified:cz,modified_gmt:cA,slug:ta,status:j,type:k,link:tb,title:{rendered:tc},content:{rendered:td,protected:b},excerpt:{rendered:te,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,tf],_links:{self:[{href:tg}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:th}],"version-history":[{count:d,href:ti}],"wp:attachment":[{href:tj}],"wp:term":[{taxonomy:f,embeddable:a,href:tk},{taxonomy:p,embeddable:a,href:tl}],curies:[{name:g,href:h,templated:a}]}},{id:tm,date:cB,date_gmt:cC,guid:{rendered:tn},modified:cB,modified_gmt:cC,slug:to,status:j,type:k,link:tp,title:{rendered:tq},content:{rendered:tr,protected:b},excerpt:{rendered:ts,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[q],tags:[r,tt],_links:{self:[{href:tu}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tv}],"version-history":[{count:d,href:tw}],"wp:attachment":[{href:tx}],"wp:term":[{taxonomy:f,embeddable:a,href:ty},{taxonomy:p,embeddable:a,href:tz}],curies:[{name:g,href:h,templated:a}]}},{id:tA,date:cD,date_gmt:cE,guid:{rendered:tB},modified:cD,modified_gmt:cE,slug:tC,status:j,type:k,link:tD,title:{rendered:tE},content:{rendered:tF,protected:b},excerpt:{rendered:tG,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[tH,H,X],_links:{self:[{href:tI}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tJ}],"version-history":[{count:d,href:tK}],"wp:attachment":[{href:tL}],"wp:term":[{taxonomy:f,embeddable:a,href:tM},{taxonomy:p,embeddable:a,href:tN}],curies:[{name:g,href:h,templated:a}]}},{id:tO,date:cF,date_gmt:cG,guid:{rendered:tP},modified:cF,modified_gmt:cG,slug:tQ,status:j,type:k,link:tR,title:{rendered:tS},content:{rendered:tT,protected:b},excerpt:{rendered:tU,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:tV}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:tW}],"version-history":[{count:d,href:tX}],"wp:attachment":[{href:tY}],"wp:term":[{taxonomy:f,embeddable:a,href:tZ},{taxonomy:p,embeddable:a,href:t_}],curies:[{name:g,href:h,templated:a}]}},{id:t$,date:cH,date_gmt:cI,guid:{rendered:ua},modified:cH,modified_gmt:cI,slug:ub,status:j,type:k,link:uc,title:{rendered:ud},content:{rendered:ue,protected:b},excerpt:{rendered:uf,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:ug}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uh}],"version-history":[{count:d,href:ui}],"wp:attachment":[{href:uj}],"wp:term":[{taxonomy:f,embeddable:a,href:uk},{taxonomy:p,embeddable:a,href:ul}],curies:[{name:g,href:h,templated:a}]}},{id:um,date:cJ,date_gmt:cK,guid:{rendered:un},modified:cJ,modified_gmt:cK,slug:uo,status:j,type:k,link:up,title:{rendered:uq},content:{rendered:ur,protected:b},excerpt:{rendered:us,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:ut}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uu}],"version-history":[{count:d,href:uv}],"wp:attachment":[{href:uw}],"wp:term":[{taxonomy:f,embeddable:a,href:ux},{taxonomy:p,embeddable:a,href:uy}],curies:[{name:g,href:h,templated:a}]}},{id:N,date:cL,date_gmt:cM,guid:{rendered:uz},modified:cL,modified_gmt:cM,slug:uA,status:j,type:k,link:uB,title:{rendered:uC},content:{rendered:uD,protected:b},excerpt:{rendered:uE,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:uF}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uG}],"version-history":[{count:d,href:uH}],"wp:attachment":[{href:uI}],"wp:term":[{taxonomy:f,embeddable:a,href:uJ},{taxonomy:p,embeddable:a,href:uK}],curies:[{name:g,href:h,templated:a}]}},{id:bv,date:cN,date_gmt:cO,guid:{rendered:uL},modified:cN,modified_gmt:cO,slug:uM,status:j,type:k,link:uN,title:{rendered:uO},content:{rendered:uP,protected:b},excerpt:{rendered:uQ,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[s],tags:[B,u],_links:{self:[{href:uR}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:uS}],"version-history":[{count:d,href:uT}],"wp:attachment":[{href:uU}],"wp:term":[{taxonomy:f,embeddable:a,href:uV},{taxonomy:p,embeddable:a,href:uW}],curies:[{name:g,href:h,templated:a}]}},{id:s,date:cP,date_gmt:cQ,guid:{rendered:uX},modified:cP,modified_gmt:cQ,slug:uY,status:j,type:k,link:uZ,title:{rendered:u_},content:{rendered:u$,protected:b},excerpt:{rendered:va,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[z],tags:[vb,H,vc,M],_links:{self:[{href:vd}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:ve}],"version-history":[{count:d,href:vf}],"wp:attachment":[{href:vg}],"wp:term":[{taxonomy:f,embeddable:a,href:vh},{taxonomy:p,embeddable:a,href:vi}],curies:[{name:g,href:h,templated:a}]}},{id:i,date:cR,date_gmt:cS,guid:{rendered:vj},modified:cR,modified_gmt:cS,slug:vk,status:j,type:k,link:vl,title:{rendered:vm},content:{rendered:vn,protected:b},excerpt:{rendered:vo,protected:b},author:i,featured_media:d,comment_status:c,ping_status:c,sticky:b,template:e,format:l,meta:[],categories:[F],tags:[],_links:{self:[{href:vp}],collection:[{href:m}],about:[{href:n}],author:[{embeddable:a,href:o}],replies:[{embeddable:a,href:vq}],"version-history":[{count:d,href:vr}],"wp:attachment":[{href:vs}],"wp:term":[{taxonomy:f,embeddable:a,href:vt},{taxonomy:p,embeddable:a,href:vu}],curies:[{name:g,href:h,templated:a}]}}]}}},mutations:void 0}}(true,false,"open",0,"","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}",1,"publish","post","standard","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1","post_tag",6,51,7,4,53,56,27,8,3,5,42,37,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",2,9,21,34,28,54,24,29,64,57,15,"2021-09-21T16:45:02","2021-09-21T07:45:02",32,35,"2021-07-26T01:19:20","2021-07-25T16:19:20","2021-07-04T23:00:02","2021-07-04T14:00:02",75,"2021-06-28T00:27:55","2021-06-27T15:27:55",47,"2021-06-28T00:25:39","2021-06-27T15:25:39","2021-06-24T23:38:28","2021-06-24T14:38:28","2021-06-23T01:24:13","2021-06-22T16:24:13","2021-06-22T09:14:17","2021-06-22T00:14:17","2021-06-19T21:29:57","2021-06-19T12:29:57","2021-06-08T22:19:14","2021-06-08T13:19:14","2021-06-06T21:55:56","2021-06-06T12:55:56","2021-05-27T22:16:23","2021-05-27T13:16:23","2021-05-05T21:00:34","2021-05-05T12:00:34",1206,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1206","2021-05-05T17:23:52","2021-05-05T08:23:52",1200,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1200","2021-05-04T15:49:36","2021-05-04T06:49:36","2021-04-25T23:37:15","2021-04-25T14:37:15","2021-04-17T18:37:18","2021-04-17T09:37:18","2021-01-01T22:30:17","2021-01-01T13:30:17","2020-12-14T22:36:06","2020-12-14T13:36:06","2020-12-14T22:14:53","2020-12-14T13:14:53",20,"2020-12-13T18:21:51","2020-12-13T09:21:51","2020-12-10T00:35:26","2020-12-09T15:35:26","2020-12-09T00:17:47","2020-12-08T15:17:47","2020-11-21T23:08:27","2020-11-21T14:08:27","2020-11-20T01:21:19","2020-11-19T16:21:19","2020-11-19T12:27:14","2020-11-19T03:27:14","2020-11-15T17:43:17","2020-11-15T08:43:17","2020-11-14T00:27:58","2020-11-13T15:27:58","2020-11-12T08:21:01","2020-11-11T23:21:01","2020-11-08T17:45:54","2020-11-08T08:45:54","2020-11-07T18:29:46","2020-11-07T09:29:46","2020-10-27T23:27:34","2020-10-27T14:27:34","2020-10-25T23:17:09","2020-10-25T14:17:09","2020-10-06T01:38:25","2020-10-05T16:38:25",38,74,"2020-10-02T02:07:08","2020-10-01T17:07:08",12,"2020-09-28T01:11:35","2020-09-27T16:11:35","2020-09-24T23:41:44","2020-09-24T14:41:44","2020-09-24T16:55:47","2020-09-24T07:55:47",13,"2020-09-22T23:06:28","2020-09-22T14:06:28","2020-09-22T22:10:38","2020-09-22T13:10:38",10,50,"2020-09-05T00:35:59","2020-09-04T15:35:59","2020-08-31T00:52:27","2020-08-30T15:52:27",11,"2020-08-30T00:50:45","2020-08-29T15:50:45","2020-08-28T00:06:24","2020-08-27T15:06:24","2020-08-27T19:59:15","2020-08-27T10:59:15","2020-08-26T22:04:42","2020-08-26T13:04:42","2020-08-26T20:54:17","2020-08-26T11:54:17","2020-08-25T22:31:21","2020-08-25T13:31:21",58,"2020-08-24T08:08:18","2020-08-23T23:08:18","2020-08-22T11:52:28","2020-08-22T02:52:28","2020-08-21T13:57:11","2020-08-21T04:57:11",52,"2020-06-28T19:04:20","2020-06-28T10:04:20","2020-06-27T01:17:24","2020-06-26T16:17:24","2020-06-25T09:04:43","2020-06-25T00:04:43","2020-06-24T00:32:45","2020-06-23T15:32:45","2020-06-21T00:23:35","2020-06-20T15:23:35","2020-06-21T00:23:21","2020-06-20T15:23:21","2020-06-20T09:44:54","2020-06-20T00:44:54","2020-06-18T08:47:05","2020-06-17T23:47:05","2020-06-16T23:34:32","2020-06-16T14:34:32","2020-06-15T22:01:06","2020-06-15T13:01:06","2020-06-15T11:57:23","2020-06-15T02:57:23","2020-06-13T19:05:39","2020-06-13T10:05:39","2020-06-10T08:15:46","2020-06-09T23:15:46","2020-06-08T21:12:40","2020-06-08T12:12:40","2020-05-31T11:58:50","2020-05-31T02:58:50","2020-05-24T18:35:32","2020-05-24T09:35:32","2020-05-21T23:28:28","2020-05-21T14:28:28","2020-05-21T23:28:12","2020-05-21T14:28:12","2020-05-21T23:27:33","2020-05-21T14:27:33","2020-05-21T23:27:15","2020-05-21T14:27:15","2020-05-21T23:26:56","2020-05-21T14:26:56","2020-05-17T02:10:54","2020-05-16T17:10:54","2020-05-15T21:15:04","2020-05-15T12:15:04",77,40,1493,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F?p=1493","gulp%e3%81%8b%e3%82%89github%e3%81%abpush%e3%81%97%e3%81%a6jenkins%e3%82%b8%e3%83%a7%e3%83%96%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F09\u002F21\u002Fgulp%e3%81%8b%e3%82%89github%e3%81%abpush%e3%81%97%e3%81%a6jenkins%e3%82%b8%e3%83%a7%e3%83%96%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F","GulpからgithubにpushしてJenkinsジョブを実行する","\n\u003Cp\u003EGulpを使うことでタスクを順次実行したり並列で実行したりすることができます。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Eこのサイトは、Nuxt.jsで生成した静的ファイルをロリポップにデプロイしています。\u003Cbr\u003ENuxt.jsではWordPressのAPIを利用して記事データを取得しています。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Eつまり、Nuxt.jsで静的ファイルを出力した後に、FTPなどでロリポップのファイルサーバーなどにアップロードする必要があるのです。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EこれをGulpとJenkinsを使って一発で終わらせることができます。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\n\u003Ch2\u003E構想\u003C\u002Fh2\u003E\n\n\n\n\u003Cp\u003E大まかな順序は以下のようになります。\u003C\u002Fp\u003E\n\n\n\n\u003Col\u003E\u003Cli\u003E記事をワードプレスで投稿する\u003C\u002Fli\u003E\u003Cli\u003ENuxt.jsでgenerateして静的ファイルを作成する\u003C\u002Fli\u003E\u003Cli\u003Egithubにpushする\u003C\u002Fli\u003E\u003Cli\u003Ejenkinsからロリポップにssh接続してgit pullする\u003C\u002Fli\u003E\u003C\u002Fol\u003E\n\n\n\n\u003Cp\u003Eこのうち、2~4をnpx gulpのコマンド一発で終わらせます。\u003C\u002Fp\u003E\n\n\n\n\u003Ch3\u003E記事をワードプレスで投稿する \u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003E記事データはワードプレスで投稿します。通常は別のドメインなりサブドメインなりに準備することになると思います。\u003C\u002Fp\u003E\n\n\n\n\u003Ch3\u003E \u003Cspan style=\"font-size: revert; background-color: var(--global--color-background); color: var(--global--color-primary); font-family: var(--global--font-secondary);\"\u003ENuxt.jsでgenerateして静的ファイルを作成する\u003C\u002Fspan\u003E \u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003Eここからgulpファイルを作成する作業になります。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E全体のファイルは以下にコミットしてあります。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Froripop\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Froripop\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Eexecを利用するとコマンドをそのまま利用できます。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst exec = require('child_process').exec;\r\ngulp.task('generate', done =\u003E {\r\n    exec(\"npm run generate\", (err,stdout,stderr) =\u003E {\r\n        done(err);\r\n    })\r\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Ch3\u003E\u003Cspan style=\"font-size: revert; background-color: var(--global--color-background); color: var(--global--color-primary); font-family: var(--global--font-secondary);\"\u003Egithubにpushする\u003C\u002Fspan\u003E \u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003Eこちらも同様にexecを使えば直感で利用できます。\u003Cbr\u003Eただし、gulpfile.jsの場所とpushするフォルダは異なっていますので、changedirectoryします。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egulp.task(\"prepare\", done =\u003E {\r\n    process.chdir(\".\u002Fresult\");\r\n    done();\r\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003Egitはexecでコマンドを直接記載すればOKです。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egulp.task('add', done =\u003E {\r\n    exec(\"git add .\",\r\n        (err,stdout,stderr) =\u003E {\r\n            done(err);\r\n        })\r\n})\r\n\r\ngulp.task('commit', done =\u003E {\r\n    exec('git commit -m \"from gulp\"',\r\n        (err,stdout,stderr) =\u003E {\r\n            done(err);\r\n        })\r\n})\r\n\r\ngulp.task('push', done =\u003E {\r\n    exec('git push origin main',\r\n        (err,stdout,stderr) =\u003E {\r\n            done(err);\r\n        })\r\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003Eadd commit pushしています。\u003C\u002Fp\u003E\n\n\n\n\u003Ch3\u003E\u003Cspan style=\"font-size: revert; background-color: var(--global--color-background); color: var(--global--color-primary); font-family: var(--global--font-secondary);\"\u003Ejenkinsからロリポップにssh接続してgit pullする\u003C\u002Fspan\u003E\u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003EJenkinsからロリポップにSSH接続する方法は以下の記事に記載しております。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.volkruss.com\u002Fpost\u002F1436\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fwww.volkruss.com\u002Fpost\u002F1436\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003EJenkins用のdocker-compose.yamlは以下のようになっています。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eversion: '3'\r\nservices: \r\n    jenkins:\r\n        container_name: jenkins_z\r\n        image: jenkins\u002Fjenkins\r\n        ports:\r\n            - \"8888:8080\"\r\n        volumes: \r\n            - \".\u002Fdata:\u002Fvar\u002Fjenkins_home\"\r\n        tty: true\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003E適当にdocker-compose up -dをすれば、8888ポートでJenkinsが立ち上がります。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Egulpfile.jsでは以下のようにしてJenkinsジョブを起動します。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egulp.task('jenkins', done =\u003E {\r\n    exec(\"curl -X POST -u kenshi:117a2ae57192b0b7b518738f5f59714864 http:\u002F\u002Flocalhost:8888\u002Fjob\u002Flolpopdep\u002Fbuild\",\r\n        (err,stdout,stderr) =\u003E {\r\n            done(err);\r\n        })\r\n})\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003Euser名とトークンを指定することで、Docker内のJenkinsジョブを起動できます。\u003C\u002Fp\u003E\n\n\n\n\u003Ch2\u003E準備\u003C\u002Fh2\u003E\n\n\n\n\u003Ch3\u003EGitの設定\u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003Enpm run generateした時に、distフォルダの中身は全て破壊されます。そのため、静的ファイル出力フォルダにgit用のフォルダを挟むことで、.gitフォルダが消えるのを防ぎます。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Enuxt.config.jsを以下のようにしておきます。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E  generate:{\r\n    dir: \"result\u002Fdist\"\r\n  }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cfigure class=\"wp-block-image size-full\"\u003E\u003Cimg loading=\"lazy\" width=\"352\" height=\"728\" src=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-content\u002Fuploads\u002F2021\u002F09\u002Fimage.png\" alt=\"\" class=\"wp-image-1500\" srcset=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-content\u002Fuploads\u002F2021\u002F09\u002Fimage.png 352w, https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-content\u002Fuploads\u002F2021\u002F09\u002Fimage-145x300.png 145w\" sizes=\"(max-width: 352px) 100vw, 352px\" \u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\n\u003Cp\u003E最初のpushからいろいろミスったので既存の自分のリポジトリに対する設定をしました。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Eresultフォルダで以下を実行jしてgitの設定を行います。\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egit init\ngit remote add origin https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Froripop\ngit pull origin main\ngit checkout main\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Ch3\u003Eロリポップ側\u003C\u002Fh3\u003E\n\n\n\n\u003Cp\u003Egit pullするディレクトリは、予めssh接続などしてgit cloneしておきます。\u003C\u002Fp\u003E\n\n\n\n\u003Cp\u003Essh接続情報はパスワードはロリポップの管理画面から確認します。\u003Cbr\u003Eコマンドプロンプトなどから以下で接続できます\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Essh ssh情報のユーザー名@ssh.lolipop.jp -p 2222\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003Eその後、なにか聞かれたらyesと答えて、パスワードをコピペします。するとロリポップにssh接続できますので、各自のフォルダでgit cloneしておきます。\u003C\u002Fp\u003E\n\n\n\n\u003Ch2\u003E実行\u003C\u002Fh2\u003E\n\n\n\n\u003Cp\u003Egulpの実行は以下でできます。（私はグローバルインストールしていないのでnpxで実行しています）\u003C\u002Fp\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Enpx gulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Enpx gulp\r\n&#91;12:44:16] Using gulpfile ~\\Documents\\nuxtapps\\work\\nuxtpress\\gulpfile.js\r\n&#91;12:44:16] Starting 'default'...\r\n&#91;12:44:16] Starting 'generate'...\r\n&#91;12:45:41] Finished 'generate' after 1.42 min\r\n&#91;12:45:41] Starting 'prepare'...\r\n&#91;12:45:41] Finished 'prepare' after 3.78 ms\r\n&#91;12:45:41] Starting 'add'...\r\n&#91;12:45:43] Finished 'add' after 1.97 s\r\n&#91;12:45:43] Starting 'commit'...\r\n&#91;12:45:46] Finished 'commit' after 2.84 s\r\n&#91;12:45:46] Starting 'push'...\r\n&#91;12:45:51] Finished 'push' after 4.58 s\r\n&#91;12:45:51] Starting 'jenkins'...\r\n&#91;12:45:51] Finished 'jenkins' after 206 ms\r\n&#91;12:45:51] Finished 'default' after 1.57 min\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003EGulpを使うことでタスクを順次実行したり並列で実行したりすることができます。 このサイトは、Nuxt.jsで生成した静的ファイルをロリポップにデプロイしています。Nuxt.jsではWordPressのAPIを利用して記&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F09\u002F21\u002Fgulp%e3%81%8b%e3%82%89github%e3%81%abpush%e3%81%97%e3%81%a6jenkins%e3%82%b8%e3%83%a7%e3%83%96%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EGulpからgithubにpushしてJenkinsジョブを実行する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",78,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1493\u002Frevisions",1502,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1493\u002Frevisions\u002F1502","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1493",1436,"https:\u002F\u002Fvolkruss.com\u002F?p=1436","jenkins%e3%81%a8github%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%83%ad%e3%83%aa%e3%83%9d%e3%83%83%e3%83%97%e3%81%ab%e3%83%87%e3%83%97%e3%83%ad%e3%82%a4%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F07\u002F26\u002Fjenkins%e3%81%a8github%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%83%ad%e3%83%aa%e3%83%9d%e3%83%83%e3%83%97%e3%81%ab%e3%83%87%e3%83%97%e3%83%ad%e3%82%a4%e3%81%99%e3%82%8b\u002F","JenkinsとGitHubを利用してロリポップにデプロイする","\n\u003Cp\u003EJenkinsとSSHとgitを利用してロリポップにデプロイします。レンタルサーバーなのであまりJenkinsでデプロイって感じはしませんが、とりあえずやってみました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E環境構築とかは端折ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E環境、Window10 \u003C\u002Fp\u003E\n\n\n\u003Cp\u003EJenkinsはDocker上に環境構築しました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E認証情報の設定\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EホームのJenkinsの管理からManage Credentials（認証情報）を選択\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EStores scoped to JenkinsのDomains(global)を選択\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E左メニューの認証情報の追加を選択\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eスコープをグローバル\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eユーザー名をロリポップSSH情報のアカウント\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eパスワードをssh情報のパスワードに設定\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EIDはわかりやすい任意の文字列に設定\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E保存します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ESSHリモートホストの設定\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EJenkinsの管理からシステムの設定を選択\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESSHリモートホストの箇所を設定していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eホスト名をSSH情報のサーバー\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eポートを2222\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECredentialsを先ほど作成したIDのもので追加\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECheck connectionで接続テストに成功していればOK\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eロリポップサーバーにgitの設定をする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Egithubからソースを取得して更新できるように、ロリポップのサーバーにgithubのリポジトリからクローンしてきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eロリポップはgitが元から入っている？と思われるので、普通にcloneするだけ良いです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Egit clone xxxx.git\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれで、githubが更新されたらgit pullすればOKという状況になります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eタスクの実行\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EJenkinsでやることは単純です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EロリポップのサーバーにSSH接続する、クローンしたディレクトリに移動してgit pullする。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eタスクのビルドタブから、ビルド手順の追加でリモートホストでシェルを実行を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESSHサイトに設定したSSHリモートホストを選択、シェルスクリプトに以下のようなコマンドを記載\u003Cbr \u002F\u003E※git cloneしたフォルダに移動してgit pullするだけです。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ecd web\u002Ftest\u002Fhogehoge\ngit pull\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EロリポップにはいつもFTPでやっていましたが、SSH接続してみるとgitも使えるのでJenkinsと連携させるとデプロイが楽になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実行するとJenkinsのコンソールはこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;SSH] script:\ncd web\u002Ftest\u002Fhogehoge\ngit pull\n&#91;SSH] executing...\nFrom https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fhogehoge\n   a1ecc82..2051908  main       -\u003E origin\u002Fmain\nUpdating a1ecc82..2051908\nFast-forward\n readme.md |    4 ++++\n 1 files changed, 4 insertions(+), 0 deletions(-)\n&#91;SSH] completed\n&#91;SSH] exit-status: 0\nFinished: SUCCESS\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EGitHubのwebhookを利用するともっと短縮できるそうですが、JenkinsをDockerで動かしているので、うまくいかないような気がするため一旦ここで終了。\u003C\u002Fp\u003E\n","\u003Cp\u003EJenkinsとSSHとgitを利用してロリポップにデプロイします。レンタルサーバーなのであまりJenkinsでデプロイって感じはしませんが、とりあえずやってみました。 環境構築とかは端折ります。 環境、Window10&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F07\u002F26\u002Fjenkins%e3%81%a8github%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%a6%e3%83%ad%e3%83%aa%e3%83%9d%e3%83%83%e3%83%97%e3%81%ab%e3%83%87%e3%83%97%e3%83%ad%e3%82%a4%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EJenkinsとGitHubを利用してロリポップにデプロイする\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",30,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1436","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1436","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1436\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1436","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1436","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1436",1401,"https:\u002F\u002Fvolkruss.com\u002F?p=1401","java%e3%81%ab%e3%82%88%e3%82%8b%e9%96%a2%e6%95%b0%e5%9e%8b%e3%83%97%e3%83%ad%e3%82%b0%e3%83%a9%e3%83%9f%e3%83%b3%e3%82%b0","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F07\u002F04\u002Fjava%e3%81%ab%e3%82%88%e3%82%8b%e9%96%a2%e6%95%b0%e5%9e%8b%e3%83%97%e3%83%ad%e3%82%b0%e3%83%a9%e3%83%9f%e3%83%b3%e3%82%b0\u002F","Javaによる関数型プログラミング","\n\u003Cp\u003Eって本が気に入ってます。2014年の本ですけどとても使えると思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Famzn.to\u002F3wcN8cZ\" data-type=\"URL\" data-id=\"https:\u002F\u002Famzn.to\u002F3wcN8cZ\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EJavaによる関数型プログラミング ―Java 8ラムダ式とStream\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの前BookOffで売ってたので買いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EJavaのstreamでスッキリとしたコードが書けます。とりあえず普通のコードをどんどん綺麗なコードに変えていくような記載になっているので、わかりやすいどす。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは簡単な挨拶でリストのソートをやってみます。\u003Cbr \u002F\u003E文字列の長さでソートしてみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n\tpublic static void main(String&#91;] args) {\n\t\tList&lt;String&gt; people = Arrays.asList(\n\t\t\t\t\"suzukazeaoba\",\"yagamikoh\",\"nene\",\"takimotohihumi\");\n\t\tList&lt;String&gt; sortList = people.stream()\n\t\t\t\t.sorted((str1,str2) -&gt; str1.length() - str2.length())\n\t\t\t\t.collect(Collectors.toList());\n\t\tsortList.forEach(System.out::println);\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Enene\nyagamikoh\nsuzukazeaoba\ntakimotohihumi\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eループを２個作る必要もないシンプルなところに惚れてしまいますね。\u003Cbr \u002F\u003Eこんな感じでstreamを使うと&#8221;何をするのか&#8221;が明確になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの場合だと、このコードはソートをしてるんだなってのが一目でわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもちろん、こんな何にもならないコードをずらずらと紹介しているだけでなく、例えばデザインパターンを関数型で書いてみるとか、ロック処理、例外、遅延など様々なtipsがあり、最後は関数型といえばというような内容で、再帰とか関数合成など書いてあります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EStrategyパターンを関数型で作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EStrategyパターンといえば共通のインターフェースを用意して処理を切り替えることができるパターンです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eラムダ式を使うことで、関数を渡して処理を切り替えられるようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこんなProductクラスがあります。和菓子洋菓子と商品名、価格を持っています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epublic class Product {\n\t\u002F\u002F publicにしてます\n\tpublic enum Category {WA,YOU};\n\tpublic Category category;\n\tpublic String name;\n\tpublic int price;\n\tpublic Product(Category category,String name,int price) {\n\t\tthis.category = category;\n\t\tthis.name = name;\n\t\tthis.price = price;\n\t}\n\tpublic int getPrice() {\n\t\treturn this.price;\n\t}\n\tpublic String getName() {\n\t\treturn this.name;\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E値段の全カテゴリー合計、カテゴリーごとの合計を関数を入れ替えて取得できるようなメソッドを用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPredicateにはbooleanを戻り値とするような関数を指定してあげます。\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fdocs.oracle.com\u002Fjavase\u002Fjp\u002F8\u002Fdocs\u002Fapi\u002Fjava\u002Futil\u002Ffunction\u002FPredicate.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fdocs.oracle.com\u002Fjavase\u002Fjp\u002F8\u002Fdocs\u002Fapi\u002Fjava\u002Futil\u002Ffunction\u002FPredicate.html\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\tpublic static int getTotalAmt(final List&lt;Product\u003E products,final Predicate&lt;Product\u003E selectFunc) {\n\t\treturn products.stream()\n\t\t\t\t.filter(selectFunc)\n\t\t\t\t.mapToInt(Product::getPrice)\n\t\t\t\t.sum();\n\t\t\u002F\u002F 和の場合、洋の場合、ケースが増えると肥大化する\n\t\t\u002F\u002Freturn products.stream().mapToInt(Product::getPrice).sum();\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E実際に関数の指定で処理を切り替えます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\tpublic static void main(String&#91;] args) {\n\t\tList&lt;Product\u003E products = Arrays.asList(\n\t\t\t\tnew Product(Category.WA,\"どら焼き\", 230),\n\t\t\t\tnew Product(Category.WA, \"大福\", 150),\n\t\t\t\tnew Product(Category.WA, \"最中\", 100),\n\t\t\t\tnew Product(Category.YOU, \"ショートケーキ\", 430),\n\t\t\t\tnew Product(Category.YOU, \"マドレーヌ\", 130),\n\t\t\t\tnew Product(Category.YOU, \"クッキー\", 100),\n\t\t\t\tnew Product(Category.YOU, \"シュークリーム\", 180)\n\t\t\t\t);\n\t\tint waSum = getTotalAmt(products,product -\u003E product.category == Category.WA);\n\t\tSystem.out.println(waSum);\n\t\tint youSum = getTotalAmt(products,product -\u003E product.category == Category.YOU);\n\t\tSystem.out.println(youSum);\n\t\tint sum = getTotalAmt(products,product -\u003E true);\n\t\tSystem.out.println(sum);\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E結果\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E480\n840\n1320\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E処理の委譲\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eある関心事を他のクラスに委譲することなどはよくあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E合計された値が不正ではないか調べるようなバリデーションを実行する処理を関数に委譲します。ここでは簡単なバリデーションのみ行います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは、合計の値に不正がなければ登録、不正があれば登録失敗のような関数を作りました。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\tpublic static void register(int sum,Function&lt;Integer, Boolean\u003E validationLogic) {\n\t\t\u002F\u002F なんか処理\n\t\t\u002F\u002Fバリデーション処理を委譲する\n\t\tif(!validationLogic.apply(sum)) {\n\t\t\t\u002F\u002F なんか処理\n\t\t\tSystem.out.println(\"エラーがありました\");\n\t\t\treturn;\n\t\t}\n\t\t\u002F\u002F なんか処理\n\t\tSystem.out.println(\"登録しました。\");\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EここでのFunctionはIntegerを受け取りBooleanを返します。\u003Cbr \u002F\u003Eこの関数を利用します。実際のバリデーション処理は関数に委譲します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n\tpublic static void main(String&#91;] args) {\n\t\tList&lt;Product\u003E products = Arrays.asList(\n\t\t\t\tnew Product(Category.WA,\"どら焼き\", 230),\n\t\t\t\tnew Product(Category.WA, \"大福\", 150),\n\t\t\t\tnew Product(Category.WA, \"最中\", 100),\n\t\t\t\tnew Product(Category.YOU, \"ショートケーキ\", 430),\n\t\t\t\tnew Product(Category.YOU, \"マドレーヌ\", 130),\n\t\t\t\tnew Product(Category.YOU, \"クッキー\", 100),\n\t\t\t\tnew Product(Category.YOU, \"シュークリーム\", 180)\n\t\t\t\t);\n\t\tint sum = getTotalAmt(products,product -\u003E true);\n\t\tSystem.out.println(sum);\n\t\t\u002F\u002F登録成功\n\t\tregister(sum, price -\u003E price \u003E 0);\n\t\t\u002F\u002F登録失敗\n\t\tregister(sum, price -\u003E price &lt; 0);\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eマイナス値の時は登録しっぱいになります。このバリデーションロジックをラムダ式を使って関数に委譲しています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E※よくあるのは複数のバリデーションをまとめたリストを適用させたりしますが、今回はバリデーションのロジックが１つの想定です。\u003C\u002Fp\u003E\n","\u003Cp\u003Eって本が気に入ってます。2014年の本ですけどとても使えると思います。 Javaによる関数型プログラミング ―Java 8ラムダ式とStream この前BookOffで売ってたので買いました。 Javaのstreamでス&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F07\u002F04\u002Fjava%e3%81%ab%e3%82%88%e3%82%8b%e9%96%a2%e6%95%b0%e5%9e%8b%e3%83%97%e3%83%ad%e3%82%b0%e3%83%a9%e3%83%9f%e3%83%b3%e3%82%b0\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EJavaによる関数型プログラミング\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",71,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1401","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1401","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1401\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1401","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1401","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1401",1369,"https:\u002F\u002Fvolkruss.com\u002F?p=1369","1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-spring%e3%81%a7%e3%81%ae%e3%82%af%e3%83%a9%e3%82%b9%e4%bd%9c%e6%88%90","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F28\u002F1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-spring%e3%81%a7%e3%81%ae%e3%82%af%e3%83%a9%e3%82%b9%e4%bd%9c%e6%88%90\u002F","1人Spring勉強会 Springでのクラス作成","\n\u003Cp\u003E今回はプロジェクトの整理を行います。\u003Cbr \u002F\u003E正直Springがどういう構成でやるのがベストなのか知らないので、あくまで個人的な記載方法になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESpringは素人なんでかなりパワー系かもしれないですが、結果的に動くものは作れます。\u003Cbr \u002F\u003Eパッケージはソース全文載せているので参考にしていただければと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Elombokを使うために、pom.xmlを修正します。\u003Cbr \u002F\u003Elombokを使うと面倒なアクセサメソッドを書かなくて良いので便利です。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;\u002FartifactId&gt;\n    &lt;\u002Fdependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-test&lt;\u002FartifactId&gt;\n        &lt;scope&gt;test&lt;\u002Fscope&gt;\n    &lt;\u002Fdependency&gt;\n    &lt;!-- 追加 --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.projectlombok&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;lombok&lt;\u002FartifactId&gt;\n        &lt;version&gt;1.18.8&lt;\u002Fversion&gt;\n        &lt;scope&gt;provided&lt;\u002Fscope&gt;\n    &lt;\u002Fdependency&gt;\n&lt;\u002Fdependencies&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EEntityの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EEntityは振る舞いを持たせません。ただのテーブルのレコードに該当する。そんなイメージです。\u003Cbr \u002F\u003E基本的にはDaoからアクセスされて、モデルに変換される使い方をよくします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEntityのオブジェクトをロジッククラスに渡すことはしません。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.entity;\nimport java.util.Date;\nimport lombok.Data;\n\u002F\u002FDataではgetter setter以外にも追加されるので、使用する際は注意\n@Data\npublic class UserEntity {\n\tprivate String user_id;\n\tprivate String password;\n\tprivate Date insert_date;\n\tprivate Date update_date;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EDaoの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eテーブル名と紐づくようなクラス名にしておくのが良いです。\u003Cbr \u002F\u003EJirenDao.javaを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDaoはデータベースへのアクセスを記載するクラスになります。\u003Cbr \u002F\u003Eエンティティを取得しますが、モデルの作成のような処理は記載しないのが良いと思っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eつまり、あくまでデータアクセスを行うクラスなので、ロジックのようなものを記載することはしません。（自分は）\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.mapper;\npackage com.example.demo.domain.dao;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Repository;\nimport com.example.demo.domain.entity.UserEntity;\nimport com.example.demo.domain.mapper.UserMapper;\n@Repository\npublic class JirenDao {\n\t\u002F\u002Fこのアノテーションでインジェクションされます。\n\t\u002F\u002Fデータベースを扱うためのクラスです。\n\t@Autowired\n\tprivate JdbcTemplate jdbcTemplate;\n\t@Autowired\n\tprivate UserMapper userMapper;\n\t\u002F**\n\t * \t&lt;P&gt;\n\t * 全てのユーザーを取得します。\n\t * &lt;\u002Fp&gt;\n\t *\n\t * @return {@link UserEntity}情報のリスト\n\t *\u002F\n\tpublic List&lt;UserEntity&gt; getAll(){\n\t\tString sql = \"select * from users\";\n\t\t\u002F\u002F 独自のmapperを用意せずにListとMapで受け取る。\n\t\t\u002F\u002F 独自のmapperを利用すれば戻り値を変更できそうです。\n\t\tList&lt;Map&lt;String,Object&gt;&gt; results = jdbcTemplate.queryForList(sql);\n\t\treturn results.stream().map(userMapper::toUserEntity).collect(Collectors.toList());\n\t\t\u002F\u002F　以下と同じことやってます。\n\t\t\u002F*\n\t\treturn results.stream().map(result -&gt; {\n\t\t\tUserEntity entity = new UserEntity();\n\t\t\tentity.setUser_id((String)result.get(\"user_id\"));\n\t\t\tentity.setPassword((String)result.get(\"password\"));\n\t\t\tentity.setInsert_date((Timestamp)result.get(\"insert_date\"));\n\t\t\tentity.setUpdate_date((Timestamp)result.get(\"update_date\"));\n\t\t\treturn entity;\n\t\t}).collect(Collectors.toList());\n\t\t*\u002F\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EjdbcTemplate.queryForListの戻り値はList&lt;Map&lt;String,Object&gt;&gt;になります。queryを使うともっとシンプルに書けそうですが、今回はListで受け取って用意したマッパークラスで変換して返すようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUserMapperインターフェースの作成\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.mapper;\nimport java.util.Map;\nimport com.example.demo.domain.entity.UserEntity;\n\u002F**\n *\n * ユーザーエンティティのマッパーインターフェースです。\n *\n * @author jiren\n *\n *\u002F\npublic interface UserMapper {\n\tUserEntity toUserEntity(Map&lt;String,Object&gt; map);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EUserMapper実装クラスの作成\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E@componentアノテーションをつけて、@Autowiredでインジェクトできるようにしました。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.mapper.impl;\nimport java.sql.Timestamp;\nimport java.util.Map;\nimport org.springframework.stereotype.Component;\nimport com.example.demo.domain.entity.UserEntity;\nimport com.example.demo.domain.mapper.UserMapper;\n@Component\npublic class UserMapperImpl implements UserMapper{\n\t\u002F**\n\t * {@inheritDoc}\n\t *\u002F\n\t@Override\n\tpublic UserEntity toUserEntity(Map&lt;String, Object&gt; map) {\n\t\tUserEntity entity = new UserEntity();\n\t\tentity.setUser_id((String)map.get(\"user_id\"));\n\t\tentity.setPassword((String)map.get(\"password\"));\n\t\tentity.setInsert_date((Timestamp)map.get(\"insert_date\"));\n\t\tentity.setUpdate_date((Timestamp)map.get(\"update_date\"));\n\t\treturn entity;\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EModelの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E私はモデルというと、業務上のモデルに該当する概念と同じ振る舞いなどが定義されているものとして使っています。\u003Cbr \u002F\u003Eもし共通のもがあればインターフェースも作りますが、今回はシンプルなのでインターフェースを作らずクラスのみ作ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E振る舞いといっても、現状作ろうとしているモデルに振る舞いはないので定義しないですが、例えばブログの投稿モデルだったらコメントを持ってるよねーとか。そう考えると、ビジネスロジックで必要なのはエンティティでなくてモデルなので、エンティティをモデルにしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eドメインモデルっていうのか？感覚でやりすぎてて整理しないとだめだと・・・\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.model;\nimport lombok.Getter;\nimport lombok.Setter;\n\u002F**\n * ユーザーのモデルです。\n *\n * @author jiren\n *\n *\u002F\n@Getter\n@Setter\npublic class User {\n\tprivate String user_id;\n\tprivate String password;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eコントローラーの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコントローラーはリクエストに対して呼び出す処理を定義します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ehttp:\u002F\u002Flocalhost:8080\u002Fjiren\u002Falluserにアクセスしたときに、データベースのレコードを取得して画面に表示するようにします。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.application.jiren.controller;\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport com.example.demo.domain.logic.JirenLogic;\nimport com.example.demo.domain.model.User;\n@Controller\n@RequestMapping(\"\u002Fjiren\")\npublic class JirenController {\n\t@Autowired\n\tprivate JirenLogic jirenLogic;\n\t\u002F**\n\t * &lt;P&gt;\n\t * 全ユーザー情報を元にhtmlファイルを返却します。&lt;br \u002F&gt;\n\t * 返却される文字列はhtmlを除いたファイル名になります\n\t * &lt;\u002FP&gt;\n\t *\n\t * @param model model\n\t * @return String ViewFileName\n\t *\u002F\n\t@GetMapping(\"\u002Falluser\")\n\tpublic String getAllUser(Model model){\n\t\tList&lt;User&gt; users = jirenLogic.getAll();\n\t\tmodel.addAttribute(\"users\",users);\n\t\treturn \"alluser\";\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E引数のモデルにaddAttributeという形でUserモデルを設定しています。こうすることでUserモデルの情報をビューに表示できます。\u003Cbr \u002F\u003Eまた、returnしている文字列はhtmlファイルの名前になります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eサービスクラスの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eクラス名がおかしいかもしれません。サービスクラスになります。最初サービスクラスってのを意識しないで作ってておかしなことになりました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなんか作っててここも理解が浅いなってなりました。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eインターフェースです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage com.example.demo.domain.logic;\nimport java.util.List;\nimport com.example.demo.domain.model.User;\npublic interface JirenLogic {\n\t\u002F**\n\t * \t&lt;P&gt;\n\t * 全てのユーザーのモデルを取得します。\n\t * &lt;\u002FP&gt;\n\t * @return {@link User}のリスト\n\t *\u002F\n\tpublic List&lt;User&gt; getAll();\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E実装クラスです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\npackage com.example.demo.domain.logic.impl;\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport javax.annotation.Resource;\nimport org.springframework.stereotype.Service;\nimport com.example.demo.domain.dao.JirenDao;\nimport com.example.demo.domain.entity.UserEntity;\nimport com.example.demo.domain.logic.JirenLogic;\nimport com.example.demo.domain.model.User;\n@Service\npublic class JirenLogicImpl implements JirenLogic{\n\t@Resource\n\tJirenDao jirendao;\n\t\u002F**\n\t * {@inheritDoc}\n\t *\u002F\n\tpublic List&lt;User&gt; getAll(){\n\t\tList&lt;UserEntity&gt; users = jirendao.getAll();\n\t\t\u002F\u002Fモデルにして返却します。\n\t\treturn users.stream().map(user -&gt; {\n\t\t\tUser model = new User();\n\t\t\tmodel.setUser_id(user.getUser_id());\n\t\t\tmodel.setPassword(user.getPassword());\n\t\t\treturn model;\n\t\t}).collect(Collectors.toList());\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Edaoを利用してエンティティを取得します。取得したエンティティをモデルにして返します。\u003Cbr \u002F\u003Eエンティティの時と同じようにマッパークラスを用意してもいいですが、簡素なものなのでその場で変換しています。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EViewの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Ethymeleafを使うとhtmlにロジックを組んだり、変数を使うことができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Esource\u002Fmain\u002Fresources\u002Ftemplatesにalluser.htmlを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;!DOCTYPE html&gt;\n&lt;html xmlns:th=\"http:\u002F\u002Fwww.thymeleaf.org\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;hello world&lt;\u002Ftitle&gt;\n&lt;\u002Fhead&gt;\n&lt;body&gt;\n&lt;p&gt;My Name is Jiren Tokkou Taichou!&lt;\u002Fp&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th colspan=\"2\"&gt;ユーザー情報&lt;\u002Fth&gt;\n        &lt;\u002Ftr&gt;\n    &lt;\u002Fthead&gt;\n    &lt;tbody　th:each=\"user : ${users}\"&gt;\n        &lt;tr&gt;\n            &lt;td　th:text=\"${user.user_id}\"&gt;id&lt;\u002Ftd&gt;\n            &lt;td　th:text=\"${user.password}\"&gt;password&lt;\u002Ftd&gt;\n        &lt;\u002Ftr&gt;\n    &lt;\u002Ftbody&gt;\n&lt;\u002Ftable&gt;\n&lt;\u002Fbody&gt;\n&lt;\u002Fhtml&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Epomの修正\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Epostgre接続に必要なものや、thymeleafに必要なライブラリをpomに記載しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n\t\t&lt;dependency&gt;\n\t\t  &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n\t\t  &lt;artifactId&gt;spring-boot-starter-jdbc&lt;\u002FartifactId&gt;\n\t\t&lt;\u002Fdependency&gt;\n\t\t&lt;dependency&gt;\n            &lt;groupId&gt;org.postgresql&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;postgresql&lt;\u002FartifactId&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;\u002FartifactId&gt;\n        &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E確認\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Ehttp:\u002F\u002Flocalhost:8080\u002Fjiren\u002Falluser にアクセスします。\u003Cbr \u002F\u003EするとDBから取得した情報が表示されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2021\u002F06\u002Fimage-2.png\" alt=\"\" class=\"wp-image-1378\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eかなり飛ばし気味でしたが、Springを使ってpostgreからデータを取得して表示することができました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eエラー\u003C\u002Fh2\u003E\n\n\n\u003Ch4\u003EViewがあーだこーだ言われる\u003C\u002Fh4\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;2m2021-06-27 17:57:42.205&#91;0;39m &#91;31mERROR&#91;0;39m &#91;35m27980&#91;0;39m &#91;2m---&#91;0;39m &#91;2m&#91;nio-8080-exec-2]&#91;0;39m &#91;36mo.a.c.c.C.&#91;.&#91;.&#91;\u002F].&#91;dispatcherServlet]   &#91;0;39m &#91;2m:&#91;0;39m Servlet.service() for servlet &#91;dispatcherServlet] in context with path &#91;] threw exception &#91;Circular view path &#91;alluser]: would dispatch back to the current handler URL &#91;\u002Fjiren\u002Falluser] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)] with root cause\njavax.servlet.ServletException: Circular view path &#91;alluser]: would dispatch back to the current handler URL &#91;\u002Fjiren\u002Falluser] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)\n\t\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Epom.xmlの依存関係に以下を追記する\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;\u002FartifactId&gt;\n        &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch4\u003Elombokのアクセサメソッドが定義されない\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003ESpringToolSuite4.iniに以下を追記する\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E-vmarges -javaagent:lombok.jar\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n","\u003Cp\u003E今回はプロジェクトの整理を行います。正直Springがどういう構成でやるのがベストなのか知らないので、あくまで個人的な記載方法になります。 Springは素人なんでかなりパワー系かもしれないですが、結果的に動くものは作れ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F28\u002F1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-spring%e3%81%a7%e3%81%ae%e3%82%af%e3%83%a9%e3%82%b9%e4%bd%9c%e6%88%90\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E1人Spring勉強会 Springでのクラス作成\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1369","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1369","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1369\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1369","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1369","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1369",1353,"https:\u002F\u002Fvolkruss.com\u002F?p=1353","1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-postgre%e7%92%b0%e5%a2%83%e6%a7%8b%e7%af%89%e7%b7%a8","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F28\u002F1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-postgre%e7%92%b0%e5%a2%83%e6%a7%8b%e7%af%89%e7%b7%a8\u002F","1人Spring勉強会-Postgre環境構築編","\n\u003Cp\u003E仕事ではJavaを使っています。\u003Cbr \u002F\u003Eでもフレームワークとかがレガシーな感じでよろしくなく、Springなんて使っていません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eインフラとかは割と整っていて、JenkinsやらAWSやら使っていますが、私は全く関与していません。\u003Cbr \u002F\u003Eさらにいえば、開発環境もインフラ担当者が用意したdockerイメージのDBサーバーを使っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回はDockerにDBサーバーを用意して、似たようなことを個人的にやってみようということで、やっていきます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E今回やること\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EDockerでPostgre環境を作成します（参考サイト）\u003Cbr \u002F\u003ESpringプロジェクトを作成します\u003Cbr \u002F\u003ESpringにPostgreの接続設定を行います\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eデータベースの用意\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考サイトと同じようにPostgreの環境を用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Fasylum\u002Fitems\u002F17e655d8369c19affbc3\" data-type=\"URL\" data-id=\"https:\u002F\u002Fqiita.com\u002Fasylum\u002Fitems\u002F17e655d8369c19affbc3\" target=\"_blank\"\u003EdockerでPostgreSQLのコンテナ作成と初期化\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにユーザーとデータベースをjirenに変更しました。レコードをいくつか追加しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ejiren=# insert into users values ('aoba','password');\nINSERT 0 1\njiren=# insert into users values ('hihumi','password');\nINSERT 0 1\njiren=# insert into users values ('yun','password');\nINSERT 0 1\njiren=# insert into users values ('hazime','password');\nINSERT 0 1\njiren=# select * from users;\n user_id | password | insert_date | update_date\n---------+----------+-------------+-------------\n 1       | jirem    |             |\n jiren   | password |             |\n aoba    | password |             |\n hihumi  | password |             |\n yun     | password |             |\n hazime  | password |             |\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EDocker メモ\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eエラー対応\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EC:\\Users\\xxxx\\Documents\\dockers\\postgre&gt;docker exec -it dockerpostgres bash\nError response from daemon: Container 96b94bffb6561ea94703cfd3b846518672d171a0f52684c5b69138672b504155 is not running\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Evolumeを消したら治りました。理由はわからなかったです。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EC:\\Users\\xxx\\Documents\\dockers\\postgre&gt;docker volume ls\nDRIVER    VOLUME NAME\nlocal     5eaccfccafb7a76c3651ba17ebf3f0c8977439f1a655735e2c363a219da58a64\nlocal     6a4d0ea50481971cf424e1f872489fe86aa046387312137ae5202efc37f4583e\nlocal     6af960660094a2f83ac81cdeba8793b71a858364d5e130f295f6631cfc11520b\nlocal     7b3c86ab5cf8cfa9e96071bd99d81a994277b9d08602522d4f57e4e95db13a66\nlocal     727b015a52acfe93b2d952febea8f1a2b301864517df70ba435bab62b6410813\nlocal     3808216d5c1f608d0117899ae3a313204cf000fc9195d22c72da403da9642978\nlocal     docker-laravel_mysql-volume\nlocal     postgre_jirenpostgredb\nlocal     wordpress_db-data\nlocal     wordpress_wp_db_data\nC:\\Users\\xxx\\Documents\\dockers\\postgre&gt;docker volume rm postgre_jirenpostgredb\npostgre_jirenpostgredb\nC:\\Users\\xxx\\Documents\\dockers\\postgre&gt;docker volume ls\nDRIVER    VOLUME NAME\nlocal     5eaccfccafb7a76c3651ba17ebf3f0c8977439f1a655735e2c363a219da58a64\nlocal     6a4d0ea50481971cf424e1f872489fe86aa046387312137ae5202efc37f4583e\nlocal     6af960660094a2f83ac81cdeba8793b71a858364d5e130f295f6631cfc11520b\nlocal     7b3c86ab5cf8cfa9e96071bd99d81a994277b9d08602522d4f57e4e95db13a66\nlocal     727b015a52acfe93b2d952febea8f1a2b301864517df70ba435bab62b6410813\nlocal     3808216d5c1f608d0117899ae3a313204cf000fc9195d22c72da403da9642978\nlocal     docker-laravel_mysql-volume\nlocal     wordpress_db-data\nlocal     wordpress_wp_db_data\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EPostgreメモ\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eデーターベース一覧\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\\l\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eユーザー一覧\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\\du\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ESTSでSpringプロジェクトを作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Estsを使ってSpringプロジェクトを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2021\u002F06\u002Fimage.png\" alt=\"\" class=\"wp-image-1355\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E適当にwebにチェックを入れて\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2021\u002F06\u002Fimage-1.png\" alt=\"\" class=\"wp-image-1357\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでSpringプロジェクトができました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eデータベースに接続する設定を行う\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E\u002Fsrc\u002Fmain\u002Fresources\u002Fapplication.propertiesに設定を記載します。\u003Cbr \u002F\u003E参考サイトで.envに記載した内容を書きます。私は少し変更したので以下のようになりました。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Espring.datasource.driver-class-name=org.postgresql.Driver\nspring.datasource.url=jdbc:postgresql:\u002F\u002Flocalhost:5432\u002Fjiren\nspring.datasource.username=jiren\nspring.datasource.password=password\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E今回は、この辺にしておきます。\u003Cbr \u002F\u003E実際にデータアクセスを行うのに必要なものをそろえる必要があるため、次回はSpringのプロジェクトを整理していきます。\u003C\u002Fp\u003E\n","\u003Cp\u003E仕事ではJavaを使っています。でもフレームワークとかがレガシーな感じでよろしくなく、Springなんて使っていません。 インフラとかは割と整っていて、JenkinsやらAWSやら使っていますが、私は全く関与していません&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F28\u002F1%e4%ba%baspring%e5%8b%89%e5%bc%b7%e4%bc%9a-postgre%e7%92%b0%e5%a2%83%e6%a7%8b%e7%af%89%e7%b7%a8\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E1人Spring勉強会-Postgre環境構築編\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",43,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1353","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1353","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1353\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1353","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1353","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1353",1330,"https:\u002F\u002Fvolkruss.com\u002F?p=1330","docker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F24\u002Fdocker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b\u002F","dockerでSphinxとGulpの自動ビルド環境を作る","\n\u003Cp\u003E今回は実践編ということで、SphinxとGulpの実行環境を作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Egulpを使って、sphinxのrstファイルに変更を入れて保存する度に、sphinxのmake htmlコマンドを自動的に行うようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E参考サイトです。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fmomijiame.tumblr.com\u002Fpost\u002F105699889996\u002F%E3%82%BF%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%8A%E3%83%BC-gulp-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-sphinx-%E3%81%AE%E5%9F%B7%E7%AD%86%E4%BD%9C%E6%A5%AD%E3%82%92%E6%8D%97%E3%82%89%E3%81%9B%E3%82%8B\" data-type=\"URL\" data-id=\"https:\u002F\u002Fmomijiame.tumblr.com\u002Fpost\u002F105699889996\u002F%E3%82%BF%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%8A%E3%83%BC-gulp-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-sphinx-%E3%81%AE%E5%9F%B7%E7%AD%86%E4%BD%9C%E6%A5%AD%E3%82%92%E6%8D%97%E3%82%89%E3%81%9B%E3%82%8B\" target=\"_blank\"\u003Eタスクランナー Gulp を使って Sphinx の執筆作業を捗らせる\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Freflet\u002Fitems\u002F4b3f91661a54ec70a7dc\" data-type=\"URL\" data-id=\"https:\u002F\u002Fqiita.com\u002Freflet\u002Fitems\u002F4b3f91661a54ec70a7dc\" target=\"_blank\"\u003Edockerで簡易にpython3の環境を作ってみる\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgenzouw.com\u002Fentry\u002F2021\u002F04\u002F28\u002F215832\u002F2563\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fgenzouw.com\u002Fentry\u002F2021\u002F04\u002F28\u002F215832\u002F2563\u002F\" target=\"_blank\"\u003EDocker Compose で初回起動時のみ yarn install を実行させる方法\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fqiita.com\u002Fritukiii\u002Fitems\u002F921521f634e339550861\" data-type=\"URL\" data-id=\"https:\u002F\u002Fqiita.com\u002Fritukiii\u002Fitems\u002F921521f634e339550861\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ELocal gulp not found が出た時の対処法\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Esphinxはpython製のドキュメント作成ツールです。ドキュメントはhtml形式になっていて、rstファイルという形式のファイルで作成します。このrstファイルは正直微妙です（笑）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EGulpは、タスクランナーと呼ばれて、色々な処理を自動化できます。npmを使ってインストールします。sphinxのビルド作業を自動化してやろうという狙いです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerfileの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EまずはDockerImageを用意するので、Dockerfileを作成します。\u003Cbr \u002F\u003E今回はnodeのイメージにpythonとpipとshinxをインストールします。\u003Cbr \u002F\u003Eあとはnpmで、gulpとbrowser-syncをインストールします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EFROM node\n# FROM node\n# python,sphinxなどのインストール\nRUN apt-get update\nRUN apt-get install python3\nRUN apt-get install python3-pip -y\nRUN pip3 install --upgrade pip\nRUN pip3 install -U sphinx\n# 作業場所(ディレクトリ)の指定\nWORKDIR \u002Fusr\u002Fsrc\u002Fapp\n# gulpなどをインストール\nRUN npm i -g gulp\nRUN npm i browser-sync\nRUN npm link gulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Egulpはグローバルインストールして、さらにlinkをやってますが、\u003Cbr \u002F\u003E別途なぜこうするのか調べます。（色々試してこうなりました。。。）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Edocker-compose.yamlの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回利用するコンテナは一つですが、それでもportの指定や、共有フォルダの指定などがわかりやすいメリットがあるので、docker-compose.yamlを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E3000ポートを利用するので、同じく3000にポートマッピングしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eホストのappフォルダと、コンテナのusr\u002Fsrc\u002Fapp\u002Fworkが共有されているので、ここにgulpfile.jsを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eversion: '3'\nservices:\n  gulp:\n    container_name: jirengulp\n    build:\n      context: .\u002F\n      dockerfile: .\u002FDockerfile\n    ports:\n    - 3000:3000\n    volumes:\n      - .\u002Fapp\u002F:\u002Fusr\u002Fsrc\u002Fapp\u002Fwork\n    tty: true\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Egulpfile.jsの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E基本的には参考サイトを見本にして\u003Cs\u003Eパクって\u003C\u002Fs\u003E書きました。\u003Cbr \u002F\u003E書き方はgulp4に変えたり若干修正をしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコメントにも書いてますが、結構パワー系な記載になっていると思います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst gulp = require(\"gulp\");\nconst browserSync = require(\"browser-sync\");\nconst exec = require('child_process').exec;\n\u002F**\n * browserSyncを最初に初期化しておきます。\n *\u002F\ngulp.task(\"bs\", () =&gt; {\n  browserSync.init({\n    server:{\n      baseDir:&#91;\"build\u002Fhtml\"]\n    }\n  })\n})\n\u002F**\n * browserSyncを利用して、画面を再描画します\n * build→reloadの順番で実行する想定です。\n *\u002F\ngulp.task('reload', () =&gt; {\n  return browserSync.reload();\n})\n\u002F**\n * sphinxの make html を実行します。\n *\u002F\ngulp.task('build', (callback) =&gt; {\n  exec(\"make html\", (err,stdout,stderr) =&gt; {\n    console.log(stdout)\n    callback(err)\n  })\n})\n\u002F**\n * watchが走ってる状態でreloadが呼ばれる\n * →watchが消えたので、ここでもwatchを実行しています。なんか間違ってそうだけど動いてます。\n *\u002F\ngulp.task('watch', () =&gt; {\n  gulp.watch(\"source\u002F**\u002F*.rst\", gulp.series('build',gulp.parallel('reload','watch')))\n})\n\u002F**\n * 最初に呼ばれる処理です。\n * seriesは直列処理\n * parallelは並列処理\n *\u002F\ngulp.task('default', gulp.series('build',gulp.parallel('bs','watch')))\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eコンテナを起動する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E最初にビルドします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker-compose build --no-cache\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eできたらコンテナを立ち上げます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker-compose up -d\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にコンテナに入ります\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker exec -it jirengulp bash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003ESphinxの雛形を作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eworkフォルダに予めsphinxのクイックスタートファイルとかを設定しておけば、不要な作業だと思うのですが、自分のパソコンにはsphinxが入ってないので、コンテナから最初に作成を行います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンテナのworkフォルダに移動したら以下コマンドを実施。聞かれた適当に答えておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ecd work\nsphinx-quickstart\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで雛形ファイル群が出来上がります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Egulpを起動する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Egulpコマンドを起動すると、watch処理にて、sourceフォルダの*.rstファイルの更新を監視します。\u003Cbr \u002F\u003E今回の場合は、index.rstを適当に変更すると、それが反映されてブラウザも勝手にリロードされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のコマンドのでgulpを実行します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでindex.rstを適当に修正すると、ブラウザがリロードされて修正が即時反映されるようになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回利用したファイルはgithubに上げてます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fsphinxgulp\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fsphinxgulp\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E勉強になった動画を共有します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-block-embed-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"【Docker超入門 #6】Dockerfileを作成しよう\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FUsUUp7hJClk?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E今回は実践編ということで、SphinxとGulpの実行環境を作ってみます。 gulpを使って、sphinxのrstファイルに変更を入れて保存する度に、sphinxのmake htmlコマンドを自動的に行うようにします。 &hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F24\u002Fdocker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EdockerでSphinxとGulpの自動ビルド環境を作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",46,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1330","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1330","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1330\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1330","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1330","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1330",1315,"https:\u002F\u002Fvolkruss.com\u002F?p=1315","docker-compose%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F23\u002Fdocker-compose%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F","Docker-composeについて勉強したメモします","\n\u003Cp\u003E前回の投稿で、Dockerイメージを用意することで、コンテナを起動させて開発環境として利用できるということを学びました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EじゃあDocker-composeってなに？ってことについて勉強します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDocker-composeとは\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Edocker-composeは複数のコンテナを利用するアプリケーションを管理できる機能です。\u003Cbr \u002F\u003Eつまり、複数のコンテナを動かす開発環境に役立ちます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E前回の投稿で、WordPressとmysqlという別々のコンテナを連携させて、開発環境を構築しましたが、あの時、コンテナを一個一個起動したり、手順が割と複雑でした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそういったところを、もっとわかりやすく管理できるようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E具体的にどうやって管理するのかというと、docker-compose.ymlというファイルに設定情報を記載して管理します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EWordPressの環境を構築する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E前回と同じ環境になりますが、docker-composeで環境構築を行います。\u003Cbr \u002F\u003E前回の手順として\u003C\u002Fp\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Edocker-networkを作成する\u003C\u002Fli\u003E\u003Cli\u003Emysqlのイメージを用意してコンテナを動かす\u003C\u002Fli\u003E\u003Cli\u003Ewordpressのイメージを用意してコンテナを動かす\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E今回はまず、docker-compose.ymlを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eversion: '3'\nservices:\n  db:\n    image: mysql:5.7.25\n    ports:\n    - 3306:3306\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: password\n      MYSQL_DATABASE: wordpress\n      MYSQL_USER: root\n      MYSQL_PASSWORD: password\n  wordpress:\n    image: wordpress\n    depends_on:\n      - db\n    ports:\n      - \"8088:80\"\n    restart: always\n    volumes:\n      - .\u002Fwork:\u002Fvar\u002Fwww\u002Fhtml\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: root\n      WORDPRESS_DB_PASSWORD: password\n      WORDPRESS_DB_NAME: wordpress\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次に以下のコマンドを実施します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker-compose up -d\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ehttp:\u002F\u002Flocalhost:8088\u002Fにアクセスすると、wordpressのインストール画面が表示されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Edocker-compose.ymlという設定ファイルさえあれば、コマンド一発で環境構築終了ってすごいですよね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Edocker-compose.ymlとは\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eこれが何をするためのものかは、大体想像ができました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E先程のdocker-compose.ymlの内容を見ると、dbコンテナとwordpressコンテナの記載があることがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edepends_on:\n      - db\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Edepends_onは依存関係に関する記載ですが、起動順序に関して制御します。\u003Cbr \u002F\u003E特に指定がなければ上から順に起動されるそうです。この場合はDBが先に起動する。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Erestart: always\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EOSの起動時にコンテナが起動されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eイメージとコンテナについて少し理解があると、docker-composeで何をやっているのかわかりやすいですね。\u003C\u002Fp\u003E\n","\u003Cp\u003E前回の投稿で、Dockerイメージを用意することで、コンテナを起動させて開発環境として利用できるということを学びました。 じゃあDocker-composeってなに？ってことについて勉強します。 Docker-compo&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F23\u002Fdocker-compose%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EDocker-composeについて勉強したメモします\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1315","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1315","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1315\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1315","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1315","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1315",1287,"https:\u002F\u002Fvolkruss.com\u002F?p=1287","docker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F22\u002Fdocker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F","Dockerについて勉強したのでメモします","\n\u003Cp\u003Eドラゴン桜という面白いドラマで、教え合う勉強法というのをやっていたので、勉強したことを教えるつもりで記事を書いてみます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事に書いてあること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003EDockerとはなんですか？\u003C\u002Fli\u003E\u003Cli\u003Eイメージとコンテナについて軽く触れます\u003C\u002Fli\u003E\u003Cli\u003EDockerfileでイメージを作ってみます\u003C\u002Fli\u003E\u003Cli\u003Eコンテナに入ってみます\u003C\u002Fli\u003E\u003Cli\u003EホストPCとコンテナでファイルを共有します\u003C\u002Fli\u003E\u003Cli\u003Enetworkを使ってコンテナ間で通信します\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E自分のワードプレスやLaravelなどの開発環境には、Dockerを使っています。\u003Cbr \u002F\u003E仕事でもDockerを使っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは具体的にDockerって何？ってなると「ぐぬぬ」としか言えないので、勉強したことをまとめます。間違っていたらご指摘いただけると嬉しいです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerとはなにか\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E昔よく使っていたVirtualBoxでは、自分のパソコンに仮想コンピュータを作成して、その仮想コンピュータの中でOSを動かして、アプリケーションなどを動かしていました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerは自分のパソコンのカーネル(OSを動かす中核的なソフトウェア)を利用するコンテナと呼ばれるものを利用して、アプリケーションを動かします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E別のOSを動かすというと、相当ハードに見えますが、Dockerではそういった仮想コンピュータの中で動かすOS(ゲストOS)がないため、軽量快速というわけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerImageとコンテナとは何か\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EDockerImageとはコンテナを動かすための設定データみたいな感じでしょうか、DockerImageを元にコンテナを動かし、そのコンテナの中で、何かをおっぱじめるイメージだと理解しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンテナは先程のゲストOSのような立ち位置でしょうか。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerImageはDockerHubという場所からダウンロードできますし、Dockerfileを利用して、既存のDockerImageをベースに新しいImageを作成することもできる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E-- imageをダウンロードする\ndocker pull\n-- コンテナを実行する(create\u002Fstartが実行される）\ndocker run\n-- dockerfileからイメージを作成する\ndocker build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E簡単な操作でわかりやすく説明してくれている動画がありますので、共有します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-block-embed-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"docker入門part3 イメージを作成する\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002F_Pdl2EJF1-4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Ecentosにpython3を入れたイメージを作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実践ということで、centosにpython3を入れたイメージを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerfileに以下のような記載をします。\u003Cbr \u002F\u003Eやっていることは、centosのイメージをダウンロードして、\u003Cbr \u002F\u003Epython3をインストールして\u003Cbr \u002F\u003Eバージョンを表示している\u003Cbr \u002F\u003E大変シンプルですね。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EFROM centos:centos7\nRUN yum -y install python3\nCMD &#91;\"python3\", \"-V\"]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次に以下のコマンドを実行します。studypyというイメージ名でイメージを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E docker build -t studypy .\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Epythonのインストールが始まりますので、しばらく待ちます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E終わったら以下のコマンドを実行します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run studypy\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EPython 3.6.8と表示されればOKです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eすごい簡単なものでしたがやったことは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Edockerimageにはcentosとpython3がインストールされていて、それを実行するコンテナを起動してpythonを実行した。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にコンテナの中に入ってpythonを実行します。\u003Cbr \u002F\u003E-itでコンテナにログインできます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run -it studypy \u002Fbin\u002Fbash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでコンテナのcentosのbin\u002Fbashに入れます。ここでpython3と打つと、python3が実行できます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EホストPCとコンテナでデータを共有する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EホストPCでpython書いて、コンテナから実行してみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキーワードは -vオプションになります。Dockerfileがあるフォルダにappフォルダを作成して、中にtest.pyというファイルを用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Etest.pyはprint(&#8220;Hello Python3!&#8221;)という簡単なものにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそしたら以下コマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run -v \u002FUsers\u002Fjiren\u002Fdockerstudy\u002Fpy\u002Fapp:\u002Fcontainerapp -it studypy \u002Fbin\u002Fbash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E-v で、ホストPCの共有場所:コンテナのフォルダ　で、共有できます。\u003Cbr \u002F\u003Eこの場合は、ホストPCのappフォルダが共有フォルダとして、コンテナのcontainerappというフォルダにリンクされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Elsコマンドで確認するとあります\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;root@8c9fcb995319 \u002F]# ls\nanaconda-post.log  bin  containerapp  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eでは、containerappのtest.pyを実行してみましょう。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&#91;root@8c9fcb995319 containerapp]# python3 test.py\nHello Python3!\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E表示されました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eコンテナ間で通信する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eimageを二つ用意して、コンテナを二つ起動させます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eimageはmysql:5.7.25 とwordpressです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cem\u003E\u003Cspan class=\"has-inline-color has-luminous-vivid-orange-color\"\u003E１つのコンテナに、MySQLとApacheなど、まとめてはいけないのですか？\u003Cbr \u002F\u003Eコンテナが再利用できない、メンテナンスの問題などでオススメしない\u003C\u002Fspan\u003E\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fteratail.com\u002Fquestions\u002F123306\" target=\"_blank\"\u003Ehttps:\u002F\u002Fteratail.com\u002Fquestions\u002F123306\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Elinkオプションはレガシーらしいので、networkを利用します。docker networkを利用することでコンテナ間で通信ができるようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Enetworkの作成は、以下のコマンドで行います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker network create study-wp-network\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Emysqlコンテナを以下のコマンドで起動します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run --name mysql -p 3306:3306 --network study-wp-network -e MYSQL_USER=root -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -d mysql:5.7.25\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eワードプレスのコンテナを起動します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker run --name jirenwordpress --network study-wp-network -e WORDPRESS_DB_HOST=mysql -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password -p 8088:80 -d wordpress\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eワードプレスのインストール画面が表示されればOKです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Emysqlが動いているコンテナに、wordpressのコンテナからアクセスすることができました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cem\u003E-eは環境変数を設定するオプションです。\u003Cbr \u002F\u003E-dはバックグラウンドで動作させるオプションです。\u003Cbr \u002F\u003E-pはポートマッピングをするオプションです。ホストの8088がコンテナの80にマップされます。\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実はすごくエラーが発生して困っていました。mysqlに繋がらないとか、データベースが選択できないとか、、、結果的に以下のサイトにあるようにオプションを指定することで解決しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fcrieit.net\u002Fposts\u002FDocker-5-Wordpress-Wordpress\" target=\"_blank\"\u003Ehttps:\u002F\u002Fcrieit.net\u002Fposts\u002FDocker-5-Wordpress-Wordpress\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eまとめ\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Edockerを利用すると簡単にコンテナを動かすことができ、様々な開発環境を簡単に構築できるということですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDockerImageを用意して、コンテナを走らせる。という手順だけで環境が利用できるというのは、早いしわかりやすいし便利です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次回はdocker-composeについて勉強したいと思います。\u003C\u002Fp\u003E\n","\u003Cp\u003Eドラゴン桜という面白いドラマで、教え合う勉強法というのをやっていたので、勉強したことを教えるつもりで記事を書いてみます。 この記事に書いてあること Dockerとはなんですか？ イメージとコンテナについて軽く触れます D&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F22\u002Fdocker%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%81%97%e3%81%be%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EDockerについて勉強したのでメモします\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",22,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1287","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1287","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1287\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1287","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1287","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1287",1276,"https:\u002F\u002Fvolkruss.com\u002F?p=1276","wordpress-%e5%8b%95%e7%9a%84css%e3%81%8c%e9%81%85%e3%81%84%e3%81%ae%e3%81%a7","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F19\u002Fwordpress-%e5%8b%95%e7%9a%84css%e3%81%8c%e9%81%85%e3%81%84%e3%81%ae%e3%81%a7\u002F","WordPress | 動的CSSが遅いのでwp localize scriptを使いました","\n\u003Cp\u003EDynamic cssというのだろうか？phpファイルにcssを書くことで、phpのコードをcssでも使えるようにしたものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のように利用していました。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\n    header('Content-Type: text\u002Fcss;', 'charset=utf-8');\n    include('..\u002F..\u002F..\u002F..\u002Fwp-load.php');\n    $options = get_option( 'jimage_options' );\n    $image = wp_get_attachment_url(esc_attr($options&#91;'j_background']));\n?&gt;\n@charset \"utf-8\";\n.j-back-image{\n    background-image: url(&lt;?php echo $image; ?&gt;);\n    background-size: cover;\n    position: relative;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E背景画像をユーザーが簡単に変更できるようにしたいと思いました。\u003Cbr \u002F\u003Eなので画像設定ページを追加してあげて、その値を動的cssでやればOKでしたが、これが遅かった。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eどえりゃー遅いということで、別の方法を考えたところ、wordpressのajax通信で必須な\u003Cstrong\u003Ewp_localize_script\u003C\u002Fstrong\u003Eを利用することにしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ejsファイルに変数を渡すことができるので、ここで値を渡してやることにしました。\u003Cbr \u002F\u003E勉強がてらテーマカスタマイザを利用していますが、気にしないでください。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    \u002F**\n     * 共通アセットを読み込みます。\n     *\u002F\n    public function load_jiren_t_common_script(){\n        wp_enqueue_script(\n            'bundle',\n            plugins_url() . '\u002Fjiren-t\u002Fassets\u002Fbundle.js');\n        \u002F\u002F　背景画像はカスタマイザの値を渡します。jsから変更してください。\n\u003Cstrong\u003E        wp_localize_script('bundle', 'ex_background_image', array(\n            'image' =&gt; esc_url( get_theme_mod( 'background_img' ) ),\n        ));   \u003C\u002Fstrong\u003E\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこんな感じでjsファイルに画像のurlを渡して、js側でcssのimageを変更します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    \u002F\u002F背景画像をカスタマイザで指定した画像に変更します。\n    const backgroundImage = document.getElementById(\"wrapper\");\n    backgroundImage.style.backgroundImage = 'url(\"' + ex_background_image.image + '\")';\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれだと、動的cssとやらより早かったです。というか動的cssを利用するととても遅くてお話になりませんでしたとさ。。。\u003C\u002Fp\u003E\n","\u003Cp\u003EDynamic cssというのだろうか？phpファイルにcssを書くことで、phpのコードをcssでも使えるようにしたものです。 以下のように利用していました。 背景画像をユーザーが簡単に変更できるようにしたいと思いまし&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F19\u002Fwordpress-%e5%8b%95%e7%9a%84css%e3%81%8c%e9%81%85%e3%81%84%e3%81%ae%e3%81%a7\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EWordPress | 動的CSSが遅いのでwp localize scriptを使いました\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1276","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1276","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1276\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1276","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1276","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1276",1265,"https:\u002F\u002Fvolkruss.com\u002F?p=1265","%e5%a4%9c%e3%81%ae%e5%ba%97%e5%b0%82%e9%96%80%e3%81%ae%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F08\u002F%e5%a4%9c%e3%81%ae%e5%ba%97%e5%b0%82%e9%96%80%e3%81%ae%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f\u002F","夜の店専門のワードプレスのプラグインを作ったお話","\n\u003Cfigure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Cblockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003E風俗店とかキャバクラとかホストとかで使える、夜のお店専門のワードプレスのプラグインが完成したのだ！\u003Ca href=\"https:\u002F\u002Ft.co\u002F17NSse9OwS\"\u003Ehttps:\u002F\u002Ft.co\u002F17NSse9OwS\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; 超電磁砲 (@keisukesiratori) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fkeisukesiratori\u002Fstatus\u002F1402116665555386374?ref_src=twsrc%5Etfw\"\u003EJune 8, 2021\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E最近、トゥイッターをはじめました。登録はしてたんですが、アカウント忘れてて、ようやく見つけました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は、こんないかがわしいトゥイートを発見しました。\u003Cbr \u002F\u003Eなんと、夜のお店のテーマに使えるような、テーマ拡張型のワードプレスのプラグインを作成しました。とのことです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E割と必要な機能は揃ってると思います、あとは改造も楽にできそうな予感がしてます。（プロフィール画像を追加したいとか）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回はプラグインの紹介と作りについて少し記載します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E作ったプラグインとは\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ESuperNightPluginというプラグインを作りました。\u003Cbr \u002F\u003E夜のお店で使えるプラグインになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002FSuperNightPlugin\"\u003Ehttps:\u002F\u002Fgithub.com\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002FSuperNightPlugin\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u002F\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002FSuperNightPlugin\"\u003Ejirentaicho\u002FSuperNightPlugin\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテーマ拡張型プラグインという言葉があるかわかりませんが、テーマ作成を拡張するようなプラグインになります。なので、ある程度テーマを作れる人が使用することを想定しています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E機能としては、こんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eキャストの管理機能\u003C\u002Fli\u003E\u003Cli\u003Eキャストのスケジュール管理機能\u003C\u002Fli\u003E\u003Cli\u003Eメール投稿機能（別途Postieプラグインを利用します）\u003C\u002Fli\u003E\u003Cli\u003EAPIの提供\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Ch3\u003Eキャストの管理機能\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eいわゆるカスタム投稿タイプってやつでキャストを追加しています。\u003Cbr \u002F\u003E在籍するキャストの数だけ登録してください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた、メールアドレスの入力欄があり、Postieというプラグインを有効化している場合は、自動的にPostie側のプラグインにも許可メールアドレスが登録されるようになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPostieはメールアドレスさえあれば、メール投稿が可能なプラグインですので、わざわざワードプレスのユーザーを作る手間を省いています。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eキャストのスケジュール管理機能\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eスケジュール管理画面を追加しました。\u003Cbr \u002F\u003Eこれはキャストごとに保持しているmyscheduleというカスタムフィールドに値を設定します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eカスタムフィールドの中に配列を用意することで、別のテーブルを用意することなくスケジュール情報を管理しています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E業務とかでのテーブル設計ではこのような書き方はあまりしませんが、ワードプレスの他のプラグインを見ると、この手法はよくあるテクニックのようで、Postieでも使われていました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eいちいち更新処理が入るたびに画面が更新されるのが面倒なのでAjaxを使いました。\u003Cbr \u002F\u003Ewordpressではajax通信ではwp_ajax_関数名というアクションフックを利用することで実装できます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F\u002Fアクションフック\nadd_action('wp_ajax_register_ajax_data', array($this,'register_ajax_data'));\n\u002F\u002Fその内容（一部）\npublic function register_ajax_data(){\n        $nonce = $_POST&#91;\"nonce\"];\n        $post_id = $_POST&#91;\"post_id\"];\n        if(wp_verify_nonce($nonce,'get-schedule-nonce')){\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EどうやってnonceをAjaxのパラメータに渡すのかというと、jsファイルを読み込ませる際に設定できます（詳しくはgithubにソースがあります）\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        wp_localize_script('myscript', 'ex_values', array(\n            'admin_url' =\u003E esc_url(admin_url( 'admin-ajax.php', __FILE__ )),\n            'nonce' =\u003E wp_create_nonce('get-schedule-nonce'),\n        )); \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ejs側ではURLSearchParamsを利用します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    let param = new URLSearchParams();\n    &#91; ... inputs].forEach(input =\u003E param.append(input.name,input.value) )\n    param.append(\"action\", 'register_ajax_data')\n    param.append(\"nonce\", ex_values.nonce)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eメール投稿機能（別途Postieプラグインを利用します）\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eメール投稿機能といえば、キャストのブログのようなものです。\u003Cbr \u002F\u003Eワードプレスにはユーザーを追加する機能があるので、キャストごとにユーザーを追加してキャストがそのユーザー情報でログインして投稿すれば、問題なくそれが実現できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでも、それって面倒くさいです。キャスト側もいちいちログインしないといけないのは面倒です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそこで、複数のユーザーがメール投稿できるプラグインPostieを使うことにしました。\u003Cbr \u002F\u003Eそうすれば実装できる気がしない、メールの設定処理も全てお任せできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなので、私がやったことは、キャストのメールアドレスとpostieのメールアドレスを強制的に紐づけることだけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこうすることで、キャストごとにメールでブログの投稿ができようになります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EAPIの提供\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E必要な機能は作っても、テーマ側でどうやって利用するのか？\u003Cbr \u002F\u003Eまさか実装を全て読むなんて面倒なことをさせてはいけないので、APIを用意しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテーマ作成者は、globalに用意されたAPIを利用するだけで、テーマにプラグインの機能を取り込めるようにしました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E感想\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eプラグイン化しておくことで、お店のホームページを作るってなったときに、0から用意する必要がなくなるので便利ですねって思いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、正直ワードプレスってあんまり詳しくないんで、結構調べながらやったんですが、カスタム投稿タイプはこのプラグインを使え！みたいな記事が多い印象。\u003Cbr \u002F\u003Eいや、そうじゃない。。。と思いながらも、プログラマーでなくても機能拡張できるプラグインってのはすごいなと思いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、PHPという言語は難しいな。と思いました。\u003C\u002Fp\u003E\n","\u003Cp\u003E最近、トゥイッターをはじめました。登録はしてたんですが、アカウント忘れてて、ようやく見つけました。 今回は、こんないかがわしいトゥイートを発見しました。なんと、夜のお店のテーマに使えるような、テーマ拡張型のワードプレスの&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F08\u002F%e5%a4%9c%e3%81%ae%e5%ba%97%e5%b0%82%e9%96%80%e3%81%ae%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E夜の店専門のワードプレスのプラグインを作ったお話\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1265","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1265","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1265\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1265","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1265","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1265",1263,"https:\u002F\u002Fvolkruss.com\u002F?p=1263","wordpress%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%81%8b%e3%82%89%e3%82%ab%e3%82%b9%e3%82%bf%e3%83%a0%e6%8a%95%e7%a8%bf%e3%82%bf%e3%82%a4%e3%83%97%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F06\u002Fwordpress%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%81%8b%e3%82%89%e3%82%ab%e3%82%b9%e3%82%bf%e3%83%a0%e6%8a%95%e7%a8%bf%e3%82%bf%e3%82%a4%e3%83%97%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f\u002F","WordPressのプラグインからカスタム投稿タイプを作ったけどsingleが全く機能しない件","\n\u003Cp\u003E今、ワードプレスのプラグインを作っています。\u003Cbr \u002F\u003Eプラグインの中でカスタム投稿タイプを作成しましたが、こいつがsingle.phpで全く認識しない問題がありました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E原因は正直よくわかりませんでしたが、一応解決できたのでメモしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAddCastPostTypeクラスでcastというカスタム投稿タイプを作成しています。\u003Cbr \u002F\u003E以下は失敗例です。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nclass AddCastPostType{\n    public function __construct(){\n        if (!defined('ABSPATH')) {\n            exit;\n        }\n        add_action('init',array($this,'create_item_post_type'));\n    }\n    function create_item_post_type() {\n        register_post_type( 'cast', &#91;\n            'labels' =\u003E &#91;\n                'name'          =\u003E 'キャスト',\n                'singular_name' =\u003E 'cast',\n                'add_new_casr' =\u003E 'キャストを追加',\n                'add_new' =\u003E '新規キャスト登録',\n            ],\n            \u002F\u002F'rewrite'       =\u003E array( 'slug' =\u003E 'cast' ),\n            'public'        =\u003E true,\n            'has_archive'   =\u003E true,\n            'menu_position' =\u003E 610,\n            'show_in_rest'  =\u003E true,\n        ]);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E問題なく管理画面にキャストが追加されます。\u003Cbr \u002F\u003E次はこのクラスをインスタンス化します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eプラグインファイルにてクラスのインスタンス化します。\u003Cbr \u002F\u003E（余計な箇所は省略しています）\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Erequire_once dirname( __FILE__ ) . '\u002Fapp\u002FCustomPost\u002FCast\u002FAddCastPostType.php';\n\u002F**\n * 初期化します。\n *\u002F\nclass ItemManager{\n    public function init(){\n        \u002F**\n         * 必要なクラスをインスタンス化する\n         * それぞれクラスはコンストラクタからadd_actionなどで処理を行って行く\n         *\u002F\n        if(HelperUtility::isLoginStatus()){\n            $cast_post_type = new AddCastPostType();\r \u002F\u002Fこれが問題\n        }\n    }\n}\n\u002F**\n * クラスをインスタンス化して初期化メソッドを実行する\n *\u002F\n$item_manager = new ItemManager();\n$item_manager-\u003Einit();\n\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eプログラミングのお作法に基づいてクラスをインスタンス化したんですけど、これが問題でした。\u003Cbr \u002F\u003Eなんでかわかりませんが、以下の書き方に変えるとsingle.phpで認識するようになりました。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\n\r\u002F\u002Fここでインスタンス化？？？\n$addCastPostType = new AddCastPostType;\nclass AddCastPostType{\n    public function __construct(){\n        if (!defined('ABSPATH')) {\n            exit;\n        }\n        add_action('init',array($this,'create_item_post_type'));\n    }\n    function create_item_post_type() {\n        register_post_type( 'cast', &#91;\n            'labels' =\u003E &#91;\n                'name'          =\u003E 'キャスト',\n                'singular_name' =\u003E 'cast',\n                'add_new_casr' =\u003E 'キャストを追加',\n                'add_new' =\u003E '新規キャスト登録',\n            ],\n            \u002F\u002F'rewrite'       =\u003E array( 'slug' =\u003E 'cast' ),\n            'public'        =\u003E true,\n            'has_archive'   =\u003E true,\n            'menu_position' =\u003E 610,\n            'show_in_rest'  =\u003E true,\n        ]);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eクラス内の変数にインスタンス化？したクラスを持たせることで、解決しました。\u003Cbr \u002F\u003Eつまり、プラグインファイルからはインクルードするだけで、インスタンス化はしません。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eclass ItemManager{\n    public function init(){\n        if(HelperUtility::isLoginStatus()){\n            \u002F\u002F$cast_post_type = new AddCastPostType();\n 。\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eとりあえず、$addCastPostType = new AddCastPostType;のような書き方について調べる必要がありますが、解決しました。\u003C\u002Fp\u003E\n","\u003Cp\u003E今、ワードプレスのプラグインを作っています。プラグインの中でカスタム投稿タイプを作成しましたが、こいつがsingle.phpで全く認識しない問題がありました。 原因は正直よくわかりませんでしたが、一応解決できたのでメモし&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F06\u002Fwordpress%e3%81%ae%e3%83%97%e3%83%a9%e3%82%b0%e3%82%a4%e3%83%b3%e3%81%8b%e3%82%89%e3%82%ab%e3%82%b9%e3%82%bf%e3%83%a0%e6%8a%95%e7%a8%bf%e3%82%bf%e3%82%a4%e3%83%97%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EWordPressのプラグインからカスタム投稿タイプを作ったけどsingleが全く機能しない件\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1263","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1263","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1263\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1263","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1263","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1263",1255,"https:\u002F\u002Fvolkruss.com\u002F?p=1255","javascript%e3%81%a7%e3%82%af%e3%83%ad%e3%83%bc%e3%82%b8%e3%83%a3%e3%81%a8%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3%e3%81%bf%e3%81%9f%e3%81%84%e3%81%aa%e3%82%84%e3%81%a4","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F27\u002Fjavascript%e3%81%a7%e3%82%af%e3%83%ad%e3%83%bc%e3%82%b8%e3%83%a3%e3%81%a8%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3%e3%81%bf%e3%81%9f%e3%81%84%e3%81%aa%e3%82%84%e3%81%a4\u002F","JavaScriptでクロージャとビルダーパターンみたいなやつ","\n\u003Cp\u003E「クロージャとは関数内で定義された関数である」こんな薄っぺらい説明ではクロージャのクの字も語れていないと誰かが言ってました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけでビルダーパターンっぽいのをクロージャを使って作ってみました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今作ってるワードプレスのプラグインで、ajax用のパラメータを作る処理に取り入れてます。\u003Cbr \u002F\u003E普通はこんな感じでパラメータを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    let params = new URLSearchParams();\n    params.append(\"action\", 'get_ajax_data');\n    params.append(\"nonce\", values.nonce);\n    params.append(\"post_id\",document.getElementById(\"cast_select\").value);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでも別に何の問題もないのですが、クロージャを使えばビルダーパターンのような書き方ができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のような、クロージャを利用した関数を用意します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Efunction AjaxCriteria(){\n    \u002F\u002F この変数にreturn先のオブジェクトから参照できる\n    const param = new URLSearchParams();\n    \u002F\u002F console.log(this)\n    \u002F\u002F windows\n    return {\n        add(key,value){\n            param.append(key,value)\n            \u002F\u002Fconsole.log(this);\n            \u002F\u002F {}　→このオブジェクト\n            return this; \u002F\u002F つまりここで返しているのはオブジェクトであり、return{}のものと同じなので、paramを参照できるオブジェクトです。\n        },\n        build(){\n            return param;\n        }\n    };\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E関数の中で関数が定義されたオブジェクトを返しています。\u003Cbr \u002F\u003Eparamの値を変更するaddメソッドとparam自体を返すbuildメソッドです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさぁこれを使ってみるとこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst params = AjaxCriteria()\n                    .add(\"action\", 'get_ajax_data')\n                    .add(\"nonce\", values.nonce)\n                    .add(\"post_id\",document.getElementById(\"cast_select\").value)\n                    .build();\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eビルダーパターンのように実装ができました。\u003Cbr \u002F\u003Eなんか関数型っぽい記載ができたので満足です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに、ワードプレスのテーマを元に戻しました。なんかアイキャッチ画像が重いので、、、\u003C\u002Fp\u003E\n","\u003Cp\u003E「クロージャとは関数内で定義された関数である」こんな薄っぺらい説明ではクロージャのクの字も語れていないと誰かが言ってました。 というわけでビルダーパターンっぽいのをクロージャを使って作ってみました。 今作ってるワードプレ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F27\u002Fjavascript%e3%81%a7%e3%82%af%e3%83%ad%e3%83%bc%e3%82%b8%e3%83%a3%e3%81%a8%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3%e3%81%bf%e3%81%9f%e3%81%84%e3%81%aa%e3%82%84%e3%81%a4\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EJavaScriptでクロージャとビルダーパターンみたいなやつ\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1255","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1255","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1255\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1255","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1255","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1255",1235,"https:\u002F\u002Fvolkruss.com\u002F?p=1235","%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7null%e3%81%a8optional","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F05\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7null%e3%81%a8optional\u002F","今更だがEffectiveJavaを買ったのでnullとOptional","\n\u003Ch2\u003E項目54　nullではなく、空コレクションか空配列を返す\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EよくNullチェックを行うコードを見かけます。\u003Cbr \u002F\u003Eでも、そもそもNullを返却するようなメソッドは作らないようにしましょうというお話でした。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\npackage nullhadame;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class Main {\n\tpublic static List&lt;String\u003E list;\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\tlist = new ArrayList&lt;String\u003E();\n\t\tlist = getList();\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tif(list != null &amp;&amp; list.contains(\"涼風青葉\")){\n\t\t\tSystem.out.println(\"処理が完了しました\");\n\t\t}\n\t\tif(list == null){\n\t\t\tSystem.out.println(\"nullです\");\n\t\t}\n\t}\n\tpublic static List&lt;String\u003E getList(){\n\t\treturn list.isEmpty() ? null : new ArrayList&lt;\u003E(list);\n\t}\n}\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EこれはNullを返す可能性があるのでやめて、空のコレクションを返せば十分\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage nullhadame;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class Main {\n\tpublic static List&lt;String\u003E list;\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\tlist = new ArrayList&lt;String\u003E();\n\t\tlist = getList();\n\t\tif(list.contains(\"涼風青葉\")){\n\t\t\tSystem.out.println(\"処理が完了しました\");\n\t\t}\n\t}\n\tpublic static List&lt;String\u003E getList(){\n\t\treturn new ArrayList&lt;\u003E(list);\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E項目55 オプショナルを注意して返す\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EなんとなくHaskell以外の言語といえばNullで死ぬと思っていましたが、JavaにはOptionalというものがあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E仕事でも結構書きました。これがあると結果が無い場合があることがクライアントも理解できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EOptional&lt;T\u003Eは、nullでないT参照を保持するか、何もない空(empty)を保持しているか。HaskellでいうMaybeのようなものですね。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage nullhadame;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Optional;\npublic class Main {\n\tpublic static List&lt;String\u003E list;\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F orElseでデフォルト値を設定できる\n\t\tString name = getName().orElse(\"涼風青葉\");\n\t\tSystem.out.println(name);\n\t\tString name1 = getEmptyName().orElse(\"涼風青葉\");\n\t\tSystem.out.println(name1);\n\t\t\u002F\u002F 確定で値が取得できる場合はgetが付ける\n\t\tString name2 = getName().get();\n\t\tSystem.out.println(name2);\n\t\t\u002F\u002F値があればtrue\n\t\tboolean hasName = getName().isPresent();\n\t\tSystem.out.println(hasName);\n\t}\n\tpublic static Optional&lt;String\u003E getName(){\n\t\t\u002F\u002F nullでないT参照を返す\n\t\treturn Optional.of(\"桜ねね\");\n\t}\n\tpublic static Optional&lt;String\u003E getEmptyName(){\n\t\t\u002F\u002F 何もない空(empty)を返す\n\t\treturn Optional.empty();\n\t}\n\t\u002F\u002F こういうのはやめる（コレクションは空を返すだけ）\n\tpublic static Optional&lt;List&lt;String\u003E\u003E getList(){\n\t\treturn Optional.of(Arrays.asList(\"はじめ\",\"ひふみ\",\"ゆん\"));\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E桜ねね\u003Cbr \u002F\u003E涼風青葉\u003Cbr \u002F\u003E桜ねね\u003Cbr \u002F\u003Etrue\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eメモ\u003C\u002Fh2\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\t\tList&lt;String\u003E hoge = Arrays.asList(\"aoba\",\"hihumi\");\n\t\tOptional&lt;String\u003E aoba = hoge.stream().filter(i -\u003E i.equals(\"aoba\")).findFirst();\n\t\tSystem.out.println(aoba.orElse(\"青葉はいません\"));\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EfindFirstはOptionalを返すので、こんな書き方になります。\u003C\u002Fp\u003E\n","\u003Cp\u003E項目54　nullではなく、空コレクションか空配列を返す よくNullチェックを行うコードを見かけます。でも、そもそもNullを返却するようなメソッドは作らないようにしましょうというお話でした。 これはNullを返す可能&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F05\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7null%e3%81%a8optional\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E今更だがEffectiveJavaを買ったのでnullとOptional\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",41,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1235","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1235","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1235\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1235","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1235","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1235",1232,"https:\u002F\u002Fvolkruss.com\u002F?p=1232","1232","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F05\u002F1232\u002F","今更だがEffectiveJavaを買ったのでtoString","\n\u003Cp\u003Eクラスとインターフェースとかジェネリックスとかは、読んで勉強してもあんまり納得いかないような感じがしたので、小さいtipsから手をつけてみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E何かJavaで作りながら勉強しようと思います。（でもこれといって作りたいものがない。ＧＵＩアプリとか・・？）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EというわけでEffective Javaを読んでいきます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E項目12 toStringを常にオーバーライドする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EtoStringの実装を提供して使いやすいクラスを目指そう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E普通にtoStringメソッドを呼んでみると\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage objsikou;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tCompany ejump = new Company();\n\t\tSystem.out.println(ejump.toString());\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Eobjsikou.Company@15db9742\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eなんだかよくわからない文字列が返ってきました。クラス名@ハッシュコードらしいです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EtoStringはオブジェクトに含まれる興味のある（重要な）内容がわかるようになるべき。ということですが、その戻り値の形式はクラスが広く使われるようになると変更ができなくなるので注意（電話番号や行列などの値クラスはいいかもしれない）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eドキュメンテーションはしっかり記載すること\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage objsikou;\npublic class Company {\n\tprivate final String name;\n\tprivate final int no;\n\tpublic Company(String name,int no){\n\t\tthis.name = name;\n\t\tthis.no = no;\n\t}\n\tpublic String getName(){\n\t\treturn this.name;\n\t}\n\tpublic int getNo(){\n\t\treturn this.no;\n\t}\n\t\u002F**\n\t * 会社名とその企業番号を返します。\n\t * 形式は\"会社名=XXX 企業番号=YYY\"で構成されます。\n\t *\n\t * その他ほげほげ\n\t *\u002F\n\t@Override\n\tpublic String toString(){\n\t\treturn \"会社名=\" + this.name + \"企業番号=\" + this.no;\u002F\u002Fnoはintなので注意\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage objsikou;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tCompany ejump = new Company(\"イーグルジャンプ\",902);\n\t\tSystem.out.println(ejump.toString());\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E会社名=イーグルジャンプ企業番号=902\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EtoStringでは重要な情報を取得できるようにすることと、出力形式にはルール決めが必要ということ。\u003C\u002Fp\u003E\n","\u003Cp\u003Eクラスとインターフェースとかジェネリックスとかは、読んで勉強してもあんまり納得いかないような感じがしたので、小さいtipsから手をつけてみます。 何かJavaで作りながら勉強しようと思います。（でもこれといって作りたいも&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F05\u002F1232\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E今更だがEffectiveJavaを買ったのでtoString\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1232","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1232","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1232\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1232","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1232","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1232",1215,"https:\u002F\u002Fvolkruss.com\u002F?p=1215","%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F04\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3\u002F","今更だがEffectiveJavaを買ったのでビルダーパターン","\n\u003Cp\u003EJavaも使えるようにしないといけないので、EffectiveJavaを今更ですが買いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E私の日本語力が無いのか？なんか何言ってるかよくわからない箇所が多い気がしますが、、、\u003Cbr \u002F\u003Eつまみ読みしていこうかなと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここに書いてあるソースはあくまで勉強用なのでご注意ください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EBuilderパターンの利用\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコンストラクタでの引数が多くなったときはビルダーパターンを利用すると読みやすいよって話。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E初めて聞いたけどテレスコーピングコンストラクタパターンというのがあるらしい。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class HumanTelescoping {\n\tprivate final String name; \u002F\u002F 必須\n\tprivate final int age; \u002F\u002F 必須\n\tprivate final String hobby; \u002F\u002F option\n\tprivate final String nicname; \u002F\u002F option\n\t\u002F\u002F コンストラクタ\n\tpublic HumanTelescoping(String name,int age){\n\t\t\u002F\u002F　さらにコンストラクタを呼び出す\n\t\tthis(name,age,\"none\",\"none\");\n\t}\n\tpublic HumanTelescoping(String name,int age,String hobby,String nicname){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t\tthis.hobby = hobby;\n\t\tthis.nicname = nicname;\n\t}\n\tpublic String GetState(){\n\t\treturn \"name : \" + this.name + \" age : \" + this.age + \" hobby : \" + this.hobby + \" nicname : \" + this.nicname;\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tHumanTelescoping aoba = new HumanTelescoping(\"涼風青葉\", 18);\n\t\tSystem.out.println(aoba.GetState());\n\t\tHumanTelescoping koh = new HumanTelescoping(\"八神コウ\", 25 , \"イラスト\", \"パンツマン\");\n\t\tSystem.out.println(koh.GetState());\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ename : 涼風青葉 age : 18 hobby : none nicname : none\u003Cbr \u002F\u003Ename : 八神コウ age : 25 hobby : イラスト nicname : パンツマン\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E引数に色々渡してるけど何の値？ってなるし構造も少し複雑。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eビルダーパターン\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eさっそく作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic abstract class Human {\n\tpublic enum Type{ILUST,PROGRMMER,KIKAKU}\n\tpublic final Type type;\n\tpublic final String name;\n\tpublic final int age;\n\tpublic final String hobby;\n\tpublic final String nicname;\n\tabstract static class Builder&lt;T extends Builder&lt;T\u003E\u003E{\n\t\tprivate final Type type;\n\t\tprivate final String name;\n\t\tprivate final int age;\n\t\tprivate String hobby = \"none\";\n\t\tprivate String nicname = \"none\";\n\t\t\u002F**\n\t\t * 必須なんでコンストラクタで受け取ってみる\n\t\t * @param type\n\t\t * @param name\n\t\t * @param age\n\t\t *\u002F\n\t\tpublic Builder(Type type,String name,int age){\n\t\t\tthis.type = type;\n\t\t\tthis.name = name;\n\t\t\tthis.age = age;\n\t\t}\n\t\tpublic T setHobby(String hobby){\n\t\t\tthis.hobby = hobby;\n\t\t\treturn self();\n\t\t}\n\t\tpublic T setNicname(String nicname){\n\t\t\tthis.nicname = nicname;\n\t\t\treturn self();\n\t\t}\n\t\tpublic abstract Human build();\n\t\tpublic abstract T self();\n\t}\n\tHuman(Builder&lt;?\u003E builder){\n\t\tthis.name = builder.name;\n\t\tthis.age = builder.age;\n\t\tthis.hobby = builder.hobby;\n\t\tthis.nicname = builder.nicname;\n\t\tthis.type = builder.type;\n\t}\n\tpublic String getData(){\n\t\treturn this.name + this.age + this.hobby + this.nicname + this.type;\n\t}\n}\r\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\npublic class IllustHuman extends Human {\n\tpublic enum Charge{CHARACTER,MOTION,BACK}\n\tprivate final Charge charge;\n\tpublic static class Builder extends Human.Builder&lt;Builder\u003E{\n\t\tprivate final Charge charge;\n\t\t\u002F\u002F なんかコンストラクタの引数が多くなったけど必須なんでいいや汗\n\t\tpublic Builder(Type type,String name,int age, Charge charge){\n\t\t\tsuper(type,name,age);\n\t\t\tthis.charge = charge;\n\t\t}\n\t\t@Override\n\t\tpublic IllustHuman build() {\n\t\t\t\u002F\u002F TODO Auto-generated method stub\n\t\t\treturn new IllustHuman(this);\n\t\t}\n\t\t@Override\n\t\tpublic Builder self() {\n\t\t\t\u002F\u002F TODO Auto-generated method stub\n\t\t\treturn this;\n\t\t}\n\t}\n\tIllustHuman(Builder builder) {\n\t\tsuper(builder);\n\t\tthis.charge = builder.charge;\n\t}\n\t@Override\n\tpublic String getData(){\n\t\treturn \"name : \" + this.name + \"age : \" + this.age + \"hobby : \" + this.hobby + \"nicname : \" + this.nicname + \"班　：　\" + this.type + \"チーム　：　\" + this.charge;\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epackage newgame;\nimport newgame.Human.Type;\nimport newgame.IllustHuman.Charge;\npublic class Main {\n\t\u002F**\n\t * @param args\n\t *\u002F\n\tpublic static void main(String&#91;] args) {\n\t\t\u002F\u002F TODO Auto-generated method stub\n\t\tHumanTelescoping aoba = new HumanTelescoping(\"涼風青葉\", 18);\n\t\tSystem.out.println(aoba.GetState());\n\t\tHumanTelescoping koh = new HumanTelescoping(\"八神コウ\", 25 , \"イラスト\", \"パンツマン\");\n\t\tSystem.out.println(koh.GetState());\n\t\t\u002F\u002F ボディービルダーパターンの利用\n\t\tIllustHuman yun = new IllustHuman.Builder(Type.ILUST, \"飯島ゆん\", 23, Charge.CHARACTER).setHobby(\"ファッション\").setNicname(\"ゆん\").build();\n\t\tSystem.out.println(yun.getData());\n\t}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ename : 涼風青葉 age : 18 hobby : none nicname : none\u003Cbr \u002F\u003Ename : 八神コウ age : 25 hobby : イラスト nicname : パンツマン\u003Cbr \u002F\u003Ename : 飯島ゆんage : 23hobby : ファッションnicname : ゆん班　：　ILUSTチーム　：　CHARACTER\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちょとわかりづらいかもしれませんが、ビルダーパターンではオプションをコンストラクタで渡すようなことはせず、メソッドを介して設定しているので、なんの値を設定しているのか見て判断できるようになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ereturn thisとして、疑似自分型イデオム（イデオンではない）と呼ばれる技法でこれを可能にしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオブジェクトの生成が一度で書かれているため、毎回setHoge()のようにするJavaBeansパターンの生成過程で起きるバグという欠点を解決しています。\u003C\u002Fp\u003E\n","\u003Cp\u003EJavaも使えるようにしないといけないので、EffectiveJavaを今更ですが買いました。 私の日本語力が無いのか？なんか何言ってるかよくわからない箇所が多い気がしますが、、、つまみ読みしていこうかなと思います。 こ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F05\u002F04\u002F%e4%bb%8a%e6%9b%b4%e3%81%a0%e3%81%8ceffectivejava%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%93%e3%83%ab%e3%83%80%e3%83%bc%e3%83%91%e3%82%bf%e3%83%bc%e3%83%b3\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E今更だがEffectiveJavaを買ったのでビルダーパターン\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",1219,69,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1215","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1215","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1215\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1219","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1215","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1215","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1215",1185,"https:\u002F\u002Fvolkruss.com\u002F?p=1185","%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e6%94%b9%e9%80%a0%e8%a8%88%e7%94%bb","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F04\u002F25\u002F%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e6%94%b9%e9%80%a0%e8%a8%88%e7%94%bb\u002F","ワードプレスのテーマ改造計画","\n\u003Cp\u003E色んなテーマを見てきたが俺は「Dan」というテーマが気に入ってる。\u003Cbr \u002F\u003E何より無駄がなくシンプルで使いやすいし無料。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブログ用のテーマにわざわざお金を払う必要ってあんまりないと思うし、いろいろ盛り込んでも見づらいサイトができるだけ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず、最近はテーマを作ってみたり、functionsに書いていたようなことをpluginにしてみたりとやってきたので、シンプルで素晴らしいテーマを改造してみた。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fwordpress_plugin_item_manager\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fwordpress_plugin_item_manager\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ephpファイルを編集するのは問題ないのだが、cssなどを書き換えるのはライセンス的にどうなん？ってのがわからないので子テーマを利用することにした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E自分自身ワードプレスの開発のベストプラクティス的なのを全く知らないのでほぼ感覚でやってますのでご注意を。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに修正前はこんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2021\u002F04\u002Fhoge-350x1024.png\" alt=\"\" class=\"wp-image-1207\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず、テーマ改造の前に思っていること\u003C\u002Fp\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eサイドバーというものは無くしたい\u003C\u002Fli\u003E\u003Cli\u003Eサイドバーの代わりはメインコンテンツの下に移動したい\u003C\u002Fli\u003E\u003Cli\u003Eヘッダーの下にswiperスライダー系の記事リンクが欲しい\u003C\u002Fli\u003E\u003Cli\u003Eコードを綺麗に表示させたい\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E私が最近思っていることですが、いろんなwebサイトを見てて情報が多すぎて何を見れば良いのかわからない時があるんですよね\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eその原因の一つがサイドバーだと思っています。至る所に色んなものが散らばっていてね。プログラミングで言えばクラスの責務が多すぎる問題的な？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというかね、そもそもハンバーガーメニューとか嫌いなんですよ。わざわざワンアクション必要なメニューってどうなん？え？ならサイドバー素直に置いとけって？？？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと私はアンチjQueryなんで、Swiperは気に入ってます。\u003Cbr \u002F\u003E会社のwebシステムで追加機能つける仕事をした時に、jQueryのver1.9とかを使っていて苦しい思いをしたのが懐かしいです。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eいろいろ言いましたが、好みの問題なので宗教についての意見はやめておきます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E子テーマを作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E子テーマは、テーマフォルダに子テーマのフォルダを追加するだけできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwpdocs.osdn.jp\u002F%E5%AD%90%E3%83%86%E3%83%BC%E3%83%9E\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwpdocs.osdn.jp\u002F%E5%AD%90%E3%83%86%E3%83%BC%E3%83%9E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E親テーマ\u003Cbr \u002F\u003E子テーマ\u003Cbr \u002F\u003E　style.css\u003Cbr \u002F\u003E　functions.php\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003EGulpを使ってみる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eswiperのページを見るとjsの初期化を行っていますが、トランスパイルしてあげようと思った時に、gulpってのを使ってみようか！となったので、下記サイトを参考に導入しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Fnon_cal\u002Fitems\u002F5fad826d75b9f5d84d21\" target=\"_blank\"\u003Ehttps:\u002F\u002Fqiita.com\u002Fnon_cal\u002Fitems\u002F5fad826d75b9f5d84d21\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれをテーマフォルダでやると大量のファイルがnode_modulesというフォルダの中にできてしまうので、themesフォルダと同階層にjsworkフォルダを作って、トンラスパイル先をthemesフォルダにするやり方にしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E何が言いたいかというとこのサイトと同じようなことです\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fetwas-neues.info\u002Fweb_design\u002Fpost-243\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fetwas-neues.info\u002Fweb_design\u002Fpost-243\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は自分で書いたjsをトランスパイルするだけなので、これで十分ですね。\u003Cbr \u002F\u003Esaasは使わずbabelだけなのですが、勉強がてらに導入してみた感じです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EJsのプラグインを導入する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回導入したのはswiperとhighlight.jsです。\u003Cbr \u002F\u003Eとりあえず親テーマにjsファイルとcssファイルを入れて、子テーマのfunctionsでそれを有効化しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F**\n * 追加js\n *  ・swiper\n *  ・hightlight\n *\u002F\nfunction add_ex_scripts() {\n  $my_theme = wp_get_theme();\n  $version = $my_theme-\u003Eget( 'Version' );\n  \u002F\u002F js\n  wp_enqueue_script('swiper.js', get_template_directory_uri() . '\u002Fassets\u002Fjs\u002Fswiper.min.js', array(), '5.4.5', true);\n  wp_enqueue_script('hightlight.js', get_template_directory_uri() . '\u002Fassets\u002Fjs\u002Fhighlight.pack.js', array(), '10.7.2', true);\n  \u002F\u002F css\n  wp_enqueue_style('swiper.css', get_template_directory_uri() . '\u002Fassets\u002Fcss\u002Fswiper.min.css', array(), '5.4.5');\n  wp_enqueue_style('default.css', get_template_directory_uri() . '\u002Fassets\u002Fcss\u002Fcodestyle\u002Fdefault.css', array(), '5.4.5');\n  \u002F\u002F swpierの初期化\n  wp_enqueue_script('jiren_dits.js', get_template_directory_uri() . '\u002Fassets\u002Fjs\u002Fjiren_dist.js', array(), $version, true);\n}\nadd_action( 'wp_enqueue_scripts', 'add_ex_scripts' );\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eカスタムをしていく\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eここまでくるとあとは既存のcssを子テーマで書き換えて行ったり、追加していく作業です。\u003Cbr \u002F\u003Eそこで思ったのが、やっぱり公式に出るようなテーマは綺麗な作りになっているなぁと。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eありとあらゆる箇所に修正が必要なわけでなく、ある程度共通化されているので修正も簡単でした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eワードプレスには標準で色んなブロックがすでにあるので良いですね。\u003Cbr \u002F\u003E例えば\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E２カラム\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"wp-block-columns\"\u003E\n\u003Cdiv class=\"wp-block-column\"\u003E\n\u003Cp\u003E左のカラム\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cdiv class=\"wp-block-column\"\u003E\n\u003Cp\u003E右のカラム\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003Eこんな感じで勝手にレスポンシブなの作ってくるので、便利です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E残作業\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E残りの作業は以下のような感じです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003Eタスク\u003C\u002Ftd\u003E\u003Ctd\u003E難易度\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003Eデフォルトアイキャッチ画像\u003C\u002Ftd\u003E\u003Ctd\u003E低\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E記事のスタイルの微調整\u003C\u002Ftd\u003E\u003Ctd\u003E低\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eタスクは残っていますが、運営できる程度のテーマには修正できたので一旦公開してみました！\u003C\u002Fp\u003E\n","\u003Cp\u003E色んなテーマを見てきたが俺は「Dan」というテーマが気に入ってる。何より無駄がなくシンプルで使いやすいし無料。 ブログ用のテーマにわざわざお金を払う必要ってあんまりないと思うし、いろいろ盛り込んでも見づらいサイトができる&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F04\u002F25\u002F%e3%83%af%e3%83%bc%e3%83%89%e3%83%97%e3%83%ac%e3%82%b9%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e6%94%b9%e9%80%a0%e8%a8%88%e7%94%bb\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003Eワードプレスのテーマ改造計画\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",61,67,68,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1185","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1185","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1185\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1185","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1185","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1185",1173,"https:\u002F\u002Fvolkruss.com\u002F?p=1173","wordpress%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%a6%e8%b2%a9%e5%a3%b2%e3%81%97%e3%81%9f%e8%a9%b1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F04\u002F17\u002Fwordpress%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%a6%e8%b2%a9%e5%a3%b2%e3%81%97%e3%81%9f%e8%a9%b1\u002F","WordPressのテーマを作って販売した話","\n\u003Cp\u003E最近は仕事のせいで全くゲーム作りができませんでした。\u003Cbr \u002F\u003E仕事はJavaを使っていますが、Javaってなんか好きになれないんですよね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eゲーム作りはパワーが必要なんで、WordPressのテーマを作って癒されていました。\u003Cbr \u002F\u003E最近はGatsby.jsとかが人気ですが、私はWordPressが最強だと思っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E理由は省略しますが、結局WordPressてすごいんですよね。\u003Cbr \u002F\u003Eというわけで、WordPressのテーマを作成しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回作ったのはズバリ「夜のお店」に向けてテーマを作りました。\u003Cbr \u002F\u003E夜のお店なので詳しいことは販売サイトでご説明します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Foreemo.booth.pm\u002Fitems\u002F2898353\" target=\"_blank\"\u003Ehttps:\u002F\u002Foreemo.booth.pm\u002Fitems\u002F2898353\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003Eもっと良いものを作れそうなので、これは無料にしました。\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eいわゆる勤怠管理とかプラグインもあるようですが、今回は自作しました。\u003Cbr \u002F\u003E簡単なトリックを使えば簡単作れるので、わざわざプラグインを利用するまでもないかなといったところです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E簡単なトリックというのは配列を使うことです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPHPの配列はJavaScriptのオブジェクトのようにkeyとvalueを設定できるようですので（PHPあんまり詳しくない）それを応用して日付をkeyに出勤情報を登録するという感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれをやってしまうと、実は応用が効かないのですが、必要な機能は実装できていますので問題ないといったところです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EWordPressはカスタム投稿タイプとかカスタムフィールドを使うようになると、カスタマイズの幅が広がります。\u003Cbr \u002F\u003Eこれらのプラグインもありますが、これもわざわざプラグインを利用する必要はありません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテーマは前々から作ったりしていますが、結構力を入れて作りました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次はワードプレスのプラグイン開発をしてみようかなと思っています。\u003C\u002Fp\u003E\n","\u003Cp\u003E最近は仕事のせいで全くゲーム作りができませんでした。仕事はJavaを使っていますが、Javaってなんか好きになれないんですよね。 ゲーム作りはパワーが必要なんで、WordPressのテーマを作って癒されていました。最近は&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F04\u002F17\u002Fwordpress%e3%81%ae%e3%83%86%e3%83%bc%e3%83%9e%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%a6%e8%b2%a9%e5%a3%b2%e3%81%97%e3%81%9f%e8%a9%b1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EWordPressのテーマを作って販売した話\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1173","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1173","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1173\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1173","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1173","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1173",1111,"https:\u002F\u002Fvolkruss.com\u002F?p=1111","javascriptmoden","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F01\u002F01\u002Fjavascriptmoden\u002F","「JavaScriptモダンプログラミング完全ガイド　堅牢なコードを効率的に開発できる！」を買った","\n\u003Cp\u003E先日発売された「JavaScriptモダンプログラミング完全ガイド　堅牢なコードを効率的に開発できる！」を買いましたので、自分用のメモと感想など。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E第一章「値と変数」\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E型について、オブジェクトについての説明がある。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Elet pikachu = { name : 'ピカチュウ', hp : 100};\n\u002F\u002F 分割を使うと、配列やオブジェクトの中身を簡単に取り出せる\nlet {name , hp} = pikachu\nconsole.log(`${name}　：　${hp}`) \u002F\u002F \"ピカチュウ　：　100\"\nconsole.log(typeof pikachu) \u002F\u002F \"object\"\n\u002F\u002F nullはobjectではないが、typeofを使うとobjectという文字列が帰ってくる。\nconsole.log(typeof null) \u002F\u002F \"object\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E名前を変えてオブジェクトから取り出したい場合\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Elet { name : metamonname, hp : metamonhp} = pikachu\nconsole.log(`${metamonname}　：　${metamonhp}`);\n\u002F\u002F \"ピカチュウ　：　100\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Erest演算子でオブジェクトを分割する。その他要素がオブジェクトになる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Elet pikachu = { name : 'ピカチュウ', hp : 100};\nlet{name ,...otherProp} = pikachu\nconsole.log(otherProp)\n\u002F* ---------------------\n&#91;object Object] {\n  hp: 100\n}\n-----------------------*\u002F\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eその他配列のおもろい動き\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Elet array = &#91;1,2,3,&#91;4,5,6]];\nconsole.log(array&#91;3]);\n\u002F\u002F配列の中の配列も文字列化される\nconsole.log(array.join())\n\u002F\u002F要素がない場合はundefined\nconsole.log(array&#91;4.5])\n\u002F\u002F こんなこともできる\narray&#91;4.5] = \"小数点を番号にする\";\nconsole.log(array&#91;4.5]);\n------------------------------\n&#91;4, 5, 6]\n\"1,2,3,4,5,6\"\nundefined\n\"小数点を番号にする\"\n&#91;1, 2, 3, &#91;4, 5, 6]]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E第二章「制御構造」\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eプログラミングであるあるの制御構文などの説明メイン。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E比較には===を使って型も含めて厳密に比較する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E比較時の型変換にに注意する\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Elet amount = '100';\nif(amount &gt; 50){ \u002F\u002F '100'が数値に変換される\n  console.log(\"success\");\n}else{\n  console.log(\"error\");\n}\n\u002F\u002F \"success\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E第三章「関数と関数型プログラミング」\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E通常の関数、無名関数、高階関数、ラムダ、クロージャ、スプレッド演算子、ホイスティング、例外の説明。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eクロージャはprivateな仕組みを作ったり堅いオブジェクト。\u003Cbr \u002F\u003E関数の中で宣言した変数は、外部からアクセスできない特別な環境が作られる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPHPにもクロージャがあったけど、無名関数のことをクロージャみたいに言ってる記述を見たことがあるけど、あれって合ってるのかな？\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst character = () =&gt; {\n  let hp = 100;\n  return {\n    damege : (val) =&gt; {\n      hp -= val;\n    },\n    add : (val) =&gt; {\n      hp += val;\n    },\n    showState : () =&gt; {\n      console.log(hp);\n    }\n  }\n}\nconst character = () =&gt; {\n  let hp = 100;\n  return {\n    damege : (val) =&gt; {\n      hp -= val;\n    },\n    add : (val) =&gt; {\n      hp += val;\n    },\n    showState : () =&gt; {\n      console.log(hp);\n    }\n  }\n}\nconst takashi = character();\nconsole.log(takashi.hp); \u002F\u002F直接アクセスできない\n--------------------\nundefined\nconsole.log(takashi.showState());\n\u002F\u002F 100\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E\u003Cbr \u002F\u003E直接hpにはアクセスできないが、関数から返された関数から（内部）はアクセスできる。\u003Cbr \u002F\u003Eこれを使ってprivateなメソッドも作成できる。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eホイスティングとは\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econsole.log(hoge);\nconsole.log(fuga);\nvar hoge;\nlet fuga;\n---------------\nundefined\n\"error\"\n\"ReferenceError: Cannot access 'fuga' before initialization\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Evarで宣言した場合は宣言箇所より前で宣言されることになるので、undefinedになる。\u003Cbr \u002F\u003Eこれを防ぐには\u003C\u002Fp\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Evarを使わない\u003C\u002Fli\u003E\u003Cli\u003Estrictモードを使う\u003C\u002Fli\u003E\u003Cli\u003E宣言箇所を使用箇所より前にする\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E昔の書き方では無名関数を定義してすぐに実行するということをやっていた。これは全ての変数をローカルスコープとして定義するため。（宣言のカプセル化）\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F\u002F 昔流 jQueryなどもこれで書かれていた。\n(function(){\n  var localValue = \"ローカル\";\n})();\nconsole.log(localValue); \u002F\u002F not defined\n\u002F\u002F 今流\n{\n  let _localValue = \"ローキャル\";\n}\nconsole.log(_localValue); \u002F\u002F not defined\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E第四章「オブジェクト指向プログラミング」\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EJavaScriptのclassはJavaなどのclassとは根底が違う。\u003Cbr \u002F\u003Eそもそもプロトタイプについては知らないことが多かった。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオブジェクトを作成するときに同じ関数は、プロトタイプを設定すると全てのオブジェクトで１つの関数を共用できる。\u003Cbr \u002F\u003Eこのプロトタイプは、内部スロット(internal slot)となり、プログラマ視点では操作できず、内部的に操作されるオブジェクト属性となる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst commonProp = {\n  sayHello(){\n    console.log(`こんにちは${this.name}です。性別は${this.gender}です。`);\n  }\n}\nfunction createUser(name,gender){\n  \u002F\u002F オブジェクトを返す\n  const user = {\n    name : name,\n    gender, \u002F\u002Fこんな書き方もできますね\n    \u002F\u002F ここを共通化する。\n    \u002F*\n    sayHello : function() {\n      console.log(`こんにちは${name}です。`);\n    }\n    *\u002F\n  }\n  \u002F\u002F プロトタイプを設定する\n  Object.setPrototypeOf(user,commonProp);\n  return user;\n}\nconst takashi = createUser(\"たかし\",\"男\");\nconst kosei = createUser(\"こうせい\",\"男\");\ntakashi.sayHello();\nkosei.sayHello();\n--------------------\n\"こんにちはたかしです。性別は男です。\"\n\"こんにちはこうせいです。性別は男です。\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EtakashiのオブジェクトでsayHelloがないのでプロトタイプで検索される、これが見つかるまで深く探される（プロトタイプチェーン)Javaで言えば継承みたいな感じ？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオブジェクトを生成するのにオブジェクトを返却する関数を書いていたが、これをnewで行うことができる。クラスに使うものではなくオブジェクトの生成に使う。コンストラクタ関数です。コンストラクタ関数にプロトタイプも設定できます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F\u002F コンストラクタ\nfunction Human(name){\n  this.name = name;\n}\n\u002F\u002Fプロトタイプの設定\nHuman.prototype.greet = function(){\n  console.log(`私の名前は、${this.name} です。`);\n}\n\u002F\u002Fオブジェクトの生成\nconst takashi = new Human(\"たかし\");\ntakashi.greet(); \u002F\u002F \"私の名前は、たかし です。\"\nconst kosei = new Human(\"こうせい\");\nkosei.greet(); \u002F\u002F \"私の名前は、こうせい です。\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EJavaScriptのクラスは上記のコンストラクタ関数が根底にある。つまり他のオブジェクト指向言語とは違う。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eclass構文を使うサンプル\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F\u002F サブクラスも継承できる思想としてはプロトタイプチェーン\nclass Human{\n  \u002F\u002F コンストラクタ\n  constructor(name,age){\n    this.name = name;\n    this.age = age;\n  }\n  \u002F\u002Fプロトタイプ\n  greet(){\n    console.log(`私は${this.name}と申す。年は${this.age}でござる。`);\n  }\n  \u002F\u002F ゲッター。メソッドをプロパティのようにアクセスが可能。\n  get humanProp(){\n    return `${this.name}.${this.age}`;\n  }\n}\nconst takashi = new Human(\"たかし\",15);\ntakashi.greet(); \u002F\u002F 私はたかしと申す。年は15でござる。\nconsole.log(takashi.humanProp); \u002F\u002F たかし.15\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eまたthisについての説明。\u003Cbr \u002F\u003Ejsの場合はthisのクセが強い。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E例えばコールバック関数の中で、その外側の変数にアクセスしようとするとundefinedになる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst customer = {\n  anc : \"様\",\n  customers : &#91;\"飯田\",\"吉野\",\"山岸\",\"新山\"],\n  showCustomers(){\n    this.customers.forEach(function(customer){\n      console.log(`${customer}${this.anc}`);\n    });\n  }\n}\ncustomer.showCustomers();\n\u002F\u002F thisはundefined\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eラムダを使うことでthisを束縛できます。用語はさておき、thisを使っても外側の変数にアクセスできることが確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst customer = {\n  anc : \"様\",\n  customers : &#91;\"飯田\",\"吉野\",\"山岸\",\"新山\"],\n  showCustomers(){\n    this.customers.forEach((customer) =&gt; {\n      console.log(`${customer}${this.anc}`);\n    });\n  }\n}\ncustomer.showCustomers();\n\u002F\u002F \"飯田様\" \"吉野様\" \"山岸様\" \"新山様\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E続きはまた今度。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E説明は簡潔ですが、ゆえにわかりやすい。\u003Cbr \u002F\u003Eこれからプログラミング言語を始めようって人には向いていない。\u003C\u002Fp\u003E\n","\u003Cp\u003E先日発売された「JavaScriptモダンプログラミング完全ガイド　堅牢なコードを効率的に開発できる！」を買いましたので、自分用のメモと感想など。 第一章「値と変数」 型について、オブジェクトについての説明がある。 名前&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F01\u002F01\u002Fjavascriptmoden\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E「JavaScriptモダンプログラミング完全ガイド　堅牢なコードを効率的に開発できる！」を買った\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",70,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1111","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1111","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1111\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1111","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1111","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1111",1098,"https:\u002F\u002Fvolkruss.com\u002F?p=1098","gamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fgamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity\u002F","GameCreatorでモバイル向けのUIを作成する | Unity","\n\u003Cp\u003EGameCreatorではモバイルアプリを作る時のUIがよくわかりません。\u003Cbr \u002F\u003Eどうやら\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fdocs.piveclabs.com\u002Fgame-creator\u002Faccessibility-module-for-game-creator\" data-type=\"URL\" data-id=\"https:\u002F\u002Fdocs.piveclabs.com\u002Fgame-creator\u002Faccessibility-module-for-game-creator\" target=\"_blank\"\u003EAccessibility Module for Game Creator\u003C\u002Fa\u003Eというモジュールがあり、それを使うと簡単に設定できそうですが、ちょっと作れそうだったんで作ってみました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eメニュー &gt; Game Creator &gt; Preference からGeneralを選択して、Touchstickを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.20.53-1024x387.png\" alt=\"\" class=\"wp-image-1104\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EPrefab Touchstickは初期でnoneになっていますが、選択しようとするとTouchStickが選択できます。\u003Cbr \u002F\u003EついでにForceDisplayInEditorにチェックを入れておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこのPrefabはGameCreator &gt; Core &gt; Resources &gt; GameCreator &gt; Input　フォルダにあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ejoystickが設置されただけのCanvasで、先程のGeneralの設定を行うことで即導入することができます。\u003Cbr \u002F\u003EこのPrefabを修正してモバイル向けのUIを作ってみます。\u003Cbr \u002F\u003E移動に関しては既存のjoystickで良いとして、ボタンを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.27.35-1024x476.png\" alt=\"\" class=\"wp-image-1106\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E私はこんな感じでボタンを設置しました。ボタンはGameCreatorのButtonを使用することでActionやConditionを設定できます。\u003Cbr \u002F\u003E例えば、この銃を構えるボタンはこんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.29.41.png\" alt=\"\" class=\"wp-image-1107\" width=\"479\" height=\"224\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのPrefabから詳細なActionを指定することは難しいので、LocalVariableを利用します。これなら文字列でActionやらConditionやらを発火できますので、Playerに設定されたLocalVariableにアクセスできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerにはLocalVariablesを追加しておき、文字列で管理することでPrefabで設定しておいたActionやConditionも発火させることができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに、ActionやConditionのTypeはGameObjectになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-22.32.00.png\" alt=\"\" class=\"wp-image-1108\" width=\"376\" height=\"239\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのようにTouchStickとLocalVariablesを利用することでモバイル向けのUIを作成することができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにAndorid端末で実行してみましたが、正しく操作できました。\u003C\u002Fp\u003E\n","\u003Cp\u003EGameCreatorではモバイルアプリを作る時のUIがよくわかりません。どうやらAccessibility Module for Game Creatorというモジュールがあり、それを使うと簡単に設定できそうですが、ち&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fgamecreator%e3%81%a7%e3%83%a2%e3%83%90%e3%82%a4%e3%83%ab%e5%90%91%e3%81%91%e3%81%aeui%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-unity\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EGameCreatorでモバイル向けのUIを作成する | Unity\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",1132,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1098","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1098","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1098\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1132","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1098","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1098","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1098",1101,"https:\u002F\u002Fvolkruss.com\u002F?p=1101","dialogsystemuibuttononuse","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fdialogsystemuibuttononuse\u002F","DialogSystemでUIのButtonからOnUseを発火させる","\n\u003Cp\u003Eちょっと迷ったのでメモします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eやり方は簡単でボタンにSelectorをつけて、ボタンのコールバックメソッドにてUseCurrentSelectionメソッドを呼ぶ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-14-21.58.22.png\" alt=\"\" class=\"wp-image-1102\" width=\"539\" height=\"154\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれだけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUse Keyで指定したボタンをキーボードで入力していましたが、これなら、buttonをクリックして同じことができるので、モバイル向けに作成できそうです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-16.27.20.png\" alt=\"\" class=\"wp-image-1060\" width=\"579\" height=\"586\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003Eちょっと迷ったのでメモします。 やり方は簡単でボタンにSelectorをつけて、ボタンのコールバックメソッドにてUseCurrentSelectionメソッドを呼ぶ。 これだけです。 Use Keyで指定したボタンをキー&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F14\u002Fdialogsystemuibuttononuse\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EDialogSystemでUIのButtonからOnUseを発火させる\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1101","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1101","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1101\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1101","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1101","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1101",1091,"https:\u002F\u002Fvolkruss.com\u002F?p=1091","gamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F13\u002Fgamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b\u002F","GameCreatorのShooterモジュールの武器の角度を調整する","\n\u003Cp\u003Eデフォルトで使っていると何か不具合がある可能性があります。私の場合はピストルの銃口がプレイヤーを向いていました。\u003Cbr \u002F\u003EAimの方向に飛ばす場合は問題ないかもしれませんが、銃口の方向に飛ばす場合は修正する必要があります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E自分用の武器を作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eshooterモジュールのサンプルを有効にすると、４つの武器が利用できるようになるので、これをコピーして自分だけの武器にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.13.28-1024x178.png\" alt=\"\" class=\"wp-image-1093\" width=\"536\" height=\"93\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ERevolverを複製してMyRevolverにしておきました。\u003Cbr \u002F\u003EPlayerはこれを使うようにします。DrawWeaponをMyRevolerにすればOKです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.16.52.png\" alt=\"\" class=\"wp-image-1094\" width=\"384\" height=\"79\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E角度を調整する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E角度を調整します。ゲームを実行すると銃口が確認できます。銃口は赤丸の部分です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.16.34-1024x567.png\" alt=\"\" class=\"wp-image-1095\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれを修正するにはMyRevolver.asset（ピストルアイコン）をクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eすると3D Modelというところがあるので、Prefab Rotationを修正。\u003Cbr \u002F\u003Eゲーム実行中でも編集が反映されるので、確認しつつ位置を修正します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-13-18.15.40.png\" alt=\"\" class=\"wp-image-1096\" width=\"543\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eデフォルトで使っていると何か不具合がある可能性があります。私の場合はピストルの銃口がプレイヤーを向いていました。Aimの方向に飛ばす場合は問題ないかもしれませんが、銃口の方向に飛ばす場合は修正する必要があります。 自分用&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F13\u002Fgamecreator%e3%81%aeshooter%e3%83%a2%e3%82%b8%e3%83%a5%e3%83%bc%e3%83%ab%e3%81%ae%e6%ad%a6%e5%99%a8%e3%81%ae%e8%a7%92%e5%ba%a6%e3%82%92%e8%aa%bf%e6%95%b4%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EGameCreatorのShooterモジュールの武器の角度を調整する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1091","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1091","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1091\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1091","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1091","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1091",1056,"https:\u002F\u002Fvolkruss.com\u002F?p=1056","%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F10\u002F%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91\u002F","セールでDialogSystemを買ったのでメモ【Unity】","\n\u003Cp\u003Eこの前のセールで安くなっていたので買ってみました。\u003Cbr \u002F\u003Eとりあえず\u003Ca href=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue_system\u002Fmanual2x\u002Fhtml\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue_system\u002Fmanual2x\u002Fhtml\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Eドキュメント\u003C\u002Fa\u003Eがあるのですが、YouTubeにも動画あってこっちのほうがわかりやすい\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"Dialogue System for Unity 2.x Quick Start\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FrCVGwSIDI-4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EUIを簡単に変更する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EデフォルトのUIってあんまり良いと思わないので変更します。\u003Cbr \u002F\u003Eある程度用意されているので、DialogManagerのDialogue Systemを見ると、DialogueUIがありそこに用意されてるPrefabを設定すると簡単に変更できる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにPrefabは以下にいくつかあるので好みのものを使ってみると良いと思います。\u003Cbr \u002F\u003EAssets\u002FPlugins\u002FPixel Crushers\u002FDialogue System\u002FPrefabs\u002FStandard UI Prefabs\u002FTemplates\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-18.39.36.png\" alt=\"\" class=\"wp-image-1063\" width=\"571\" height=\"363\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E会話発生時のボタンを変更する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ESelectorのUseKeyを変更する(デフォルトはスペース)\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-16.27.20.png\" alt=\"\" class=\"wp-image-1060\" width=\"444\" height=\"450\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EちなみにこのSelectAtで会話の発生トリガーを変更できます。今回は画面の真ん中にきたときに会話発生可能にしています。（デモシーンと同じ）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eサンプルのクエストを見てみる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずはサンプルのシーンを実行してどんな動きをするか見ておきます。\u003Cbr \u002F\u003Eとりあえずサンプルシーンを見ると、いくつかクエストが用意されています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-21.23.26-1024x206.png\" alt=\"\" class=\"wp-image-1066\" width=\"407\" height=\"81\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの一番上のクエストの詳細をみると色々書いてありますが、大事なのはStateだと思います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.43.41.png\" alt=\"\" class=\"wp-image-1073\" width=\"473\" height=\"360\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E初期値はunassingedとなっており、まだアサインされていない状態ですね。\u003Cbr \u002F\u003E他にもactiveやsuccessなどあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E会話は３つに分岐していて、クエストを受け取っていない時、クエスト実行中の時、クエスト完了の時、\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-21.46.22.png\" alt=\"\" class=\"wp-image-1068\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E真ん中のAnyLuckDownloading the I..と書かれているところの、Conditionsに以下のような記載があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECurrentQuestState(&#8220;Get the Launch Codes&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E見た感じではGet the Launch Codesというクエストがactiveの時にフローがいくようになっている。\u003Cbr \u002F\u003EさらにIll find the password. [E&#8230;となっているところのScriptには以下のような記載があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESetQuestState(&#8220;Get the Launch Codes&#8221;, &#8220;active&#8221;);\u003Cbr \u002F\u003EVariable[&#8220;Alert&#8221;] = &#8220;Mission: Get the Launch Codes&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EGet the Launch Codesというクエストをactiveにしています。\u003Cbr \u002F\u003Eこのようにしてスクリプトを通してクエストを制御しているようですね。というわけで作成してみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにこのCurrentQuestStateというのは関数のようです。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue-system-documentation\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.pixelcrushers.com\u002Fdialogue-system-documentation\u002F\" target=\"_blank\"\u003Eドキュメント\u003C\u002Fa\u003Eを見ると、Quest-Related Lua Functionsという見出しに関数の説明があります。Luaという言語らしいですね（cocos2dxかなんかであったような・・・）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eクエストを作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eどんなクエストにしようか考えたのですが、サンプルっぽくパスワードをゲットするみたいなクエストを作ってみます。Get the Codeというシンプルなクエストです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.16.49-1024x190.png\" alt=\"\" class=\"wp-image-1071\" width=\"613\" height=\"113\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E同じようにクエスト未実施と実行中と完了の3つ子要素を作っておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.22.00.png\" alt=\"\" class=\"wp-image-1072\" width=\"538\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエスト未実施のConditionsに以下を設定(クエストがアサインされてない場合のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;unassigned&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eクエスト実行中のConditionsに以下を設定(クエストがactiveの時のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続いてそれぞれに子ノードを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.52.18.png\" alt=\"\" class=\"wp-image-1075\" width=\"498\" height=\"216\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエストを開始します。のScriptに以下を設定(クエストのStateをactiveに変更)\u003Cbr \u002F\u003ESetQuestState(&#8220;Get the Code&#8221;, &#8220;active&#8221;);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれでクエストを開始します。のあとはクエストがactiveになりパスワードを見つけてくれというふうになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に新しいConversationsを作成します。+ボタンから新規作成できます\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.56.24.png\" alt=\"\" class=\"wp-image-1078\" width=\"407\" height=\"187\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eパスワードを見つけたというノードのScriptを以下に設定(クエスト成功)\u003Cbr \u002F\u003ESetQuestState(&#8220;Get the Code&#8221;, &#8220;success&#8221;);\u003Cbr \u002F\u003EConditionsに以下を設定(クエスト実行中のみ実施)\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;active&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に先程のConversationsに戻って、クエスト完了の子ノードを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-22.59.01.png\" alt=\"\" class=\"wp-image-1079\" width=\"426\" height=\"179\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eクエスト完了のConditionsに以下を設定(クエスト完了というか成功の場合）\u003Cbr \u002F\u003ECurrentQuestState(&#8220;Get the Code&#8221;) == &#8220;success&#8221;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれでクエストの基本的な仕組みはできました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにコードを発見する時のConversationは以下のようにすればOKです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.23.53.png\" alt=\"\" class=\"wp-image-1081\" width=\"430\" height=\"349\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eおまけ、GameCreatorのActionを発火させる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E会話中にキャラクターが動いてしまうのを制御します。\u003Cbr \u002F\u003EGameCreatorを使っている場合はActionのTimeScaleを0にすることで停止できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eといわで、停止と再生のアクションのみを持つゲームオブジェクトを作成しておきます。\u003Cbr \u002F\u003EそれぞれTimeScaleを0にするのと1にするActionを持たせます\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.26.13.png\" alt=\"\" class=\"wp-image-1084\" width=\"380\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EそしてプレイヤーにつけているDialog System Eventsを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.29.23.png\" alt=\"\" class=\"wp-image-1085\" width=\"472\" height=\"400\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E会話中は停止のActionを持ったゲームオブジェクトのActions.Executeを実行することで、Actionが実行されます。ここでTimeScaleを0にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして会話が終了したら再生のゲームオブジェクトのActions.Executeを実行してTimeScaleを1に戻す。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-10-0.34.30-1024x483.png\" alt=\"\" class=\"wp-image-1087\" width=\"417\" height=\"196\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eこの前のセールで安くなっていたので買ってみました。とりあえずドキュメントがあるのですが、YouTubeにも動画あってこっちのほうがわかりやすい UIを簡単に変更する デフォルトのUIってあんまり良いと思わないので変更しま&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F10\u002F%e3%82%bb%e3%83%bc%e3%83%ab%e3%81%a7dialogsystem%e3%82%92%e8%b2%b7%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e3%83%a1%e3%83%a2%e3%80%90unity%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EセールでDialogSystemを買ったのでメモ【Unity】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1056","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1056","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1056\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1056","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1056","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1056",1031,"https:\u002F\u002Fvolkruss.com\u002F?p=1031","%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F09\u002F%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga\u002F","色々試した結果ゲームツールキット系アセットはGameCreatorが良かった","\n\u003Cp\u003Eなにと比較してっていうと色々問題がありそうなので、色々試した結果これがおすすめっていうアセットを紹介します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EGame Creator\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-06-18.17.12-1024x599.png\" alt=\"\" class=\"wp-image-1034\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftools\u002Fgame-toolkits\u002Fgame-creator-89443?locale=ja-JP\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftools\u002Fgame-toolkits\u002Fgame-creator-89443?locale=ja-JP\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそこそこ色々使ってきましたが、このアセットが今のところ最強かなと思います。\u003Cbr \u002F\u003E本格的に作り込んでいくには\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E別途モジュールの購入が必要\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003Eになりますが、それでもこれがオススメです。結果として自分の納得のいくゲーム制作にはこれが当てはまった。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cstrong\u003EGame Creatorでゲームを作るには、Action Conditions Triggerを使う必要があります。\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E実は銃の発射も自動では作られません。しっかりこの3つを使用して自分で設定して作成します（銃を使うにはShooterモジュールを別途購入する必要があります）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E全て御膳立てがあるアセットの場合はちょっとした変更にも右往左往しますし、余計な機能があったりしますが、これは自分である程度設定を行う必要があります。\u003Cbr \u002F\u003E０ではないですが１０くらいからゲーム制作を始める感じですが、\u003Cstrong\u003E結果的\u003C\u002Fstrong\u003Eに学習コストも低いと思います。（プログラムを書く必要はありません）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E銃を打つのに必要なこと\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-11.00.23-1024x748.png\" alt=\"\" class=\"wp-image-1039\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えばGameCreatorで銃を使ったゲームを作りたいならば、まずはShooterモジュールを別途購入します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレイヤーにPlayerShooterをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.54.40.png\" alt=\"\" class=\"wp-image-1046\" width=\"559\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E普通のゲームキット系のアセットだと標準で銃を構えるなどのキーが設定されていますが、GameCreatorは自分で設定します。\u003Cbr \u002F\u003EPlayerにトリガーをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-11.08.37.png\" alt=\"\" class=\"wp-image-1041\" width=\"589\" height=\"206\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのトリガーを追加したらChangeTriggerボタンを押して、On Key DownにしてKeyCodをXにします。\u003Cbr \u002F\u003Eそして一番左のアクション追加ボタンを押すと、子要素にアクションが追加されます。\u003Cbr \u002F\u003Eこれは、Xキーを押した時にアクションを実行するという意味になります。これがトリガーとアクションです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E子要素に追加されたActionsには以下のような設定をします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.47.48.png\" alt=\"\" class=\"wp-image-1045\" width=\"490\" height=\"204\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれだけではまだ銃を発射できません。\u003Cbr \u002F\u003Eただ、TriggerとActionの関係はなんとなくわかると思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eプレイヤーにもう一つTriggerをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.56.10.png\" alt=\"\" class=\"wp-image-1047\" width=\"505\" height=\"179\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度はZキーを押した時にConditionsを発火させます。\u003Cbr \u002F\u003EこれもActionの時と同じように自動的に子要素にConditionsが追加されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EConditionsは簡単に言えばIF文で、条件にヒットした場合はThenに登録されたActionが実行されます。\u003Cbr \u002F\u003E武器を装備していない場合は、カメラを切り替えてピストルを描画してエイムを表示などします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.57.39.png\" alt=\"\" class=\"wp-image-1048\" width=\"498\" height=\"221\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-08-23.58.14-802x1024.png\" alt=\"\" class=\"wp-image-1049\" width=\"497\" height=\"635\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E武器を装備している場合はElseに登録されたActionsが実行されます。\u003Cbr \u002F\u003Eカメラを変更して武器をしまって、プレイヤーが走れるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fスクリーンショット-2020-12-09-0.05.57.png\" alt=\"\" class=\"wp-image-1051\" width=\"461\" height=\"399\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eholsterはピストルなどをしまうために腰につけているあれです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EGameCreatorはロジックを組み立てる必要があるけど使いやすい\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E銃を使うにもロジックを組み立てる必要があるが、銃を構えている時のカメラの設定や、プレイヤーが走れるのかなど、さまざまな設定を行うことができる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eモジュールを別途買うことでできることが増えていくというのは、お金がかかるであまり良いとは思えないが、モジュール販売しているアセットは他にもあるし、まぁ普通なのかな。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EYoutubeにはもっと素晴らしいチュートリアル動画もあるので参考になります！ドキュメントを見るより動画見た方が早いです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"#3 Crouch Tutorial - Unity Game Creator Tips &amp; Tricks\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FiRQbJxlaZOE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれは、しゃがむ動作の導入です。これもTriggerとActionを使います。\u003C\u002Fp\u003E\n","\u003Cp\u003Eなにと比較してっていうと色々問題がありそうなので、色々試した結果これがおすすめっていうアセットを紹介します。 Game Creator https:\u002F\u002Fassetstore.unity.com\u002Fpackages\u002Ftool&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F12\u002F09\u002F%e8%89%b2%e3%80%85%e8%a9%a6%e3%81%97%e3%81%9f%e7%b5%90%e6%9e%9c%e3%82%b2%e3%83%bc%e3%83%a0%e3%83%84%e3%83%bc%e3%83%ab%e3%82%ad%e3%83%83%e3%83%88%e7%b3%bb%e3%82%a2%e3%82%bb%e3%83%83%e3%83%88%e3%81%afga\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E色々試した結果ゲームツールキット系アセットはGameCreatorが良かった\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1031","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1031","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1031\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1031","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1031","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1031",987,"https:\u002F\u002Fvolkruss.com\u002F?p=987","%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F21\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91\u002F","【Unity】Game Kit Controller 【ダイアログ】","\n\u003Cp\u003E会話機能を使ってみます。Unityでは標準のフォントだと日本語がWebGLで表示されない問題があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた、メッセージ機能もスクラッチで作ろうとなると大変です。Fungusなどを使うとすっごく楽ですが、今回はGame Kit Controllerでのダイアログシステムの利用メモになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E多分メッセージ機能だけで言えば、Fungusの方が使いやすいし無料だしいいと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は3DオブジェクトのCapsuleに会話機能をつけようと思います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.30.56.png\" alt=\"\" class=\"wp-image-989\" width=\"414\" height=\"203\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EまずはCapsuleを追加します。次にお馴染みのPrefabsManagerからDialogSystem \u003E DialogSysytem(With answers for Player)を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.34.29.png\" alt=\"\" class=\"wp-image-990\" width=\"435\" height=\"252\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E追加したらDialog System (With answers for Player)をCapsuleの子要素にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に、Dialog Ownerを設定する必要があります。これはCapsuleでよいです。\u003Cbr \u002F\u003EDialog System (With answers for Player)のDialog　Content　System（Script)から設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-16.42.15.png\" alt=\"\" class=\"wp-image-991\" width=\"450\" height=\"150\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでCapsuleと話すことができるようになります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eメッセージをカスタマイジングする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度はPrefabsManagerからDialog System (Empty)を追加して、先ほどと同じ手順でCapsuleの子要素とオーナーの設定をおこないます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にDialog Content Systemにて会話の設定をしていきます。\u003Cbr \u002F\u003E今回はカプセルとの会話というのを作っていきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.29.01-939x1024.png\" alt=\"\" class=\"wp-image-993\" width=\"539\" height=\"587\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EDialogsListに会話内容を書いていきます。\u003Cbr \u002F\u003E会話の名前と、発言者の名前、そして発言内容を記載していきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.48.56.png\" alt=\"\" class=\"wp-image-994\" width=\"529\" height=\"411\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次の会話に移るにはNextLineSettingsを修正します。\u003Cbr \u002F\u003EChange To Dialog Info IDにチェックを入れて、Dialog Info ID To Activateに移動した会話のIDを指定します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003Eこの時にIDはできるだけ連番管理したほうがよいです。\u003Cbr \u002F\u003E例えば会話2個ある状態で、IDを2で指定するとエラーになります。\u003Cbr \u002F\u003Eというのも、会話の1個目のIDは0なので、ID2というのは配列で言うところのout of boundみたいな感じのエラーになります。とりあえずIDが会話数-1に収まっていれば良いと思います。\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.50.20.png\" alt=\"\" class=\"wp-image-995\" width=\"504\" height=\"128\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にID1の会話を作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAdd Lineから次の会話を作成して、以下のようにIDを設定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-17.56.05.png\" alt=\"\" class=\"wp-image-996\" width=\"468\" height=\"411\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで会話が流れるのを確認できました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E選択肢を追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次は選択肢を追加します。OKとNGの選択肢を用意して選択した結果から、発言ルート(ID)を変更します。具体的にはOKの時はID3、NGの時はID4というようになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E全体図はこんな感じです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.27.22.png\" alt=\"\" class=\"wp-image-999\" width=\"394\" height=\"306\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E選択肢のDialogContentは空にしておいて、Dialog Lines Listの中に選択肢を入れます。\u003Cbr \u002F\u003E選択肢はこんな感じになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.29.35-611x1024.png\" alt=\"\" class=\"wp-image-1001\" width=\"284\" height=\"475\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENext Line Settingsで次の会話IDを指定しています。OKの時は3、NGの時は4のような感じですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E会話を終了する時はIs End Of Dialogにチェックをつけます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-20.50.46.png\" alt=\"\" class=\"wp-image-1002\" width=\"338\" height=\"390\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E会話にてイベントを発火させる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度は会話にてイベントを発生させます。\u003Cbr \u002F\u003E現状わかっているドアのオープンイベントをOKボタンを押した時に発生。というのをやってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E結構かんたんにできて、OKの時のEventSystemSettingにメソッドを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-21.38.14.png\" alt=\"\" class=\"wp-image-1005\" width=\"493\" height=\"492\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでOKを選択した時にドアが開きます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E会話時のカメラのポジションについて\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECamera PositionのTransformを調整します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-21-23.07.28-1024x409.png\" alt=\"\" class=\"wp-image-1007\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E会話機能を使ってみます。Unityでは標準のフォントだと日本語がWebGLで表示されない問題があります。 また、メッセージ機能もスクラッチで作ろうとなると大変です。Fungusなどを使うとすっごく楽ですが、今回はGame&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F21\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%80%90%e3%83%80%e3%82%a4%e3%82%a2%e3%83%ad%e3%82%b0%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller 【ダイアログ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F987","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=987","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F987\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=987","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=987","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=987",973,"https:\u002F\u002Fvolkruss.com\u002F?p=973","%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F20\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F","【Unity】Game Kit Controller ドアを開く【メモ】","\n\u003Cp\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E鍵を使ってドアを開ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EPrefabsManagerには便利な検索機能があります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-20.35.38.png\" alt=\"\" class=\"wp-image-975\" width=\"499\" height=\"171\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eここでdoorと検索して、Add &#8211; Trigger Rotating Doorをクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこれでTrigger Moving Doorsが追加されます。デフォルトでは近寄ると開いて遠ざかると閉まるという自動ドア的なものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはLocked SettingのLockedにチェックを入れます。\u003Cbr \u002F\u003Eこれで近寄っても鍵がかかった状態になっているので、開きません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にPrefabsManagerからInventory(Quest Objects)を選択してSimpleKey(Inventory)を作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続けてInventory(Objects To Use Inventory Empty)からUse Inventory Object Prefabs (Menu)を作成します。\u003Cbr \u002F\u003E追加したUseInventoryObjectPrefabs(Menu)をドアの近くに設置します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EおそらくこれはメニューからInventoryObjectを利用した時にイベントを発生させるものですね。このコライダーの中でUseすることで発生するようです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-23.37.55.png\" alt=\"\" class=\"wp-image-978\" width=\"456\" height=\"305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E続いてPrefabsManagerを選択してインスペクタからMissionSysytemを開き、Add – ObjectiveSystemTriggerをクリックすると、ヒエラルキーにObjective System Triggerが作成されます。\u003Cbr \u002F\u003E続けてObjective Event SystemのTask1をUnLockDoorにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続いてUse Inventory Object Prefab (Menu)のUseInventoryObject(Script)のObject Solved Event Setingを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-0.51.19-1024x393.png\" alt=\"\" class=\"wp-image-980\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで実行して、SimpleKeyを拾ってドアの前でInventory画面から、SimpleKeyを選択してUseをするとドアが開きます。（驚）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.21.00.png\" alt=\"\" class=\"wp-image-985\" width=\"519\" height=\"205\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスイッチを押してドアを開ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今度はスイッチを押してドアを開けます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPrefabManagerからSimpleSwitchを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでくると動画を見なくてもなにをすればいいのかがわかってきますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E追加したSImpleSwitchのSimpleSwitch(Script)のEventSettingsを以下のように設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.16.06-1024x409.png\" alt=\"\" class=\"wp-image-983\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあとはプレイヤーがスイッチを押せばドアが開きます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-20-1.19.14.png\" alt=\"\" class=\"wp-image-984\" width=\"541\" height=\"371\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E参考：https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Qflu_jIZgsw&amp;list=PLYVCbGEtbhxVjZ9C41fwTDynTpVkCP9iA&amp;index=24 鍵を使ってド&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F20\u002F%e3%80%90unity%e3%80%91game-kit-controller-%e3%83%89%e3%82%a2%e3%82%92%e9%96%8b%e3%81%8f%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller ドアを開く【メモ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F973","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=973","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F973\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=973","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=973","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=973",932,"https:\u002F\u002Fvolkruss.com\u002F?p=932","%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F19\u002F%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F","【Unity】Game Kit Controller【メモ】","\n\u003Cp\u003E買いました。50$なので結構高かったです。\u003Cbr \u002F\u003Eメモします。とりあえず基本的なところ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E基本操作\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実行中に色々ボタンを押すと、色々おきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EH キャラクターのモード変更\u003Cbr \u002F\u003EI Inventoryを開く\u003Cbr \u002F\u003EJ プレイヤーコントロールモード\u003Cbr \u002F\u003EESC メニュー画面\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayer And Game ManagementのInputManagerのPlayerControllerのInputListのAxesにプレイヤーの操作に関しては設定してあります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.54.43.png\" alt=\"\" class=\"wp-image-966\" width=\"384\" height=\"387\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E不要ならばActionEnabledのチェックを外してしまいましょう\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EInventoryMenuを開くとかも設定があるので、要チェックですな設定ですな\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-0.07.45.png\" alt=\"\" class=\"wp-image-967\" width=\"501\" height=\"504\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eプレイヤーを作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eメニュー &gt; Game Kit Controller &gt; Create New Character\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EモデルはHumaroidのものを指定する。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EプレイヤーのModeを設定する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eデフォルトでは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerControllerの中のPlayer States Manager inspectorを見る。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-15-22.22.59.png\" alt=\"\" class=\"wp-image-933\" width=\"226\" height=\"242\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのIsCurrentStateが現在のモードになります。らしいのですが\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E現状よくわかってない。\u003C\u002Fspan\u003E\u003Cbr \u002F\u003Eとりあえず並び順を一番上にしたやつがデフォルトのモードになりました??\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E色々設定してみると変化します。。\u003Cbr \u002F\u003Eちなみにプレイ中はHキーで変更できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EMode Enabledにチェックを外すとそのモードは使用できなくなります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EMixamoのアニメーションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E\u003Cstrong\u003Eこれ重要です\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EMixamoのアニメーションをアセットに含めることができないそうでGithubからダウンロードする必要があります。meleeなどはこれをしないと動きません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsr3888\u002FGKC-Public-Repository\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fsr3888\u002FGKC-Public-Repository\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EZipをダウンロードして解凍して、Action System Animations Examples (from Mixamo).unitypackageをインポートして、Unityを再起動します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EInventoryを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考 \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=X8mFBPzsKDg\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=X8mFBPzsKDg\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E在庫システムというと壮大だが、また持ち物リストですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerControllerのInventoryManagerのInitialInventoryListの中に初期持ち物リストがあります。Oボタンでアイテムの有効無効、Eボタンで装備状態を設定する。\u003C\u002Fp\u003E\n\n\n\u003Ch4\u003E新規Objectの追加\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003EPlayer And Game Management の Inventory の Inventroy List Manager の CategoryInventoryList をクリック。AddCategoryでカテゴリを追加して、NewCategoryができます。その中にInventoryListがあるのでそこでAddObjectをクリック。New Objectが追加される。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に、Objectのモデルをヒエラルキーに召喚して、空のゲームオブジェクトを作成して親にします。空のゲームオブジェクトのレイヤーをinventoryにします。次にboxcoliderを追加します。コライダーはObjectのモデルと同じような大きさにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそこまでやったらPrefb化します。\u003Cbr \u002F\u003E続いて先ほどカテゴリーのInventoryListに追加したObjectのInventoryObjectMeshにPrefabを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EObjectInfoやNameを修正します。\u003Cbr \u002F\u003EOpenInventoryCaptureToolでモデルから撮影してアイコンを作成できます（まじすげ）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にCreateInventoryPrefabボタンを押すと、カテゴリフォルダー含めて作成されます。\u003Cbr \u002F\u003E作られたPrefabはPickUpObjectなどのスクリプトがついています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれをシーンに追加してゲームを始めると、このオブジェクトをEボタンでゲットしてInventoryに追加できることが確認できます。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eミッションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考 \u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U3e8PfDd3Cg\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U3e8PfDd3Cg\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eミッション機能でゲーム性アップです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはPrefabsMangerを追加します\u003Cbr \u002F\u003EMenu &gt; Game Kit Controller &gt; Create Prefabs Manager\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EシーンにPrefabsManagerが作成されますので、PrefabsManagerを選択してインスペクタからMissionSysytemを開き、Add &#8211; ObjectiveSystemTriggerをクリックすると、ヒエラルキーにObjective System Triggerが作成されます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E同じようなことをGame Kit Controller &gt; MainManager &gt; MissionManager &gt; Add Main Mission Managerから、Main ObjectiveManagerのInstantiate Mission System からも行えるますです。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EObjective System Triggerの子要素にObjective Triggerがあるのでそれをアクティブにしておきます。\u003Cbr \u002F\u003EついでにBoxColliderの大きさを調整しておきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にObjective Event Systemをクリックしてインスペクタからタスクを登録できます。\u003Cbr \u002F\u003E現状、Task 1というタスクがあります。\u003Cbr \u002F\u003E下の方に行くと、なにやら鍵を使ってドアを開けろとか、1000xpの報酬とか書いてあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの状態でゲームをスタートしてプレイヤーをさきほどのObjective Triggerに接触させると、ミッションが開始されるのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもうすでにミッションを開始できたので、あとは自分だけのミッションを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E物を拾うミッションを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず、PrefabsManagerからInventory(Ammo)を開きます。Add Shotgun Ammoをクリックします。\u003Cbr \u002F\u003Eこれでヒエラルキーに弾が追加されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次に追加した弾のインスペクタでPick Up Taken Event SettingのUse Event On Takenにチェックを入れます。チェックを入れると、Event On Taken()ということで取得時のイベントを設定できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ENone(Object)にObjectiveEventSystemを指定します。メソッドにはaddSubObjectiveComplete(string)を指定します。続いてTakeと記載します、\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.06.43.png\" alt=\"\" class=\"wp-image-957\" width=\"439\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのTakeはObjectiveEventSystemのTask1のNameとリンクしておりますので、こちらもTakeに変更しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.07.00.png\" alt=\"\" class=\"wp-image-958\" width=\"482\" height=\"268\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E続いてObjective Event SystemのRewaRewardEventSettingからGiveRewardOnObjectiveCompleteにチェックを入れます。これでミッションクリア時に報酬を得ることができやす！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-22.11.01-1024x135.png\" alt=\"\" class=\"wp-image-959\" width=\"427\" height=\"55\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの状態でゲームスタートしてミッションを発生させて、アイテムをとるとミッションクリアとなります。\u003Cbr \u002F\u003EミッションはOBJECTIVE LOGから確認できます。完了するとcompleteになります。\u003Cbr \u002F\u003EこれはObjectiveEventSystemのCurrentStateからも確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eミッションが完了するとMissionCompleteがTrueになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.07.04-1024x268.png\" alt=\"\" class=\"wp-image-961\" width=\"513\" height=\"134\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch4\u003E2つのSubjectを作る\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003Eもう一個アイテムを拾ったらミッション完了ということにします。\u003Cbr \u002F\u003Eやり方は同じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EObjectiveInfoListにAddObjectiveで追加します。名前をTake2にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-18-23.11.56.png\" alt=\"\" class=\"wp-image-963\" width=\"567\" height=\"99\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にまたPrefabsManagerから適当なAmmoを追加して、同じようにTake2を指定するようにPickUpTakenEventSettingを指定してTake2にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今度は2個アイテムを拾うことでミッション成功になりましたとさ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EActionSystemを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EとりあえずPrefabs &gt; Action System &gt; Examples の中に色々とアクションシステムが設定されたPrefabが存在している。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E例えば蹴飛ばして破壊できるドア\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-8.55.34.png\" alt=\"\" class=\"wp-image-969\" width=\"492\" height=\"372\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E他にもAction System Trigger (Use Chair)というものがあり、これは座るActionを行うものになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-19-12.25.32.png\" alt=\"\" class=\"wp-image-971\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003EMeleeモード時の初期武器の変更\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E頑張って探しました笑\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eヒエラルキーの検索にて&#8221;grab&#8221;で検索し、Grabbed Object Melee Attack Systemから\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.39.33.png\" alt=\"\" class=\"wp-image-1021\" width=\"374\" height=\"396\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMelee Weapons Grabbed Manger(Script)にてStart Game With Melee Weapon SettingsというのにWeapon Name To Start Gameというのがあります。どうやら名称（String)で初期武器を管理しています。今回はLightsaberに変更しましたが、なぜこの値になったかというと・・・\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.41.19-1024x453.png\" alt=\"\" class=\"wp-image-1022\" width=\"569\" height=\"251\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EすぐしたにWeaponListおちう設定項目があり、ここでPrefabと上で指定する名称を設定しています。というわけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-26-0.41.06-1024x843.png\" alt=\"\" class=\"wp-image-1024\" width=\"492\" height=\"404\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003E倒した時のうるさいアノ音をどうにかしたい\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eこのアセットの悪いところはサウンドが●●なところですかね。\u003Cbr \u002F\u003Eとにかくうるいさくてびっくりします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず気に入らないのがキャラクターを倒した時の音です。ピーン！ってやつ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.04.19-1024x393.png\" alt=\"\" class=\"wp-image-1026\" width=\"618\" height=\"237\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EdeathAudioSourceの音量を０にしちゃいました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.27.02.png\" alt=\"\" class=\"wp-image-1028\" width=\"325\" height=\"361\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-27-1.11.29.png\" alt=\"\" class=\"wp-image-1029\" width=\"281\" height=\"210\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch4\u003E余談\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003EMacのMojavaでやってたら相性が悪かったのか、Macが強制終了しててなんやこのってなっていましたがBigSurにアップデートしたら解消されました。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまだまだやることが多いので、一旦この辺で！\u003C\u002Fp\u003E\n","\u003Cp\u003E買いました。50$なので結構高かったです。メモします。とりあえず基本的なところ。 基本操作 実行中に色々ボタンを押すと、色々おきます。 H キャラクターのモード変更I Inventoryを開くJ プレイヤーコントロールモ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F19\u002F%e3%80%90unity%e3%80%91game-kit-controller%e3%80%90%e3%83%a1%e3%83%a2%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Game Kit Controller【メモ】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F932","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=932","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F932\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=932","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=932","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=932",926,"https:\u002F\u002Fvolkruss.com\u002F?p=926","vuetify%e3%81%aecards%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e8%83%8c%e6%99%af%e7%94%bb%e5%83%8f%e3%81%ae%e6%8c%87%e5%ae%9a","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F15\u002Fvuetify%e3%81%aecards%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e8%83%8c%e6%99%af%e7%94%bb%e5%83%8f%e3%81%ae%e6%8c%87%e5%ae%9a\u002F","VuetifyのCardsを使った背景画像の指定","\n\u003Cp\u003EVuetifyにはCardsというものがあります。こいつは公式のサンプルを見てもわかる通りかなり優れたものです。\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fcards\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fcards\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブログの記事一覧ページに使ってもいいし、プロフィールに使ってもいいし、様々な使い方ができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eいろいろ使い道はあるんですけど、背景画像の設定方法をメモっておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        &lt;v-card\u003E\n          &lt;v-img\n            src=\"https:\u002F\u002Fcdn.pixabay.com\u002Fphoto\u002F2016\u002F09\u002F27\u002F12\u002F55\u002Fthe-urban-landscape-1698274_1280.jpg\"\n            class=\"white--text align-end\"\n            gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n            height=\"350px\"\n          \u003E\n          &lt;v-card-title\u003E3Dプラットフォームゲームのクロスブラウザ&lt;\u002Fv-card-title\u003E\n          &lt;\u002Fv-img\u003E\n        &lt;\u002Fv-card\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ev-imgをv-cardの子要素として上げればよくて、v-imgの中にテキストとかは入れるようにすれば良いです。また画像はレスポンシブになっているのでいろいろ考慮する必要はありません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-15-17.39.05.png\" alt=\"\" class=\"wp-image-928\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        &lt;v-card\u003E\n          &lt;v-img\n            src=\"https:\u002F\u002Fcdn.pixabay.com\u002Fphoto\u002F2019\u002F05\u002F08\u002F21\u002F21\u002Fcat-4189697_1280.jpg\"\n            class=\"white--text align-end\"\n            gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n            height=\"350px\"\n          \u003E\n        &lt;v-card-title\u003Eブログ&lt;\u002Fv-card-title\u003E\n          &lt;v-card-subtitle\u003E\n            最新のゲーム開発にUnityが使われている理由。\n          &lt;\u002Fv-card-subtitle\u003E\n          &lt;\u002Fv-img\u003E\n        &lt;\u002Fv-card\u003E\n        &lt;v-card\n          color=\"#385F73\"\n        \u003E\n          &lt;v-img\n            src=\"https:\u002F\u002Fcdn.pixabay.com\u002Fphoto\u002F2019\u002F05\u002F08\u002F21\u002F21\u002Fcat-4189697_1280.jpg\"\n            class=\"white--text align-end\"\n            gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n            height=\"350px\"\n          \u003E\n          &lt;v-card-title\u003Eブログ&lt;\u002Fv-card-title\u003E\n        &lt;\u002Fv-img\u003E\n          &lt;v-card-subtitle\u003E\n            AssetStoreで大量購入！使えるAssetを一挙紹介！！！\n          &lt;\u002Fv-card-subtitle\u003E\n        &lt;\u002Fv-card\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E2つのカードはサブタイトルの表示が変わります。一方は画像の中ですが、一方は画像の外に表示されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-15-17.41.23.png\" alt=\"\" class=\"wp-image-929\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eとりあえず、色々な用途で使えるのでCardsは使いこなせておくと良さそうだなと思った。\u003C\u002Fp\u003E\n","\u003Cp\u003EVuetifyにはCardsというものがあります。こいつは公式のサンプルを見てもわかる通りかなり優れたものです。https:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fcards\u002F ブログの記事一覧ページ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F15\u002Fvuetify%e3%81%aecards%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e8%83%8c%e6%99%af%e7%94%bb%e5%83%8f%e3%81%ae%e6%8c%87%e5%ae%9a\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVuetifyのCardsを使った背景画像の指定\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",18,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F926","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=926","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F926\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=926","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=926","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=926",920,"https:\u002F\u002Fvolkruss.com\u002F?p=920","vuetify%e3%81%a7%e4%bd%9c%e3%82%8bparallax%e3%82%a4%e3%83%a1%e3%83%bc%e3%82%b8","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F14\u002Fvuetify%e3%81%a7%e4%bd%9c%e3%82%8bparallax%e3%82%a4%e3%83%a1%e3%83%bc%e3%82%b8\u002F","Vuetifyで作るparallax\bイメージ","\n\u003Cp\u003Eparallaxというは作るのが大変だと思っています。実はcssでも作れるのですが、例えばIEではどうだとかiPhoneではどうだという話になると、考慮すべき点が多くなり、結果的にはparallaxを諦めるのが正解ということも。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそこでVuetifyを使うと便利です。そんなクライアントの環境を考慮する必要もないんじゃないかな？という感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは公式サイトです。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fparallax\u002F#content\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fparallax\u002F#content\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eサンプルのソースコードを見るとわかると思いますが\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E  &lt;v-parallax\n    height=\"300\"\n    src=\"https:\u002F\u002Fcdn.vuetifyjs.com\u002Fimages\u002Fparallax\u002Fmaterial2.jpg\"\n  \u003E&lt;\u002Fv-parallax\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eのように背景画像を指定するだけで使えます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F11\u002F12\u002Fvuetify%e3%81%aevisibility%e3%82%af%e3%83%a9%e3%82%b9%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%98%e3%83%83%e3%83%80%e3%83%bc\u002F\" data-type=\"post\" data-id=\"910\" target=\"_blank\"\u003E前回の記事\u003C\u002Fa\u003Eでつくったメニューを再利用して、parallax機能を使います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-13-23.31.58.png\" alt=\"\" class=\"wp-image-922\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E前回のcontainerにv-parallaxを追加します、以下のようにします、\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;!-- pa-0で無駄なpaddingを無くします--\u003E\n    &lt;v-container fluid class=\"pa-0\" \u003E\n    &lt;v-parallax\n      src=\"https:\u002F\u002Fcdn.vuetifyjs.com\u002Fimages\u002Fbackgrounds\u002Fvbanner.jpg\"\n    \u003E\n      &lt;div class=\"d-md-none\"\u003E\n        &lt;v-row\u003E\n          &lt;v-col cols=\"12\" md=\"12\"\u003E\n              &lt;v-btn\n                class=\"mx-2\"\n                fab\n                dark\n                small\n                color=\"primary\"\n                @click.stop=\"drawer = !drawer\"\n              \u003E\n              +\n              &lt;\u002Fv-btn\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n      &lt;div class=\"d-none d-md-block\"\u003E\n        &lt;v-row\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"primary\"\n              \u003E\n                HOME\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n             &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"grey lighten-5\"\n              \u003E\n                WORK\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"blue-grey darken-1\"\n              \u003E\n                APPS\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"yellow accent-1\"\n              \u003E\n                SERVICE\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n       &lt;v-row\u003E\n          &lt;v-col cols=\"12\"\u003E\n            &lt;h1\u003Eすべての人にvolkrussを&lt;\u002Fh1\u003E\n            &lt;p\u003Evolkrussのリアルタイム3D開発...なんでもない&lt;\u002Fp\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n        &lt;v-row\u003E\n          &lt;v-col cols=\"12\" class=\"m-5\"\u003E\n              &lt;v-btn\n                depressed\n                color=\"primary\"\n              \u003E\n                はじめる\n              &lt;\u002Fv-btn\u003E\n              &lt;v-btn\n                outlined\n                color=\"indigo\"\n              \u003E\n                詳しく知る\n              &lt;\u002Fv-btn\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fv-parallax\u003E\n    &lt;\u002Fv-container\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E要素をたくさん突っ込むと一部表示されなくなりました。ちょっと調査不足ですが、parallaxのheightを要素がオーバーしたら、一部の要素が表示されないようです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに高さを100%にするにはcssを設定すれば良さそうです。\u003Cbr \u002F\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fcodepen.io\u002FShiv_UIDeveloper\u002Fpen\u002FRxZNEa\" target=\"_blank\"\u003Ehttps:\u002F\u002Fcodepen.io\u002FShiv_UIDeveloper\u002Fpen\u002FRxZNEa\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでのコードも載せます。インデントがグチャグチャになっているのですがまぁ勉強中なんで勘弁してください。あとカード三つ並べてます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-14-0.26.34.png\" alt=\"\" class=\"wp-image-924\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-app\u003E\n  &lt;v-sheet\n    class=\"overflow-hidden\"\n    style=\"position: relative;\"\n  \u003E\n    &lt;!-- pa-0で無駄なpaddingを無くします--\u003E\n    &lt;v-container fluid class=\"pa-0\" \u003E\n    &lt;v-parallax\n      src=\"https:\u002F\u002Fcdn.vuetifyjs.com\u002Fimages\u002Fbackgrounds\u002Fvbanner.jpg\"\n    \u003E\n      &lt;div class=\"d-md-none\"\u003E\n        &lt;v-row\u003E\n          &lt;v-col cols=\"12\" md=\"12\"\u003E\n              &lt;v-btn\n                class=\"mx-2\"\n                fab\n                dark\n                small\n                color=\"primary\"\n                @click.stop=\"drawer = !drawer\"\n              \u003E\n              +\n              &lt;\u002Fv-btn\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n      &lt;div class=\"d-none d-md-block\"\u003E\n        &lt;v-row\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"primary\"\n              \u003E\n                HOME\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n             &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"grey lighten-5\"\n              \u003E\n                WORK\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"blue-grey darken-1\"\n              \u003E\n                APPS\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"yellow accent-1\"\n              \u003E\n                SERVICE\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n       &lt;v-row\u003E\n          &lt;v-col cols=\"12\"\u003E\n            &lt;h1\u003Eすべての人にvolkrussを&lt;\u002Fh1\u003E\n            &lt;p\u003Evolkrussのリアルタイム3D開発...なんでもない&lt;\u002Fp\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n        &lt;v-row\u003E\n          &lt;v-col cols=\"12\" class=\"m-5\"\u003E\n              &lt;v-btn\n                depressed\n                color=\"primary\"\n              \u003E\n                はじめる\n              &lt;\u002Fv-btn\u003E\n              &lt;v-btn\n                outlined\n                color=\"indigo\"\n              \u003E\n                詳しく知る\n              &lt;\u002Fv-btn\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fv-parallax\u003E\n    &lt;\u002Fv-container\u003E\n    &lt;v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n    \u003E\n    &lt;v-list\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EHOME&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EWORK&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EAPPS&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003ESERVICE&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n    &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-navigation-drawer\u003E\n  &lt;\u002Fv-sheet\u003E\n  &lt;v-container\u003E\n              &lt;v-row\u003E\n          &lt;v-col cols=\"12\" md=\"4\"\u003E\n              &lt;v-card\n                class=\"mx-auto\"\n                max-width=\"344\"\n              \u003E\n                &lt;v-card-text\u003E\n                  &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n                  &lt;p class=\"display-1 text--primary\"\u003E\n                    be•nev•o•lent\n                  &lt;\u002Fp\u003E\n                  &lt;p\u003Eadjective&lt;\u002Fp\u003E\n                  &lt;div class=\"text--primary\"\u003E\n                    well meaning and kindly.&lt;br\u003E\n                    \"a benevolent smile\"\n                  &lt;\u002Fdiv\u003E\n                &lt;\u002Fv-card-text\u003E\n                &lt;v-card-actions\u003E\n                  &lt;v-btn\n                    text\n                    color=\"deep-purple accent-4\"\n                  \u003E\n                    Learn More\n                  &lt;\u002Fv-btn\u003E\n                &lt;\u002Fv-card-actions\u003E\n              &lt;\u002Fv-card\u003E\n          &lt;\u002Fv-col\u003E\n          &lt;v-col cols=\"12\" md=\"4\"\u003E\n            &lt;v-card\n              class=\"mx-auto\"\n              max-width=\"344\"\n            \u003E\n              &lt;v-card-text\u003E\n                &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n                &lt;p class=\"display-1 text--primary\"\u003E\n                  be•nev•o•lent\n                &lt;\u002Fp\u003E\n                &lt;p\u003Eadjective&lt;\u002Fp\u003E\n                &lt;div class=\"text--primary\"\u003E\n                  well meaning and kindly.&lt;br\u003E\n                  \"a benevolent smile\"\n                &lt;\u002Fdiv\u003E\n              &lt;\u002Fv-card-text\u003E\n              &lt;v-card-actions\u003E\n                &lt;v-btn\n                  text\n                  color=\"deep-purple accent-4\"\n                \u003E\n                  Learn More\n                &lt;\u002Fv-btn\u003E\n              &lt;\u002Fv-card-actions\u003E\n            &lt;\u002Fv-card\u003E\n          &lt;\u002Fv-col\u003E\n          &lt;v-col cols=\"12\" md=\"4\"\u003E\n            &lt;v-card\n              class=\"mx-auto\"\n              max-width=\"344\"\n            \u003E\n              &lt;v-card-text\u003E\n                &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n                &lt;p class=\"display-1 text--primary\"\u003E\n                  be•nev•o•lent\n                &lt;\u002Fp\u003E\n                &lt;p\u003Eadjective&lt;\u002Fp\u003E\n                &lt;div class=\"text--primary\"\u003E\n                  well meaning and kindly.&lt;br\u003E\n                  \"a benevolent smile\"\n                &lt;\u002Fdiv\u003E\n              &lt;\u002Fv-card-text\u003E\n              &lt;v-card-actions\u003E\n                &lt;v-btn\n                  text\n                  color=\"deep-purple accent-4\"\n                \u003E\n                  Learn More\n                &lt;\u002Fv-btn\u003E\n              &lt;\u002Fv-card-actions\u003E\n            &lt;\u002Fv-card\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n  &lt;\u002Fv-container\u003E\n  &lt;\u002Fv-app\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\nexport default {\n    data: () =\u003E ({\n      drawer: false,\n    }),\n}\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eparallaxというは作るのが大変だと思っています。実はcssでも作れるのですが、例えばIEではどうだとかiPhoneではどうだという話になると、考慮すべき点が多くなり、結果的にはparallaxを諦めるのが正解という&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F14\u002Fvuetify%e3%81%a7%e4%bd%9c%e3%82%8bparallax%e3%82%a4%e3%83%a1%e3%83%bc%e3%82%b8\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVuetifyで作るparallax\bイメージ\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F920","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=920","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F920\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=920","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=920","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=920",910,"https:\u002F\u002Fvolkruss.com\u002F?p=910","vuetify%e3%81%aevisibility%e3%82%af%e3%83%a9%e3%82%b9%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%98%e3%83%83%e3%83%80%e3%83%bc","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F12\u002Fvuetify%e3%81%aevisibility%e3%82%af%e3%83%a9%e3%82%b9%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%98%e3%83%83%e3%83%80%e3%83%bc\u002F","VuetifyのVisibilityクラスで作るレスポンシブヘッダー","\n\u003Cp\u003E画面サイズによって表示非表示を制御できます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-app\u003E\n    &lt;div class=\"d-none\"\u003E\n      &lt;h1\u003E常に非表示&lt;\u002Fh1\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;div class=\"d-md-none\"\u003E\n        &lt;h1\u003E画面サイズMDより小さいね＾＾&lt;\u002Fh1\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;div class=\"d-none d-md-block\"\u003E\n        &lt;h1\u003E画面サイズMDより大きいね！&lt;\u002Fh1\u003E\n    &lt;\u002Fdiv\u003E\n  &lt;\u002Fv-app\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ed-xx-noneで表示非表示を切り替えます。\u003Cbr \u002F\u003Eレスポンシブヘッダーメニューでよくあるボタンのようなのはこれで、再現できそうです。\u003Cbr \u002F\u003E既存のv-app-barはなんか使いにくいような感じがして私は嫌いです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけでレスポンシブなヘッダーメニューを作ってみます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-app\u003E\n    &lt;v-container fluid class=\"\" style=\"background-color:#000\"\u003E\n      &lt;div class=\"d-md-none\"\u003E\n        &lt;v-row\u003E\n          &lt;v-col cols=\"12\" md=\"12\"\u003E\n              &lt;v-btn\n                class=\"mx-2\"\n                fab\n                dark\n                small\n                color=\"primary\"\n              \u003E\n              +\n              &lt;\u002Fv-btn\u003E\n          &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n      &lt;div class=\"d-none d-md-block\"\u003E\n        &lt;v-row\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"primary\"\n              \u003E\n                HOME\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n             &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"grey lighten-5\"\n              \u003E\n                WORK\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"blue-grey darken-1\"\n              \u003E\n                APPS\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n            &lt;v-col cols=\"12\" md=\"3\"\u003E\n              &lt;v-btn\n                text\n                color=\"yellow accent-1\"\n              \u003E\n                SERVICE\n              &lt;\u002Fv-btn\u003E\n            &lt;\u002Fv-col\u003E\n        &lt;\u002Fv-row\u003E\n      &lt;\u002Fdiv\u003E\n    &lt;\u002Fv-container\u003E\n  &lt;\u002Fv-app\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-11-21.56.32.png\" alt=\"\" class=\"wp-image-913\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこんな感じのヘッダーですが、画面サイズを小さくすると\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-11-21.58.16.png\" alt=\"\" class=\"wp-image-914\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eスマホなどでよくみるメニューボタンが表示されました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にこのボタンが押された時にメニューが表示されるようにします。\u003Cbr \u002F\u003EこれはVuetifyのnavigation-drawerを利用します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fnavigation-drawers\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fnavigation-drawers\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E&lt;\u002Fv-container\u003Eの下に以下を追加します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n    \u003E\n    &lt;v-list\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EHOME&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EWORK&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003EAPPS&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n      &lt;v-list-item\u003E\n        &lt;v-list-item-content\u003E\n          &lt;v-list-item-title\u003ESERVICE&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item-content\u003E\n      &lt;\u002Fv-list-item\u003E\n    &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-navigation-drawer\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eそしてv-containerをv-sheetの子要素にします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E  &lt;v-sheet\n    height=\"400\"\n    class=\"overflow-hidden\"\n    style=\"position: relative;\"\n  \u003E\n    &lt;v-container fluid class=\"\" style=\"background-color:#000\"\u003E\n省略\n    &lt;\u002Fv-navigation-drawer\u003E\n  &lt;\u002Fv-sheet\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にスクリプトを追加します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;script\u003E\nexport default {\n    data: () =\u003E ({\n      drawer: false,\n    }),\n}\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで準備OKで、メニューのボタンを押すと以下のようなメニューがかっこよく出現します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-12-8.18.50-1024x648.png\" alt=\"\" class=\"wp-image-918\" width=\"438\" height=\"276\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003E画面サイズによって表示非表示を制御できます。 d-xx-noneで表示非表示を切り替えます。レスポンシブヘッダーメニューでよくあるボタンのようなのはこれで、再現できそうです。既存のv-app-barはなんか使いにくいよう&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F12\u002Fvuetify%e3%81%aevisibility%e3%82%af%e3%83%a9%e3%82%b9%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%98%e3%83%83%e3%83%80%e3%83%bc\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVuetifyのVisibilityクラスで作るレスポンシブヘッダー\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F910","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=910","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F910\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=910","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=910","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=910",899,"https:\u002F\u002Fvolkruss.com\u002F?p=899","vuetify%e3%81%ae%e3%82%b0%e3%83%aa%e3%83%83%e3%83%89%e3%82%b7%e3%82%b9%e3%83%86%e3%83%a0%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%ac%e3%82%a4%e3%82%a2","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F08\u002Fvuetify%e3%81%ae%e3%82%b0%e3%83%aa%e3%83%83%e3%83%89%e3%82%b7%e3%82%b9%e3%83%86%e3%83%a0%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%ac%e3%82%a4%e3%82%a2\u002F","Vuetifyのグリッドシステムで作るレスポンシブレイアウト","\n\u003Cp\u003Eうっす！w\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E久しぶりにVuetifyを使ったのでグリッドシステムでレスポンシブレイアウトを作るメモをするをするっす！w\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-08-13.03.21-1024x379.png\" alt=\"\" class=\"wp-image-900\" width=\"476\" height=\"176\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれのコードです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-container class=\"grey lighten-5\"\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" md=\"12\" style=\"background-color:#ffccff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols=\"12\" xs=\"12\" md=\"6\" style=\"background-color:#ccccff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols= \"12\" xs=\"12\" md=\"6\" style=\"background-color:#ffccff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" style=\"background-color:#ccccff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" style=\"background-color:#ffccff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" style=\"background-color:#ccffff\"\n      \u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E主人公はアルファ碁に勝利した。アルファ碁は言った「プロか？」&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n  &lt;\u002Fv-container\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E今回は一番下の要素（３つ並んでいるところ）についてみていきます。\u003C\u002Fp\u003E\u003Cp\u003Eまず全12ポイント持っています。そのうち画面サイズごとにいくつのポイントを消費するか定義することでレスポンシブなレイアウトになります。\u003C\u002Fp\u003E\u003Cp\u003E&lt;v-col cols=&#8221;12&#8243; xs=&#8221;12&#8243; sm=&#8221;6&#8243; md=&#8221;4&#8243; style=&#8221;background-color:#ccccff&#8221;\u003E\u003C\u002Fp\u003E\u003Ccite\u003E12ポイントに対してxs12ポイント sm6ポイント md４ポイントになります。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E画面をsmのサイズまで小さくするとこうなります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-08-13.37.53-1024x788.png\" alt=\"\" class=\"wp-image-902\" width=\"434\" height=\"334\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Esmが6ポイントなのでsmサイズにちょうど半分ずつ表示、一つははみ出す（下にこぼれる）かんじになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E画面を最終的にxsサイズまで小さくすると全て１カラムで表示されます。\u003Cbr \u002F\u003E意外と計算方法は簡単ですね。12-nということだけです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次は以下のレイアウトを考えます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-08-15.06.28.png\" alt=\"\" class=\"wp-image-906\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-container class=\"grey lighten-5\"\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" md=\"12\" style=\"background-color:#000\"\u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" md=\"8\" style=\"background-color:#ffccff\"\u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E新しい時代の囲碁の形それは45路盤&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols=\"12\" md=\"4\" style=\"background-color:#ccffcc\"\u003E\n      &lt;h1\u003Eいっそのこと三色で&lt;\u002Fh1\u003E\n      &lt;p\u003E白と黒、そこに茶色の石を入れた45路盤の新しい囲碁ソフトがここに！&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n  &lt;\u002Fv-container\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E8対4の比率でブロックを表現するために、md8とmd4にしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次は投稿のレイアウトです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-08-17.42.49-1024x539.png\" alt=\"\" class=\"wp-image-908\" width=\"650\" height=\"341\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカードの内容は公式サイトから\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fcards\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvuetifyjs.com\u002Fen\u002Fcomponents\u002Fcards\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコードはこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-container class=\"grey lighten-5\"\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" md=\"12\" style=\"background-color:#000\"\u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n    &lt;v-row\u003E\n      &lt;v-col cols=\"12\" md=\"8\" style=\"background-color:#ffccff\"\u003E\n      &lt;h1\u003E囲碁のプロ&lt;\u002Fh1\u003E\n      &lt;p\u003E新しい時代の囲碁の形それは45路盤&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n      &lt;v-col cols=\"12\" md=\"4\" style=\"background-color:#ccffcc\"\u003E\n      &lt;h1\u003Eいっそのこと三色で&lt;\u002Fh1\u003E\n      &lt;p\u003E白と黒、そこに茶色の石を入れた45路盤の新しい囲碁ソフトがここに！&lt;\u002Fp\u003E\n      &lt;\u002Fv-col\u003E\n    &lt;\u002Fv-row\u003E\n  &lt;v-row\u003E\n    &lt;v-col cols=\"12\" md=\"4\" sm=\"12\" style=\"background-color:#000\"\u003E\n    &lt;v-card\n      class=\"mx-auto\"\n      max-width=\"344\"\n    \u003E\n      &lt;v-card-text\u003E\n        &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n        &lt;p class=\"display-1 text--primary\"\u003E\n          be•nev•o•lent\n        &lt;\u002Fp\u003E\n        &lt;p\u003Eadjective&lt;\u002Fp\u003E\n        &lt;div class=\"text--primary\"\u003E\n          well meaning and kindly.&lt;br\u003E\n          \"a benevolent smile\"\n        &lt;\u002Fdiv\u003E\n      &lt;\u002Fv-card-text\u003E\n      &lt;v-card-actions\u003E\n        &lt;v-btn\n          text\n          color=\"deep-purple accent-4\"\n        \u003E\n          Learn More\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Fv-card-actions\u003E\n    &lt;\u002Fv-card\u003E\n    &lt;\u002Fv-col\u003E\n    &lt;v-col cols=\"12\" md=\"4\" sm=\"12\" style=\"background-color:#000\"\u003E\n    &lt;v-card\n      class=\"mx-auto\"\n      max-width=\"344\"\n    \u003E\n      &lt;v-card-text\u003E\n        &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n        &lt;p class=\"display-1 text--primary\"\u003E\n          be•nev•o•lent\n        &lt;\u002Fp\u003E\n        &lt;p\u003Eadjective&lt;\u002Fp\u003E\n        &lt;div class=\"text--primary\"\u003E\n          well meaning and kindly.&lt;br\u003E\n          \"a benevolent smile\"\n        &lt;\u002Fdiv\u003E\n      &lt;\u002Fv-card-text\u003E\n      &lt;v-card-actions\u003E\n        &lt;v-btn\n          text\n          color=\"deep-purple accent-4\"\n        \u003E\n          Learn More\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Fv-card-actions\u003E\n    &lt;\u002Fv-card\u003E\n    &lt;\u002Fv-col\u003E\n        &lt;v-col cols=\"12\" md=\"4\" sm=\"12\" style=\"background-color:#000\"\u003E\n    &lt;v-card\n      class=\"mx-auto\"\n      max-width=\"344\"\n    \u003E\n      &lt;v-card-text\u003E\n        &lt;div\u003EWord of the Day&lt;\u002Fdiv\u003E\n        &lt;p class=\"display-1 text--primary\"\u003E\n          be•nev•o•lent\n        &lt;\u002Fp\u003E\n        &lt;p\u003Eadjective&lt;\u002Fp\u003E\n        &lt;div class=\"text--primary\"\u003E\n          well meaning and kindly.&lt;br\u003E\n          \"a benevolent smile\"\n        &lt;\u002Fdiv\u003E\n      &lt;\u002Fv-card-text\u003E\n      &lt;v-card-actions\u003E\n        &lt;v-btn\n          text\n          color=\"deep-purple accent-4\"\n        \u003E\n          Learn More\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Fv-card-actions\u003E\n    &lt;\u002Fv-card\u003E\n    &lt;\u002Fv-col\u003E\n  &lt;\u002Fv-row\u003E\n  &lt;\u002Fv-container\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E画面サイズがsmになると投稿が１列になります。\u003Cbr \u002F\u003E現状max-widthがあるのですが、ここを調整なり外すなりすればいい感じになります。\u003C\u002Fp\u003E\n","\u003Cp\u003Eうっす！w 久しぶりにVuetifyを使ったのでグリッドシステムでレスポンシブレイアウトを作るメモをするをするっす！w これのコードです 今回は一番下の要素（３つ並んでいるところ）についてみていきます。 まず全12ポイン&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F08\u002Fvuetify%e3%81%ae%e3%82%b0%e3%83%aa%e3%83%83%e3%83%89%e3%82%b7%e3%82%b9%e3%83%86%e3%83%a0%e3%81%a7%e4%bd%9c%e3%82%8b%e3%83%ac%e3%82%b9%e3%83%9d%e3%83%b3%e3%82%b7%e3%83%96%e3%83%ac%e3%82%a4%e3%82%a2\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVuetifyのグリッドシステムで作るレスポンシブレイアウト\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",31,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F899","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=899","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F899\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=899","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=899","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=899",892,"https:\u002F\u002Fvolkruss.com\u002F?p=892","fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F07\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae\u002F","Fungusを使ってゲームを作ったもの","\n\u003Cp\u003E\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003EFungusは神\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E本当はBoltというアセットの勉強をしようと思ったのですが、よくわからないのでPlayMakerとFungusでゲームを作りました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Funitychandashutu\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitychandashutu\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E軽いUnityちゃんを使ってみたのですが、可愛いのでいいですね\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.28.39-1024x437.png\" alt=\"\" class=\"wp-image-897\" width=\"344\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回はFungusを使って色々とやってみました。\u003Cbr \u002F\u003EまずはCollectionです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eアイテムの管理はCollectionを使いました。Collectionを使ってIFの制御もできるので鍵を持っている持っていないとかのロジックに使うことができます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.05.47.png\" alt=\"\" class=\"wp-image-893\" width=\"548\" height=\"385\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのドアは鍵を持っていないと開かないドアです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.15.20.png\" alt=\"\" class=\"wp-image-894\" width=\"475\" height=\"225\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのContainsはCollectionから要素を検索して、要素があればtureなければfalseを変数に設定できます。今回はVarという変数に要素の検索結果を代入している形になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E他にもExecute On Eventでイベントの発生タイミングを制御できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F11\u002Fスクリーンショット-2020-11-07-18.18.40.png\" alt=\"\" class=\"wp-image-895\" width=\"433\" height=\"323\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えばTriggerの当たり判定が発生した時とかも簡単に表現ができます。\u003Cbr \u002F\u003EまたUIButtonClickedにすると簡単にボタンのクリックイベントを定義できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもう煩わしいコードを書く必要がなくなったということですね？\u003C\u002Fp\u003E\n","\u003Cp\u003EFungusは神 本当はBoltというアセットの勉強をしようと思ったのですが、よくわからないのでPlayMakerとFungusでゲームを作りました。 https:\u002F\u002Fvolkruss.com\u002Funitychandash&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F11\u002F07\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%82%82%e3%81%ae\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusを使ってゲームを作ったもの\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F892","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=892","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F892\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=892","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=892","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=892",867,"https:\u002F\u002Fvolkruss.com\u002F?p=867","%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F27\u002F%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b\u002F","【Unity】Fungusの小技をメモする","\n\u003Cp\u003E小技をメモしていきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E随時更新します。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ECollection系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコレクション、在庫みたいな感じ、色々な型に対応しているが柔軟性は低そう？\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionを作る\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E適当な空のゲームオブジェクトにCollectionをアタッチします。今回はStringを扱えるものにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.11.42.png\" alt=\"\" class=\"wp-image-876\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003ECollectionに要素を追加する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECollection\u002FAddコマンドで要素を追加できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.15.38.png\" alt=\"\" class=\"wp-image-877\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E使用するCollectionを指定して、追加する変数を指定します。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionの要素を検索する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ECollectionから要素を検索するにはContainsコマンドを使用します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-29-23.17.50.png\" alt=\"\" class=\"wp-image-878\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E検索するCollectionを指定して、要素の変数を指定します。\u003Cbr \u002F\u003E今回は鍵というstringの要素を検索します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E面倒ですが、いちいち変数として宣言しないといけません。\u003Cbr \u002F\u003E検索結果はbool型でResultで指定した変数に入ります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E上の画像の例では、鍵がなければ鍵をCollectionに追加して、鍵があれば&#8221;中身は空っぽだ&#8221;というメッセージを表示するようにしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにgetedという新しい過去形を作りました。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ETween系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ETweenを使った動きのある挙動のメモ\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eドアを開く\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003ERotateAddでOffsetのYに値を設定する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-27-23.13.52.png\" alt=\"\" class=\"wp-image-868\" width=\"592\" height=\"543\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003Eドラを開け閉めする\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eまずは変数を用意。なぜか一つだけ変数を用意しておくとゲーム再生時に変数が消えるバグがあったので三つくらい変数を宣言しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-28-0.25.47.png\" alt=\"\" class=\"wp-image-873\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-28-0.19.46.png\" alt=\"\" class=\"wp-image-872\" width=\"369\" height=\"168\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eifによる制御ができるので変数に値に応じて開け閉めを行えばOK\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003ESaveLoad系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Efungusはセーブもロードもできます。どこまでできるのか調査も兼ねてメモします。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ESaveする\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003EFungus &gt; Create &gt; SaveMenuで自動的にセーブメニューを作ってくれます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EコマンドにはSavePointを指定します。\u003Cbr \u002F\u003Eこのコマンドが実行された後にセーブメニュー画面のSaveボタンを押すとセーブされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただし、保存される情報は少ないです。Loadするとこのセープポイントから実行されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-30-23.15.12.png\" alt=\"\" class=\"wp-image-884\" width=\"264\" height=\"305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスクリプト系\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EFungusはスクリプトからも操作できるし拡張もできるです。\u003Cbr \u002F\u003E参考：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgithub.com\u002Fsnozbot\u002Ffungus\u002Fwiki\u002Fadding_command\" target=\"_blank\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fsnozbot\u002Ffungus\u002Fwiki\u002Fadding_command\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003ECollectionの要素を出力する\u003C\u002Fh3\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public Fungus.StringCollection collection;\n    private void Start()\n    {\n        IEnumerator lists = collection.GetEnumerator();\n        while (lists.MoveNext())\n        {\n            Debug.Log(lists.Current);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EIEnumeratorを取得してループで要素を操作できます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003EListからCollectionに追加する\u003C\u002Fh3\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public void AddAndLoadTest()\n    {\n        \u002F\u002F Listに要素を追加\n        var stringList = new List&lt;string&gt;();\n        stringList.Add(\"市民\");\n        stringList.Add(\"人狼\");\n        stringList.Add(\"狂人\");\n        stringList.Add(\"占い師\");\n        stringList.Add(\"霊媒師\");\n        \u002F\u002F Listからコレクションに追加\n        foreach(string item in stringList)\n        {\n            collection.Add(item);\n        }\n        \u002F\u002F 取得とログに表示\n        IEnumerator lists = collection.GetEnumerator();\n        while (lists.MoveNext())\n        {\n            Debug.Log(lists.Current);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EコレクションのAddメソッドを使って要素を追加します。\u003C\u002Fp\u003E\n","\u003Cp\u003E小技をメモしていきます 随時更新します。 Collection系 コレクション、在庫みたいな感じ、色々な型に対応しているが柔軟性は低そう？ Collectionを作る 適当な空のゲームオブジェクトにCollectionを&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F27\u002F%e3%80%90unity%e3%80%91fungus%e3%81%ae%e5%b0%8f%e6%8a%80%e3%82%92%e3%83%a1%e3%83%a2%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Fungusの小技をメモする\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",1036,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F867","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=867","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F867\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia\u002F1036","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=867","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=867","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=867",861,"https:\u002F\u002Fvolkruss.com\u002F?p=861","playmaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F25\u002Fplaymaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86\u002F","PlayMakerでNavMeshAgentを使う","\n\u003Cp\u003E最近BoltというPlaymakerにそっくりなものを知りましたが、結局PlayMakerだよなぁ！？ということでPlayMakerを使ってNavMeshAgentを操作します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayMakerはいわゆる人工無脳の作成に向いているみたいな記事を見ますが、NavMeshAgentを使えばさらにパワーアップできますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし、PlayMakerを見るとNavMeshAgentは標準では使用できないことがわかります。\u003Cbr \u002F\u003Eでも、私のを見てください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-25-12.15.03-580x1024.png\" alt=\"\" class=\"wp-image-862\" width=\"302\" height=\"533\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあるんです。\u003Cbr \u002F\u003Eというわけで、必要なものをダウンロードします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のURLから「Unity 5.0 to 5.4 package」のダウンロードをして開きます。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fhutonggames.fogbugz.com\u002Fdefault.asp?W1174\" target=\"_blank\"\u003Ehttps:\u002F\u002Fhutonggames.fogbugz.com\u002Fdefault.asp?W1174\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこれでPlayMakerでNavMeshAgentを利用する準備ができました。\u003Cbr \u002F\u003E例えば敵キャラクターのターゲットをプレイヤーにする場合はこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-25-23.08.07.png\" alt=\"\" class=\"wp-image-865\" width=\"233\" height=\"257\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E１、ターゲットのゲームオブジェクトを取得する。\u003Cbr \u002F\u003E２、ターゲットのポジションを取得する。\u003Cbr \u002F\u003E３、ターゲットのポジションを目的地に設定する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこの手順で行くとNavMeshAgentをPlayMakerから操作できます。\u003C\u002Fp\u003E\n","\u003Cp\u003E最近BoltというPlaymakerにそっくりなものを知りましたが、結局PlayMakerだよなぁ！？ということでPlayMakerを使ってNavMeshAgentを操作します。 PlayMakerはいわゆる人工無脳の作&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F25\u002Fplaymaker%e3%81%a7navmeshagent%e3%82%92%e4%bd%bf%e3%81%86\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlayMakerでNavMeshAgentを使う\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",39,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F861","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=861","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F861\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=861","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=861","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=861",814,"https:\u002F\u002Fvolkruss.com\u002F?p=814","mymlagentsunity","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F06\u002Fmymlagentsunity\u002F","Unity | ml-agentsでゼロから機械学習をさせる","\n\u003Cp\u003Eサンプルを動かしても何も新しいものが作れないので、ゼロからいろいろ設定して、機械学習をやってみます。\u003Cbr \u002F\u003Eちなみに知識に関してはまだ勉強中ということで、レベル4くらいなのでその辺はご了承ください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E今回のゴール\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回は自分でゼロから全部用意して機械学習をさせるまでが目標です。\u003Cbr \u002F\u003E今回の記事ではここまで作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-1.09.39.png\" alt=\"\" class=\"wp-image-831\" width=\"458\" height=\"333\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E敵キャラはUnityちゃんに向かってレイキャストを飛ばして、当たったら報酬を得ます。そんな感じのものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E将来的にはピストルに変えていきたいなという願望。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eシーンを設定する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回はUnityちゃんを使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E敵キャラのAIを作ってみます。敵キャラはUnityちゃんを攻撃してくるという感じにしましょう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは床とUnityちゃんと敵を配置します。\u003Cbr \u002F\u003EUnityちゃんにはコライダーを持たせておき、タグをUnityChanにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyにはRigidBodyをつけておきます。\u003Cbr \u002F\u003Eついでに子要素にライフルを設置します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.04.28-576x1024.png\" alt=\"\" class=\"wp-image-815\" width=\"251\" height=\"446\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.05.53.png\" alt=\"\" class=\"wp-image-816\" width=\"479\" height=\"284\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E機械学習の準備を行う\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EEnemyに必要なものをアタッチしていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはBehaviorParametersを付けてNameをEnemyBehaviorにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にRayPerceptionSensor3Dをアタッチします。\u003Cbr \u002F\u003EDetectableTagsのSizeを1にしてElement0にUnityChanと入力します。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.12.43.png\" alt=\"\" class=\"wp-image-818\" width=\"376\" height=\"464\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれをつけるとシーンビューでレイが自動的に発射されて、物体と当たっている場合は赤い線が表示されます。\u003Cbr \u002F\u003E\u003Cspan class=\"has-inline-color has-vivid-cyan-blue-color\"\u003E※ライフルの位置を調整しました。\u003Cstrong\u003Eあとライフルのboxcolliderを消しました。\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-05-2.14.48.png\" alt=\"\" class=\"wp-image-819\" width=\"426\" height=\"278\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのレイで当たっている情報から、ーーーーをAIが観察値として扱ってくれるようです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EAgentを継承したクラスを作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EMyAI.csというのを作って以下のようにします。まずは雛形的なものを作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\npublic class MyAI : Agent\n{\n    public Transform target;\n    Rigidbody rBody;\n    private bool canShot = true;\n    private int nextShotTime = 0;\n    &#91;SerializeField]\n    private GameObject bulletprefab;\n    &#91;SerializeField]\n    private LayerMask layerMask;\n    public override void Initialize()\n    {\n        this.rBody = GetComponent&lt;Rigidbody\u003E();\n    }\n    public override void OnEpisodeBegin()\n    {\n    }\n    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003EOnEpisodeBegin\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EOnEpisodeBeginメソッドを完成させます。これはエピソード開始時なので学習の最初に呼ばれることになります。やっていることは自身の初期化とターゲットの初期化です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E床からEnemyが落ちた時はエピソードを終了させるので、位置をリセットする必要があるので床から落ちた時の処理があります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public override void OnEpisodeBegin()\n    {\n        \u002F\u002F床から落ちた時\n        if (this.transform.position.y &lt; 0)\n        {\n            this.rBody.angularVelocity = Vector3.zero;\n            this.rBody.velocity = Vector3.zero;\n            this.transform.position = new Vector3(0f, 0.5f, 0f);\n        }\n        target.localPosition = new Vector3(Random.value * 8 - 4, 0.5f, Random.value + 8 - 4);\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003E\u003Cstrong\u003EOnActionReceived\u003C\u002Fstrong\u003E\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次にOnActionReceivedメソッドを完成させます。\u003Cbr \u002F\u003Eこれは少し複雑ですが\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E簡単にこのメソッドを説明すると、移動と攻撃を選択しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n        ActionSegment&lt;int\u003E vectorAction = actionBuffers.DiscreteActions;\n        bool isShot = false;\n        Vector3 dirToGo = Vector3.zero;\n        Vector3 rotateDir = Vector3.zero;\n        int action = (int)vectorAction&#91;0];\n        int shot = (int)vectorAction&#91;1];\n        if (action == 1) dirToGo = transform.forward;\n        if (action == 2) dirToGo = transform.forward * -1.0f;\n        if (action == 3) rotateDir = transform.up * -1.0f;\n        if (action == 4) rotateDir = transform.up;\n        \u002F\u002F isShotは２番目の配列要素から受け取れます。\n        if (shot == 1) isShot = true;\n        this.transform.Rotate(rotateDir, Time.deltaTime * 200f);\n        this.rBody.AddForce(dirToGo * 0.3f, ForceMode.VelocityChange);\n        if (this.transform.localPosition.y &lt; 0)\n        {\n            EndEpisode();\n        }\n        \u002F\u002F攻撃\n        if (isShot)\n        {\n            Shot();\n        }\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eメソッドを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EShotメソッドは実際に球を発射するメソッドです。が、今回はレイキャストを発射するだけです。\u003Cbr \u002F\u003EFixedUptedateメソッドは発射した後に発射制限を設けているのでそこの部分の管理を行います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n    private void Shot()\n    {\n        if (!canShot)\n        {\n            return;\n        }\n        var direction = transform.forward;\n        Debug.DrawRay(transform.position, direction, Color.blue, 1f);\n        if (Physics.Raycast(transform.position, direction, out var hit, 2000f, layerMask))\n        {\n            Debug.Log(\"HIT!!\");\n            AddReward(1f);\n            EndEpisode();\n        }\n        else\n        {\n            AddReward(-0.033f);\n        }\n        canShot = false;\n        nextShotTime = 10;\n    }\n    private void FixedUpdate()\n    {\n        \u002F\u002F 球を発射可能に切り替える\n        if (!canShot)\n        {\n            nextShotTime--;\n            if (nextShotTime &lt;= 0)\n            {\n                canShot = true;\n            }\n        }\n        AddReward(-1f \u002F MaxStep);\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eその他の設定\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EUnityちゃんのレイヤーをPlayerにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyの設定も以下の画像のように行なっておきます。\u003Cbr \u002F\u003E今回はプレファブを使うことはしませんが、まぁ後々使うと思うんで一応設定しておきました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-22.51.58-535x1024.png\" alt=\"\" class=\"wp-image-836\" width=\"314\" height=\"601\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-06-22.52.08.png\" alt=\"\" class=\"wp-image-837\" width=\"274\" height=\"296\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E学習を開始する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E作ったMyAIをEnemyにアタッチしたらMaxStepを2000くらいにしておきます。\u003Cbr \u002F\u003EついでにtargetをUnityちゃんにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eついでにyamlファイルを作ります。\u003Cbr \u002F\u003EEnemy.yamlを作って以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ebehaviors:\n  EnemyBehavior:\n    trainer_type: ppo\n    hyperparameters:\n      batch_size: 128\n      buffer_size: 2048\n      learning_rate: 0.0003\n      beta: 0.005\n      epsilon: 0.2\n      lambd: 0.95\n      num_epoch: 3\n      learning_rate_schedule: linear\n    network_settings:\n      normalize: true\n      hidden_units: 128\n      num_layers: 2\n      vis_encode_type: simple\n    reward_signals:\n      extrinsic:\n        gamma: 0.99\n        strength: 1.0\n    keep_checkpoints: 5\n    checkpoint_interval : 500000\n    max_steps: 500000\n    time_horizon: 64\n    summary_freq: 1000\n    threaded: true\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eあとは学習を開始させます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最初はうろうろとその辺を歩き回ります。\u003Cbr \u002F\u003Eちなみに今回は報酬を得るとHIT!!というログを出しております。\u003Cbr \u002F\u003Eだんだんとログの出力頻度が上がってきますのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最後にコード全文載せておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Unity.MLAgents;\nusing Unity.MLAgents.Actuators;\npublic class MyAI : Agent\n{\n    public Transform target;\n    Rigidbody rBody;\n    private bool canShot = true;\n    private int nextShotTime = 0;\n    &#91;SerializeField]\n    private GameObject bulletprefab;\n    &#91;SerializeField]\n    private LayerMask layerMask;\n    public override void Initialize()\n    {\n        this.rBody = GetComponent&lt;Rigidbody\u003E();\n    }\n    public override void OnEpisodeBegin()\n    {\n        \u002F\u002F床から落ちた時\n        if (this.transform.position.y &lt; 0)\n        {\n            this.rBody.angularVelocity = Vector3.zero;\n            this.rBody.velocity = Vector3.zero;\n            this.transform.position = new Vector3(0f, 0.5f, 0f);\n        }\n        target.localPosition = new Vector3(Random.value * 8 - 4, 0.5f, Random.value + 8 - 4);\n    }\n    public override void OnActionReceived(ActionBuffers actionBuffers)\n    {\n        ActionSegment&lt;int\u003E vectorAction = actionBuffers.DiscreteActions;\n        bool isShot = false;\n        Vector3 dirToGo = Vector3.zero;\n        Vector3 rotateDir = Vector3.zero;\n        int action = (int)vectorAction&#91;0];\n        int shot = (int)vectorAction&#91;1];\n        if (action == 1) dirToGo = transform.forward;\n        if (action == 2) dirToGo = transform.forward * -1.0f;\n        if (action == 3) rotateDir = transform.up * -1.0f;\n        if (action == 4) rotateDir = transform.up;\n        \u002F\u002F isShotは２番目の配列要素から受け取れます。\n        if (shot == 1) isShot = true;\n        this.transform.Rotate(rotateDir, Time.deltaTime * 200f);\n        this.rBody.AddForce(dirToGo * 0.3f, ForceMode.VelocityChange);\n        if (this.transform.localPosition.y &lt; 0)\n        {\n            EndEpisode();\n        }\n        \u002F\u002F攻撃\n        if (isShot)\n        {\n            Shot();\n        }\n    }\n    private void Shot()\n    {\n        if (!canShot)\n        {\n            return;\n        }\n        var direction = transform.forward;\n        Debug.DrawRay(transform.position, direction, Color.blue, 1f);\n        if (Physics.Raycast(transform.position, direction, out var hit, 2000f, layerMask))\n        {\n            Debug.Log(\"HIT!!\");\n            AddReward(1f);\n            EndEpisode();\n        }\n        else\n        {\n            AddReward(-0.033f);\n        }\n        canShot = false;\n        nextShotTime = 10;\n    }\n    private void FixedUpdate()\n    {\n        \u002F\u002F 球を発射可能に切り替える\n        if (!canShot)\n        {\n            nextShotTime--;\n            if (nextShotTime &lt;= 0)\n            {\n                canShot = true;\n            }\n        }\n        AddReward(-1f \u002F MaxStep);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E自分でゼロから機械学習の設定を行い、機械学習をすることができました。\u003Cbr \u002F\u003E次は実際のゲームらしくピストルを実際に発射したりしたいなと思います。\u003C\u002Fp\u003E\n","\u003Cp\u003Eサンプルを動かしても何も新しいものが作れないので、ゼロからいろいろ設定して、機械学習をやってみます。ちなみに知識に関してはまだ勉強中ということで、レベル4くらいなのでその辺はご了承ください。 今回のゴール 今回は自分でゼ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F06\u002Fmymlagentsunity\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity | ml-agentsでゼロから機械学習をさせる\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F814","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=814","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F814\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=814","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=814","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=814",761,"https:\u002F\u002Fvolkruss.com\u002F?p=761","unity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F02\u002Funity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91\u002F","Unityで無謀にも機械学習を始めます。【ML-Agents】","\n\u003Cp\u003E正直、右も左もわからん状態から始めます。\u003Cbr \u002F\u003Eとりあえず目標はサンプルに対してサンプルの学習をさせるまで。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにサンプルはこいつです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-01-23.07.38.png\" alt=\"\" class=\"wp-image-763\" width=\"364\" height=\"333\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E環境\u003Cbr \u002F\u003EMac\u003Cbr \u002F\u003E\u003Cstrong\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003Eml-agents v1.4.0\u003C\u002Fspan\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E現時点で最新版だと思いますが、これマジでどんどんアップデートが入っているようなので注意してください。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EAnacondaのインストール\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずは色々と準備が必要なので、サクッと色々とダウンロードしていきます。\u003Cbr \u002F\u003Eまずは\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.anaconda.com\u002Fproducts\u002Findividual\" data-type=\"URL\" data-id=\"https:\u002F\u002Fwww.anaconda.com\u002Fproducts\u002Findividual\" target=\"_blank\"\u003EAnaconda\u003C\u002Fa\u003Eをインストールします。リンク先の下の方にいくとファイルがありますので環境に合わせてダウンロードしてください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAnacondaを使うとpythonの開発環境を手軽に構築できます。Unityでの機械学習にもAnacondaを使って環境を作ります。アナコンダをインストールしたらターミナルから以下のコマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Econda create -n mlagents python=3.8\u003C\u002Fp\u003E\u003Ccite\u003Eなんか聞かれたらYで進めます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E次に作った環境を使うように以下のコマンドを打ちます。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Econda activate mlagents\u003C\u002Fp\u003E\u003Ccite\u003Eプロンプロトがmlagentsに変わります。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003Eml-agentsのダウンロード\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E次にml-agentsをダウンロードします。\u003Cbr \u002F\u003E現時点での最新を利用します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgithub.com\u002FUnity-Technologies\u002Fml-agents\" target=\"_blank\"\u003Ehttps:\u002F\u002Fgithub.com\u002FUnity-Technologies\u002Fml-agents\u003C\u002Fa\u003E\u003Cbr \u002F\u003Eこのサイトの下のほうに以下のようなテーブルがありダウンロードできます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.24.42-1024x499.png\" alt=\"\" class=\"wp-image-767\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EというわけでRelease7をダウンロードします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E解凍すると色々なものが入っています\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.26.56.png\" alt=\"\" class=\"wp-image-769\" width=\"268\" height=\"311\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとりあえずProjectフォルダのAssetフォルダに移動します。\u003Cbr \u002F\u003EするとML-AgetnsというフォルダがあるのでUnityのプロジェクトにコピーします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ色々とエラーが出ているが気にせず進めます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.35.53.png\" alt=\"\" class=\"wp-image-770\" width=\"351\" height=\"191\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にUnityのPackageManagerを開きます。\u003Cbr \u002F\u003E＋ボタンから、Add package from diskをクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.47.27.png\" alt=\"\" class=\"wp-image-772\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eすると選択画面が開くのでcom.unity.ml-agentsのpackage.jsonを選択します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.52.57.png\" alt=\"\" class=\"wp-image-773\" width=\"411\" height=\"227\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eしばらくインポートが走るので待ちます。\u003Cbr \u002F\u003Eインポートが終わるとエラーが消えています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eついでになんかサンプルを見てみます。\u003Cbr \u002F\u003E画像のサンプルを開いて実行すると、球を落とさないように箱が動いているのがわかります。こいつらは既に学習済みの\u003Cstrong\u003E&#8220;モデル&#8221;\u003C\u002Fstrong\u003Eを利用しているので最初からボールが落ちないようにAIが頑張ってます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-0.59.06-1024x861.png\" alt=\"\" class=\"wp-image-776\" width=\"405\" height=\"340\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E実はUnityで機械学習を始める前に少しpythonでチャットボットを作るというチュートリアルをやりました(完全にコピペで流しただけw）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコピペでしたが機械に学習させた結果のモデルを用意して、そのモデルを利用するという形なのはわかりました。（本当はそのモデルをUnityで使いたかったが無知すぎたのでやめた）\u003Cbr \u002F\u003EUnityでも学習させたらそのモデルを使うことになります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E学習には時間がかかるケースもあるようです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Epythonの環境を整える\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E機械学習をする環境を作ります。\u003Cbr \u002F\u003E現時点ではpythonの開発環境をつくっただけなので、環境を構築していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとは言っても簡単で、コマンドを一つ叩きます\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Epip install mlagents\u003C\u002Fp\u003E\u003Ccite\u003E色々始まります。私の環境ではワーニングのようなものが出ました。どうやら将来的にpipの依存関係が大変なことになるよというエラーらしいですが、現状は無視しておきます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.17.25-1024x529.png\" alt=\"\" class=\"wp-image-779\" width=\"525\" height=\"270\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Fksato9700\u002Fitems\u002Fec30d726a1508c7985a0\" target=\"_blank\"\u003Ehttps:\u002F\u002Fqiita.com\u002Fksato9700\u002Fitems\u002Fec30d726a1508c7985a0\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実はこのコマンドを打つ以外にも、ダウンロードしたreleaseフォルダからやるみたいなローカルインストールみたいな名前の方法もあるようですが、面倒なので一発で\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにそれはダウンロードしたフォルダを利用します。利用するのは\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eml-agentsとml-agents-envsというフォルダです。（余談です）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.36.21.png\" alt=\"\" class=\"wp-image-780\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E機械学習を実施する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eさて準備ができたので早速学習開始です。\u003Cbr \u002F\u003E学習の前に一度サンプルのシーンを実行して、ボールが落ちないようにAIが動いている様を確認しておくことをお勧めします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさぁでは機械学習を始めます。といってもコマンドを打つだけです。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Emlagents-learn \u002FUsers\u002Fxxxx\u002FDownloads\u002Fml-agents-release_7\u002Fconfig\u002Fppo\u002F3DBall.yaml &#8211;run-id=firstball\u003C\u002Fp\u003E\u003Ccite\u003Emlagents-learn 3DBall.yamlのパス &#8211;run-id=ID名\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E打つとターミナルにUnityロゴが現れます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.52.30-1024x696.png\" alt=\"\" class=\"wp-image-783\" width=\"560\" height=\"380\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にUnityでシーンを再生します。再生するシーンはさっきのサンプルのシーンで問題ありません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-1.44.06-1024x590.png\" alt=\"\" class=\"wp-image-784\" width=\"435\" height=\"250\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eサンプルを最初に確認した時はボールをうまく操作していましたが、なんと学習中はボールを落としたり、大きく揺れたりしていて、とても不安定です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがまさに学習中なわけですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしばらくそのまま再生していると、段々とボールに慣れてきます。そして最初にみたサンプルのようにボールを上手に操作するように&#8221;学習&#8221;していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがまさに機械学習というやつですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでpythonのコードは一切に飛び出していません。でも機械学習に触ることができましたね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ頃合いをみてUnityのシーンを停止します。すると学習が終了して、Saved Modelというログとモデルの保存先をログに履いてくれます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003ECopied results\u002Ffirstball\u002F3DBall\u002F3DBall-304035.nn to results\u002Ffirstball\u002F3DBall.nn.\n2020-10-02 01:50:20 INFO &#91;trainer_controller.py:84] Saved Model\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E学習した結果のモデルは\u003Cbr \u002F\u003Eml-agents-release_7 &gt; result &gt; firstball フォルダの中に入っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこいつをUnityで使ってみます。\u003Cbr \u002F\u003E名前が被っているのでMy_3DBallに変更しておきました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにサンプルのモデルは、ML-Agents &gt; Examples &gt; 3DBall &gt; TFModels の中に入っていますので、そこにMy_3DBallをコピーします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.01.54.png\" alt=\"\" class=\"wp-image-789\" width=\"471\" height=\"133\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にヒエラルキーの3DBallというオブジェクトのAgentというオブジェクトを開きます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.03.27.png\" alt=\"\" class=\"wp-image-790\" width=\"431\" height=\"185\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EインスペクタのBehavior ParametersというスクリプトにModelというフィールドがあるのでMy3DBallを選択します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F10\u002Fスクリーンショット-2020-10-02-2.04.27.png\" alt=\"\" class=\"wp-image-791\" width=\"268\" height=\"293\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生すると、同じようにボールが落ちない学習済のモデルを利用したシーンが再生されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E駆け足でしたが、導入から学習の流れまでを勉強しました！\u003C\u002Fp\u003E\n","\u003Cp\u003E正直、右も左もわからん状態から始めます。とりあえず目標はサンプルに対してサンプルの学習をさせるまで。 ちなみにサンプルはこいつです。 環境Macml-agents v1.4.0 現時点で最新版だと思いますが、これマジでど&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F10\u002F02\u002Funity%e3%81%a7%e7%84%a1%e8%ac%80%e3%81%ab%e3%82%82%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92%e3%82%92%e5%a7%8b%e3%82%81%e3%81%be%e3%81%99%e3%80%82%e3%80%90ml-agents%e3%80%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで無謀にも機械学習を始めます。【ML-Agents】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F761","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=761","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F761\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=761","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=761","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=761",750,"https:\u002F\u002Fvolkruss.com\u002F?p=750","newcakeunitychan","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F28\u002Fnewcakeunitychan\u002F","また新作のゲームを作ったので紹介させてください","\n\u003Cp\u003E前回は2Dのゲームを作ったのですが、予想以上に時間がかかった。\u003Cbr \u002F\u003EやはりUnityは3Dのほうが私レベルの作品だと素早く作れます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで今回は3Dゲームを製作しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Fvolkruss.com\u002Fcakeunitychan\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttp:\u002F\u002Fvolkruss.com\u002Fcakeunitychan\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eステージを作るのは至難の業ということでアセットの力をお借りました。\u003Cbr \u002F\u003Eなんか屋敷っぽいの欲しいなあと思っていたらセールで購入できました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EBGMや一部サウンドは魔王魂さんからお借りしています。\u003Cbr \u002F\u003E音楽：魔王魂\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fmaoudamashii.jokersounds.com\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fmaoudamashii.jokersounds.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-28-0.19.51-1024x498.png\" alt=\"\" class=\"wp-image-753\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"The Palace Modular Interior Pack\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002F_DV4XFpzJfw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eゲームについて\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EUnityちゃんがケーキを食いまくるゲームです。食った数のカウントを測ります。\u003Cbr \u002F\u003EJackというキャラクターに捕まったらゲーム終了です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-28-0.19.37-1024x495.png\" alt=\"\" class=\"wp-image-752\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E敵キャラクターの動くはUnityのAI機能であるNavgationAgentを利用しています。\u003Cbr \u002F\u003Eこれを使うと移動処理やら楽に実装できるので便利です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E戦いの中で成長する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E私のプログラミングポリシーは&#8221;戦いの中で成長する&#8221;です。これはまさにドラゴンボール超のヒットのような感じで、とにかく何かを作る中で学んでいくという方法です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ基礎がガタガタになってはいけないのである程度は基本の勉強をしますが、あとはとにかく実践で学ぶというスタイルをとっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eで、今回学んだことは、、特になかったかもしれない。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというのも今まで学んできた内容とほぼ似たようなゲームだからだ。\u003Cbr \u002F\u003Eただ、今回はいわゆる&#8221;物理演算&#8221;に必須な&#8221;Rigidbody&#8221;を使っている。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそのためコードも少し変わっていて私のお気に入りのキャラクターの移動方法にも少し変化があります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        float vertical = controller.getVertical();\n        float horizontal = controller.getHorizontal();\n        Vector3 movepos = vertical * Vector3.Scale(\n            Camera.main.transform.forward, new Vector3(1, 0, 1)).normalized * moveSpeed + horizontal * Camera.main.transform.right * moveSpeed;\n        transform.position = new Vector3(transform.position.x + movepos.x, transform.position.y, transform.position.z + movepos.z);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eどこに変化があるかというとtransform.position = new Vectro3();の箇所でy軸を自分のポジションにしているところです。今までは0にしていたのですが、これだと物理演算の挙動が組み込まれた時におかしくなります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ、当たり前のことを言ってますが、今まで下方向の意識がなかったので、、、\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはlocalPositionについて理解しました。\u003Cbr \u002F\u003Eこれは親オブジェクトからみた時の相対座標です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eよく子オブジェクトをインスペクタ上から操作する時に、座標を0,0,0にしますが、あれはlocalPositionだったということですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eトゥーンシェーダー２を使ったが、マジで使いかたわからないので適当に設定しました笑これに関してはなんの成長もありませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでも足は踏み入れた。という感じです。。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E今後について\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今後も色々とゲームを作っていく予定ですが、捕獲系はやめてバトル系とか作りたいなと思います。\u003Cbr \u002F\u003Eあとはこのサイトのコンテンツをもっと増やす(俺の知識量を増やす)というのも\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというかしっかり面白いゲーム作れないとダメだなぁ・・・\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EてかUnityちゃん可愛すぎるので、どんどん使っていきたいです。\u003C\u002Fp\u003E\n","\u003Cp\u003E前回は2Dのゲームを作ったのですが、予想以上に時間がかかった。やはりUnityは3Dのほうが私レベルの作品だと素早く作れます。 というわけで今回は3Dゲームを製作しました。 http:\u002F\u002Fvolkruss.com\u002Fcak&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F28\u002Fnewcakeunitychan\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003Eまた新作のゲームを作ったので紹介させてください\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F750","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=750","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F750\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=750","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=750","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=750",702,"https:\u002F\u002Fvolkruss.com\u002F?p=702","unityonline01","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funityonline01\u002F","Unityでオンラインゲームを作りたい","\n\u003Cp\u003E今回からUnityでオンラインゲームを作ろうと思います。\u003Cbr \u002F\u003E進捗とか技術的なことを随時メモしていこうかなと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E途中でプロジェクトが爆発したらごめんなさい。\u003Cbr \u002F\u003Eガチでオンラインのオの字もわからない状態から始めます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cspan class=\"has-inline-color has-vivid-red-color\"\u003E※あらかじめある程度動くUnityちゃんを作っています。\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにゲームを公開する予定はありません。\u003Cbr \u002F\u003Eでも作り方を学ぶためにやっていきます！\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eオンラインの入口\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E参考\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono1\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono1\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず無料である程度使えるというphotonを利用します。\u003Cbr \u002F\u003E公式サイトもシンプルという文言が全面に出ているのできっと大丈夫でしょう&#8230;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.photonengine.com\u002Fen-US\u002FPhoton\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.photonengine.com\u002Fen-US\u002FPhoton\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえずアカウント作ってCREATE A NEW APPで新規appの作成を行いました。\u003Cbr \u002F\u003EとりあえずAPP IDというのを手に入れることに成功しました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-22.43.57.png\" alt=\"\" class=\"wp-image-705\" width=\"492\" height=\"351\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAssetStoreから\u003Cstrong\u003EPUN 2 無料版\u003C\u002Fstrong\u003Eをインポートします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-23.17.33-1024x408.png\" alt=\"\" class=\"wp-image-707\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EインポートしたらAppIDの入力を求められたので入力します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-23-23.28.56.png\" alt=\"\" class=\"wp-image-708\" width=\"377\" height=\"284\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでSetupProjectをするとAsset¥Photon¥PhotonUnityNetWorkingフォルダにPhotonServerSettings.assetが作成されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eんで以下のように設定しました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-0.05.07-632x1024.png\" alt=\"\" class=\"wp-image-711\" width=\"426\" height=\"690\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E参考サイトにいい感じのコードがあるので参考にしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E※以下はまだ動きません\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing Photon.Pun;\nusing Photon.Realtime;\nusing UnityEngine;\npublic class NetWorkScene : MonoBehaviourPunCallbacks\n{\n    void Start()\n    {\n        \u002F\u002F さっきの設定に従ってマスタサーバーへ接続する\n        PhotonNetwork.ConnectUsingSettings();\n    }\n    \u002F\u002F マスタサーバーへ接続後\n    public override void OnConnectedToMaster()\n    {\n        \u002F\u002F \"test\"ルームに参加、なければ作成\n        PhotonNetwork.JoinOrCreateRoom(\"test\", new RoomOptions(), TypedLobby.Default);\n    }\n    \u002F\u002F マッチング成功したら呼ばれる\n    public override void OnJoinedRoom()\n    {\n        PhotonNetwork.Instantiate(\"Unitychan\", new Vector3(0,0,0), Quaternion.identity);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EまずPrefabを登録しておく必要があります。Resourcesフォルダーという名前のフォルダーにプレファブを投入します。名前が違っているとエラーになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.11.26-1024x44.png\" alt=\"\" class=\"wp-image-720\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eちなみにこの状態でプレイするとエラーが起きてインスタンス化できない\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EPhotonNetwork.Instantiate() can only instantiate objects with a PhotonView component. This prefab does not have one: Unitychan\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EUnitychanがPhotonViewを持っていない系らしいです。\u003Cbr \u002F\u003EというわけでプレファブのUnitychanにスクリプトをアタッチしてみます。特に設定はいじっていません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.47.56.png\" alt=\"\" class=\"wp-image-723\" width=\"357\" height=\"287\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E実行すると空前絶後の超絶怒涛のすごいアイドルUnityちゃんが表示されました。ドーナツも床に転がっていますが気にしないでください。おそらくもう一つのデバイスで再生するとUnityちゃんが2人になっているのだろう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-21.49.35.png\" alt=\"\" class=\"wp-image-724\" width=\"368\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EといわけでWebでビルドしてやってみたところ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-22.12.08.png\" alt=\"\" class=\"wp-image-727\" width=\"424\" height=\"396\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E2人登場です。しかも同じ動きをします。しかしUnityの再生側は1人しかいませんでした。まぁいいや。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさぁ、Unityちゃんが登場するともう大丈夫だ。ここまでくればあとは怖いものはないだろう。って気持ちになりますね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E無料のプランの制限\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eところでこの便利なオンライン機能ですが、無料プランには制限があるようです。\u003Cbr \u002F\u003Eというのも一つのルームに500メッセージまでという制限です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eメッセージの概念がよくわからない。出会い系でいうメッセージなら500通はなかなかのポイント消費量だがゲームでの消費量が見えにくい。\u003Cbr \u002F\u003Eとりあえず、ここでは制限が500ラブレターまでとだけ頭の片隅に置いておくことにする。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eオンライン世界の私\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eここからは資料のその２に入る\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono2\" target=\"_blank\"\u003Ehttps:\u002F\u002Fconnect.unity.com\u002Fp\u002Fpun2deshi-meruonraingemukai-fa-ru-men-sono2\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eオンラインでの私を特定する便利な関数があるとのことです。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EPhotonView.IsMin\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E先ほど2人のUnitychanを同じように操作してしまった。ブラウザ側とUnity側のUnitychanの両方を動かしたのは、オンライン世界の私を特定できていなかったからだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさてここで困ったことに、俺が今Unityちゃんを操作しているスクリプトはすでに基底クラスを持っていたw\u003Cbr \u002F\u003Eだが心配することはない基底クラス側で継承すればいい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EC#は複数の継承をサポートしていないいい例だぜまったく\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E話から逸れるといけないので現状の構成だけを載せておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは以下のようなインターフェースを定義しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\n\u002F\u002F\u002F &lt;summary\u003E\n\u002F\u002F\u002F キャラクターのインターフェースです\n\u002F\u002F\u002F &lt;\u002Fsummary\u003E\npublic interface CharacterBase\n{\n    void move();\n    void action(Collider col);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にインターフェースを実装している抽象クラスです。ここに\u003Cstrong\u003EMonoBehaviourPunCallbacks\u003C\u002Fstrong\u003Eを継承する仕組みを入れてます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing Photon.Pun;\npublic abstract class CharacterBasicMove : MonoBehaviourPunCallbacks, CharacterBase\n{\n.......\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eそして実装クラスはCharacterBasicMoveを継承しています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epublic class UnityChanMove : CharacterBasicMove\n{\n......\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eさてキャラクター動かすUpdateメソッドに条件を入れます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    private void Update()\n    {\n        if (photonView.IsMine)\n        {\n            move();\n            anim.playRun(isRun);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでオンラインの自分自身のみを動かすという概念が入りました。\u003Cbr \u002F\u003E実行するとそれが確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-22.48.50-1024x598.png\" alt=\"\" class=\"wp-image-734\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eもう1人の僕が歩き出す\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eなんだかんだいってど素人の私でもオンライン環境を確かに利用している。\u003Cbr \u002F\u003Eここまで難しいことはない。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にやることは私以外のキャラクターの更新を行うことです。\u003Cbr \u002F\u003Eといても参考サイトによると簡単に座標の更新ができるらしいのでやってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレファブのUnityちゃんを以下のようにする。というかPhotonTransformViewをアタッチしただけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-23.37.20.png\" alt=\"\" class=\"wp-image-735\" width=\"506\" height=\"618\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eすると確かに他のプレイヤーの動きが反映されていました。ちなみにドーナツを片方が食うとちゃんと消えます。\u003Cbr \u002F\u003Eただカメラの動きがちょっとおかしい。。でも今回はここまで！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちょっとオンラインゲーム作っても公開予定がないのでしばらく更新しないと思います。\u003Cbr \u002F\u003E参考サイトをみるとだいたい使い方はわかると思います。\u003C\u002Fp\u003E\n","\u003Cp\u003E今回からUnityでオンラインゲームを作ろうと思います。進捗とか技術的なことを随時メモしていこうかなと思います。 途中でプロジェクトが爆発したらごめんなさい。ガチでオンラインのオの字もわからない状態から始めます。 ※あら&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funityonline01\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityでオンラインゲームを作りたい\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",44,60,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F702","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=702","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F702\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=702","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=702","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=702",713,"https:\u002F\u002Fvolkruss.com\u002F?p=713","unity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F","Unity | Animationの終了時にメソッドを実行する","\n\u003Cp\u003E基本中の基本なのですがメモしておきます。\u003Cbr \u002F\u003EアニメーションはAnimationタブで色々と設定ができますが、よくやるのはメソッドの登録かなと思います。\u003Cbr \u002F\u003Eプラスボタン（左の黒丸）を押すと発火トリガーのようなものが登録されます（右の黒丸）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-14.03.23-1024x341.png\" alt=\"\" class=\"wp-image-715\" width=\"639\" height=\"212\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eメソッドが登録できるだけです。これはアタッチされているpublicなメソッドが登録できます。\u003Cbr \u002F\u003Eなんとこれだけです。たったこれだけでアニメーションのタイミングでメソッドを呼び出すことができるのです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-14.04.05.png\" alt=\"\" class=\"wp-image-714\" width=\"410\" height=\"137\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今作っているゲームはUnitychanがドーナツを食べるという神ゲーです。\u003Cbr \u002F\u003E今回は食べる動作のアニメーションの最後にドーナツを削除するということをやっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに登録してあるendEatAnimationメソッドはこんな感じです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public void endEatAnimation()\n    {\n        Destroy(hit);\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ehitの中にはドーナツが入ってて、アニメーション終了時にドーナツを削除（食べ終える）しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-24-16.54.59.png\" alt=\"\" class=\"wp-image-717\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eドーナツ型の腕時計ですね。わかります。\u003C\u002Fp\u003E\n","\u003Cp\u003E基本中の基本なのですがメモしておきます。アニメーションはAnimationタブで色々と設定ができますが、よくやるのはメソッドの登録かなと思います。プラスボタン（左の黒丸）を押すと発火トリガーのようなものが登録されます（右&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F24\u002Funity-animation%e3%81%ae%e7%b5%82%e4%ba%86%e6%99%82%e3%81%ab%e3%83%a1%e3%82%bd%e3%83%83%e3%83%89%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity | Animationの終了時にメソッドを実行する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F713","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=713","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F713\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=713","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=713","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=713",695,"https:\u002F\u002Fvolkruss.com\u002F?p=695","jsonloadsave","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Fjsonloadsave\u002F","JsonUtilityでセーブとロードをする","\n\u003Cp\u003E2DのTileMapゲームで厄介だったのがセーブとロード機能だった。\u003Cbr \u002F\u003EJsonUtilityを利用するとゲームのオブジェクトをJson形式で保存することができる\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず必要なのは保存対象とするものを決定しておくことです。\u003Cbr \u002F\u003E後からこれも保存したいとかあれも保存したいとかってなると、保存した結果どうやって読み込むの？っていう事態になります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eセーブデータのクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回はかなり甘いのですがidとプレイヤーの位置を保存できるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n&#91;System.Serializable]\npublic class SaveData\n{\n    public List&lt;int\u003E ids;\n    public List&lt;int\u003E mustIds;\n    public Vector2 playerPosition;\n    public string sceneName;\n    public SaveData()\n    {\n        this.ids = new List&lt;int\u003E();\n        this.mustIds = new List&lt;int\u003E();\n        this.playerPosition = new Vector2();\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれが保存対象です。このクラスがJson形式となって保存されます。\u003Cbr \u002F\u003Eポイントとしてはクラスの前に[System.Serializable]という宣言があることです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれがあるとシリアライズ可能なクラスになります。\u003Cbr \u002F\u003E仕事ではJavaを使っているのですが、Javaでも時々シリアライズってのを継承しているクラスがでてきて、なんだこれって読み飛ばしていたんですが、オブジェクトなどをファイルに保存したりネットワークで送受信できるようにすることらしいです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁこれが保存対象なので当然といえば当然かもしれませんね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eセーブを行うクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E実際に作ったゲームで使用したコードをそのまま掲載します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing System.IO;\npublic class SaveJson : MonoBehaviour\n{\n    const string SYSTEM_DATA_PATH = \"save.txt\";\n    public void save()\n    {\n        SaveData savedata = new SaveData();\n        \u002F\u002F最初に空にする\n        foreach(int id in savedata.ids)\n        {\n            savedata.ids.Remove(id);\n        }\n        foreach(int id in savedata.mustIds)\n        {\n            savedata.mustIds.Remove(id);\n        }\n        \u002F\u002F 非活性のアイテムリストを取得する\n        setItemIdList(savedata);\n        \u002F\u002F  プレイヤーの場所を保存する\n        setPlayerPosition(savedata);\n        savedata.sceneName = UnityEngine.SceneManagement.SceneManager.GetActiveScene().name;\n        \u002F\u002FJson形式で保存する\n        string idsString = JsonUtility.ToJson(savedata);\n        StreamWriter sw = new StreamWriter(Application.dataPath + SYSTEM_DATA_PATH);\n        \u002F\u002FDebug.Log(Application.dataPath);\n        sw.Write(idsString);\n        sw.Close();\n        Debug.Log(\"Save Finished!\");\n        TalkEventManager talkEventManager = GameObject.FindGameObjectWithTag(\"GM\").GetComponent&lt;TalkEventManager\u003E();\n        string&#91;] messages = { \"セーブしました\" };\n        talkEventManager.execute(\"\", messages);\n    }\n    private void setItemIdList(SaveData data)\n    {\n        GameObject parrent = GameObject.FindGameObjectWithTag(\"ItemParrent\");\n        foreach(Transform child in parrent.transform)\n        {\n            \u002F\u002F  非活性の要素のIDを全て取得する\n            \u002F\u002F  Item Event\n            if (!child.gameObject.activeInHierarchy)\n            {\n                data.ids.Add(child.gameObject.GetComponent&lt;EventItem\u003E().getItem().id);\n            }\n        }\n        GameObject mustparrent = GameObject.FindGameObjectWithTag(\"MustParrent\");\n        foreach(Transform child in mustparrent.transform) {\n            if (!child.gameObject.activeInHierarchy)\n            {\n                data.mustIds.Add(child.gameObject.GetComponent&lt;MustTalkEvent\u003E().id);\n            }\n        }\n    }\n    private void setPlayerPosition(SaveData data)\n    {\n        data.playerPosition = GameObject.FindGameObjectWithTag(\"Player\").transform.position;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eすみません長いのですが、やっていることは単純で、SaveDataクラスを初期化したら、SaveDataクラスのデータをどんどん設定していってる感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスをインスタンス化する\u003Cbr \u002F\u003ESaveData savedata = new SaveData();\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこんな感じでSaveDataクラスの設定を行う\u003Cbr \u002F\u003Esavedata.sceneName = UnityEngine.SceneManagement.SceneManager.GetActiveScene().name;\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Ejson形式(文字列)にする\u003Cbr \u002F\u003Estring idsString = JsonUtility.ToJson(savedata);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eストリームライターを利用して保存する\u003Cbr \u002F\u003EStreamWriter sw = new StreamWriter(Application.dataPath + SYSTEM_DATA_PATH);\u003Cbr \u002F\u003Esw.Write(idsString);\u003Cbr \u002F\u003Esw.Close();\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eロードを行うクラス\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eこれも実際に書いたコードをそのまま掲載します。道Jsonとなっているのは触れないでくださいね！\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing UnityEngine;\nusing System.IO;\npublic class RoadJson : MonoBehaviour\n{\n    const string SYSTEM_DATA_PATH = \"save.txt\";\n    public void loadData()\n    {\n        if (!this.existsFile())\n        {\n            Debug.Log(\"ファイルが見つかりませんでした。\");\n            return;\n        }\n        Debug.Log(\"JSONファイルのロードを開始します\");\n        StreamReader sr = new StreamReader(Application.dataPath + SYSTEM_DATA_PATH);\n        string readJson = sr.ReadToEnd();\n        sr.Close();\n        ItemButtonManager ibm = GameObject.FindGameObjectWithTag(\"GM\").GetComponent&lt;ItemButtonManager\u003E();\n        SaveData data = JsonUtility.FromJson&lt;SaveData\u003E(readJson);\n        GameObject parrent = GameObject.FindGameObjectWithTag(\"ItemParrent\");\n        foreach (Transform child in parrent.transform)\n        {\n            if (data.ids.Contains(child.gameObject.GetComponent&lt;EventItem\u003E().getItem().id))\n            {\n                child.gameObject.SetActive(false);\n                ibm.storeItem(child.gameObject.GetComponent&lt;EventItem\u003E().getItem());\n            }\n        }\n        GameObject mustparrent = GameObject.FindGameObjectWithTag(\"MustParrent\");\n        foreach (Transform child in mustparrent.transform)\n        {\n            if (data.mustIds.Contains(child.gameObject.GetComponent&lt;MustTalkEvent\u003E().id))\n            {\n                child.gameObject.SetActive(false);\n            }\n         }\n        GameObject player = GameObject.FindGameObjectWithTag(\"Player\");\n        player.transform.position = data.playerPosition;\n    }\n    \u002F\u002F\u002F &lt;summary\u003E\n    \u002F\u002F\u002F ファイルが存在するかどうか\n    \u002F\u002F\u002F 存在する場合はTrueを返します。\n    \u002F\u002F\u002F &lt;\u002Fsummary\u003E\n    \u002F\u002F\u002F &lt;returns\u003E&lt;\u002Freturns\u003E\n    private bool existsFile()\n    {\n        if (File.Exists(Application.dataPath + SYSTEM_DATA_PATH)){\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれもやっていることは単純です。\u003Cbr \u002F\u003EまずはSaveDataクラスを文字列からオブジェクトにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは文字列を読み込む\u003Cbr \u002F\u003EStreamReader sr = new StreamReader(Application.dataPath + SYSTEM_DATA_PATH);\u003Cbr \u002F\u003Estring readJson = sr.ReadToEnd();\u003Cbr \u002F\u003Esr.Close();\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスに変換する\u003Cbr \u002F\u003ESaveData data = JsonUtility.FromJson(readJson);\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESaveDataクラスの設定を反映させる\u003Cbr \u002F\u003Eplayer.transform.position = data.playerPosition;\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eあとがき\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eゲームを作ろうって思って勉強していると、色々な情報に出会います。Json形式で保存するというのもその一つです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし実際にゲームを作るときは&#8221;テスト&#8221;なんて文字列を保存することはありません。実際に保存するのは&#8221;セーブデータ&#8221;です。\u003Cbr \u002F\u003Eなのでどうやってロードするのか？まで考えてやらないとダメですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして、後から後から機能を追加しようってなると、セーブデータにも影響します。\u003Cbr \u002F\u003Eなのでゲームを作るときは必要最低限のものは予め決めておくことが重要。変化に強い設計をすればいいんだろうけど、、私にはまだ難しい。\u003C\u002Fp\u003E\n","\u003Cp\u003E2DのTileMapゲームで厄介だったのがセーブとロード機能だった。JsonUtilityを利用するとゲームのオブジェクトをJson形式で保存することができる まず必要なのは保存対象とするものを決定しておくことです。後か&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Fjsonloadsave\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EJsonUtilityでセーブとロードをする\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",36,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F695","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=695","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F695\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=695","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=695","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=695",691,"https:\u002F\u002Fvolkruss.com\u002F?p=691","unity2dtilemapunk","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Funity2dtilemapunk\u002F","Unityの2DTileMapを利用したゲームを作った","\n\u003Cp\u003Eゲームタイトル\u003Cbr \u002F\u003ENAIKIOKU\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EプレイURL\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eゲームのルール\u003Cbr \u002F\u003EKボタン 調べる、会話を進める\u003Cbr \u002F\u003EMボタン メニューを開く\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E素材\u003Cbr \u002F\u003Eドット絵世界　\u003Ca rel=\"noreferrer noopener\" href=\"http:\u002F\u002Fyms.main.jp\" target=\"_blank\"\u003Ehttp:\u002F\u002Fyms.main.jp\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-22-21.14.04-1024x568.png\" alt=\"\" class=\"wp-image-692\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityの2Dということで、いつもと違う。ぶっちゃけていうと3Dのほうが作りやすい。もう2Dゲームは作りたく無い。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EJsonUtilityを利用したセーブとロードについても一通りやったがリリースには含めないことにしましたが、一通り使い方とかは勉強しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、とにかく完成させるためにあらゆる要素を排除しました。\u003Cbr \u002F\u003E最初は動き回る敵キャラを作ろうとか、動かせるオブジェクトを作ろうとか色々考えていましたが、欲しかった要素は全て無くしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eたぶんやってたら完成しないと思います。。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた、最終的にどうしてもこれが必要だってなってソースがどんどん汚くなりました笑\u003Cbr \u002F\u003Eなのである程度最初に必要最低限の昨日は決めておいて、設計してからやったほうがいいと思いました。\u003C\u002Fp\u003E\n","\u003Cp\u003EゲームタイトルNAIKIOKU プレイURLhttps:\u002F\u002Fvolkruss.com\u002Fnaikioku\u002F ゲームのルールKボタン 調べる、会話を進めるMボタン メニューを開く 素材ドット絵世界　http:\u002F\u002Fyms.ma&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F22\u002Funity2dtilemapunk\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityの2DTileMapを利用したゲームを作った\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F691","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=691","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F691\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=691","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=691","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=691",668,"https:\u002F\u002Fvolkruss.com\u002F?p=668","tilemapunit1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F05\u002Ftilemapunit1\u002F","【Unity】Tilemapを使ってゲームを作るZE【2D】","\n\u003Cp\u003Eずっと3Dゲームを作ってきましたが、ここから2Dゲームを作ろうと思います。\u003Cbr \u002F\u003E3Dゲームに拘ってきた理由はアセットが沢山あったからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回2Dで作るのはTilemapを使ったゲームです。\u003Cbr \u002F\u003E俺自身があんまり触ったことないので、素人目線から記事を書いていきます！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E2Dキャラの動かし方とかもあまりわからない致命的な状態ですが、とりあえずタイルマップということで画像を用意します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E画像はドット絵世界さんからDLしました。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"http:\u002F\u002Fyms.main.jp\u002Fdotartworld\u002Findex.html\" target=\"_blank\"\u003Ehttp:\u002F\u002Fyms.main.jp\u002Fdotartworld\u002Findex.html\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eダウンロードしてきたら、画像の設定をしていきます。一枚のスプライトシートと呼ばれる画像から切り抜いて複数の画像にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ESpriteModeをMultipleに変更します。\u003Cbr \u002F\u003EそしてPixelsPerUnitを32に変更します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.47.39-1024x524.png\" alt=\"\" class=\"wp-image-672\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にSpriteEditorをクリックして画像を切り抜いていきます。\u003Cbr \u002F\u003ESliceをクリックして32*32でSliceをすると切り抜きが完了です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.47.09-1024x808.png\" alt=\"\" class=\"wp-image-673\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にタイルマップを作ります。\u003Cbr \u002F\u003EこれでGridとTilemapが作られます。次にパレットを作ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.55.44.png\" alt=\"\" class=\"wp-image-675\" width=\"424\" height=\"212\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ETile Palette画面を表示します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-04-23.56.31.png\" alt=\"\" class=\"wp-image-674\" width=\"402\" height=\"477\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ETilePalette画面が開くので左側のプルダウンから、Create New Paletteを押してパレットをどこに保存するか聞かれるので適当なフォルダにパレットを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E先ほど分割した画像をパレットにドラッグ&amp;ドロップします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.06.46-1024x532.png\" alt=\"\" class=\"wp-image-676\" width=\"580\" height=\"301\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E選択を押しすとパレットにどんどんタイルが追加されていきます。\u003Cbr \u002F\u003Eではどんどん塗っていきます。こんな感じで。\u003Cbr \u002F\u003EちなみにActive Tilemapというのが塗る対象のタイルマップです。これをレイヤーに見立てればオブジェクトレイヤーとかとして分けられることができるかなと。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.16.57-1024x357.png\" alt=\"\" class=\"wp-image-678\" width=\"611\" height=\"213\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eではオブジェクトレイヤーを作ります。Gridのところで新規にTilemapを追加して、名前をObjectLayerというかっこいい名前にします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EアクティなタイルマップをObjectLayerにして塗っていきます。\u003Cbr \u002F\u003E今回塗る箇所はプレイヤーとの当たり判定を起こす箇所です（主に物など）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.23.37-1024x313.png\" alt=\"\" class=\"wp-image-679\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eセンスあるでしょ？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれで実行するとオブジェクトレイヤーが埋もれてしまっていますので、そこを修正します。\u003Cbr \u002F\u003EObjectLayerのTilemapRendererのOrder in Layerの数値を上げます9くらいにしておきました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.24.57-1024x744.png\" alt=\"\" class=\"wp-image-680\" width=\"520\" height=\"378\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで実行するといい感じの部屋が描画されています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.26.03.png\" alt=\"\" class=\"wp-image-681\" width=\"457\" height=\"279\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eプレイヤーを登場させましょう\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eプレイヤーにはこれから作るスプリプトと、BoxColider2DとRigidBody2Dをアタッチします。\u003Cbr \u002F\u003EさらにRigidBody2Dのプロパティは以下のようにしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.31.04.png\" alt=\"\" class=\"wp-image-683\" width=\"457\" height=\"588\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eスクリプトを以下のようにします\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class Movement : MonoBehaviour\n{\n    private void Update()\n    {\n        float vertical = 0;\n        float horizontal = 0;\n        horizontal = Input.GetAxisRaw(\"Horizontal\");\n        vertical = Input.GetAxisRaw(\"Vertical\");\n        Vector2 currentVec = transform.position;\n        currentVec.x += horizontal * 0.03f;\n        currentVec.y += vertical * 0.03f;\n        transform.position = currentVec;\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にObjectLayerにTilemapCollider2Dをアタッチします。\u003Cbr \u002F\u003Eこれで実行するとプレイヤーはObjectLayerとあたり判定がおきて通過できないのが確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F09\u002Fスクリーンショット-2020-09-05-0.34.42-1024x525.png\" alt=\"\" class=\"wp-image-685\" width=\"533\" height=\"273\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回はここまで\u003C\u002Fp\u003E\n","\u003Cp\u003Eずっと3Dゲームを作ってきましたが、ここから2Dゲームを作ろうと思います。3Dゲームに拘ってきた理由はアセットが沢山あったからです。 今回2Dで作るのはTilemapを使ったゲームです。俺自身があんまり触ったことないので&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F09\u002F05\u002Ftilemapunit1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】Tilemapを使ってゲームを作るZE【2D】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",45,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F668","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=668","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F668\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=668","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=668","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=668",630,"https:\u002F\u002Fvolkruss.com\u002F?p=630","kaizokumusoudehanai","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F31\u002Fkaizokumusoudehanai\u002F","海賊無双みたいなゲームを想像だけで作ったらカオスなゲームになった","\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"海賊無双みたいなゲームを想像だけで作ったら大変なことになった\" width=\"750\" height=\"563\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FVqmYHZDZX9k?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今までAI機能だとか武器を拾うだとかは、このゲームを作るためにやっていました。\u003Cbr \u002F\u003E私は海賊無双というゲームがやりたくてしかたなかったです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eですが当時PS4を持っていなくて諦めた記憶があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそれからというものの、ゲームといえばスプラトゥーンになってしまい、あの頃の気持ちを思い出すために、今回このゲームを作りました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブログでは技術的なお話を少しします。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E敵キャラクターの動きは全てAI Behaviors\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E前回の記事で勉強も兼ねて紹介しました。実はこのアセットに関する情報は少ない上に古い情報ばかりだったので大変苦労しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eやってみるとわかるのですが、基本的にNavigation機能を利用しまくったようなシステムです。\u003Cbr \u002F\u003Eコードで書くのがだるいという場合や、そこまでこだわったシステムを作らない場合は採用する価値がおおいにあります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E例えばアニメーションの遷移も指定できてしまうので、アニメーションコントローラーも割りかしスッキリします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれ攻撃力とか体力とかも設定できて、スクリプトからもアクセスできるようですが、今回は使用しませんでした。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E当たり判定はActiveの切り替え\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E全ての当たり判定はActiveを切り替えて行なっています。\u003Cbr \u002F\u003E攻撃時はコライダーのついたゲームオブジェクトをActiveに切り替えて当たり判定を行なっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-31-0.46.47-1024x539.png\" alt=\"\" class=\"wp-image-635\" width=\"595\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E例えば剣でいうと持っているときは当たり判定がおきません。理由は当たり判定用のゲームオブジェクトがActiveになっていないからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただしアニメーションを開始したらActiveに切り替えて敵との当たり判定を行なっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-31-0.49.27-1024x606.png\" alt=\"\" class=\"wp-image-636\" width=\"642\" height=\"380\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eコライダーは割と大きめに設定しました。そのほうが無双っぽいと思ったので。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E変なゲームになりましたが、やってみてください＞＜\u003C\u002Fp\u003E\n","\u003Cp\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitymusou\u002F 今までAI機能だとか武器を拾うだとかは、このゲームを作るためにやっていました。私は海賊無双というゲームがやりたくてしかたなかったです。 ですが当時PS4を&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F31\u002Fkaizokumusoudehanai\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E海賊無双みたいなゲームを想像だけで作ったらカオスなゲームになった\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F630","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=630","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F630\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=630","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=630","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=630",593,"https:\u002F\u002Fvolkruss.com\u002F?p=593","aibehaviorhowtouse","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F30\u002Faibehaviorhowtouse\u002F","【無料アセット】AI Behaviorを使う【初心者】","\n\u003Cp\u003Eこの記事は\u003Cstrong\u003EAI Behavior\u003C\u002Fstrong\u003Eを使いたいので調査の記録です。正直このアセットの使い方全く知らない状態での調査になりますので、間違っている内容がある可能性が非常に可能性として、まぁ可能性としてある可能性があります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E一応PDFのマニュアルを読みつつ進めます。引用箇所はグーグル翻訳かけたった箇所ですw\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E調査対象　08a_state_ranged_attack_and_move\u003Cbr \u002F\u003Eパス Assets\u002FAIBehavior\u002FScenes\u002FVideo_Examples\u002FStates\u002F08_state_ranged_attack.unity\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこのシーンは敵キャラがなんか丸い物体を投げてくる。敵キャラから離れると追いかけてくる。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E基本情報の確認\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずはどんなステートが登録されているか確認\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.06.25.png\" alt=\"\" class=\"wp-image-594\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E再生してみるとIdleとSeekとRangedAttackが使われている。Fleeはよくわからん。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず、Idleはアイドル状態で他のステータスへの遷移を行なっている。\u003Cbr \u002F\u003ESeekが追っかけてくる。攻撃は攻撃のステートのやつ。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EIdleステートのTriggersを調査\u003C\u002Fh2\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.08.14.png\" alt=\"\" class=\"wp-image-595\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E一番下のChange to Stateが次のステートへの遷移で、その条件が上に書いてあると思う。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.12.42.png\" alt=\"\" class=\"wp-image-598\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそれでいうと、一応Fleeステートへの遷移情報もある。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E3.4.2 Beyond distance trigger\u003C\u002Fp\u003E\u003Ccite\u003E3.4.2距離を超えたトリガー\u003Cbr \u002F\u003EAIターゲットタグのあるGameObjectが指定された「距離」よりも遠いかどうかを確認します。 「チェックモード」は、タグの付いたゲームオブジェクトまたはそのすべてが距離を超えているかどうかを指定します。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E3.4.21 Within distance trigger\u003C\u002Fp\u003E\u003Ccite\u003E3.4.21距離内トリガー\u003Cbr \u002F\u003E指定されたタグを持つGameObjectが指定された距離よりも近いかどうかをチェックします。 「チェックモード」は、タグ付きのゲームオブジェクトまたはそれらすべてが距離内にあるかどうかを指定します。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eプレイヤーを判断しているのはGeneral AP Propertiesでタグ(Player)を指定しているのかなと。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.22.06.png\" alt=\"\" class=\"wp-image-601\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003ESeekステートの調査\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E走って追いかけてくるときのステート\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.24.11.png\" alt=\"\" class=\"wp-image-603\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E距離が10になったら攻撃ステートへ遷移している。またAnimationsでアニメーションを設定しているのがわかる。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E2.3.3 Seek State\u003C\u002Fp\u003E\u003Ccite\u003E2.3.3シーク状態\u003Cbr \u002F\u003E&#8220;No Seek Target Transition&#8221;「シークターゲット遷移なし」は、ターゲットがない場合に変化する状態です。\u003Cbr \u002F\u003E&#8220;No Movement Transition&#8221;は、AIが何らかの理由（たとえば、ターゲットに到達できないなど）で停止したときに発生する状態です。\u003Cbr \u002F\u003E「Seek Target Reached Transition」は、ターゲットに到達したときに変化する状態です（たとえば、AIがプレイヤーを追跡していて、プレイヤーに到達したときに攻撃状態に変わります）。\u003Cbr \u002F\u003E「Distance To Target Threshold」は、AIがターゲットに近づく距離です。 有効にすることもできます\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003ERangedAttackステートの調査\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eトリガーなどの設定はほとんどない（なんてこったー）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.31.25.png\" alt=\"\" class=\"wp-image-606\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eその代わりAttackPropertiesが結構書いてあります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-19.32.18.png\" alt=\"\" class=\"wp-image-608\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eダメージやら書いてあるます。でも一番大事なのは一番下かな？メソッド呼び出し設定ですね。\u003Cbr \u002F\u003EExample Attack Compoenentってスクリプトがアタッチされています。このスクリプトのRangedAttackメソッドを呼んでいるようです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E攻撃タイミングはアニメーションによるのかな？\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E2.3.5 Attack State &amp; Mecanim Attack State\u003C\u002Fp\u003E\u003Ccite\u003E「攻撃ベース」は、「攻撃方法」が呼び出されるタイミングを定義します。これは、アニメーションの特定のポイントまたは時間間隔に基づくことができます。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003E応用編使ってみる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eというわけで、ちょっと使ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今、開発中のゲームなので色々記載されていますが、気にしないでください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EAI管理したいオブジェクトを選択して、ToolsからAI Behavior &gt; Mecanim Setupを選択すると、色々と勝手にアタッチされます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.19.12.png\" alt=\"\" class=\"wp-image-613\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E地面にはNavigationをbakeして歩けるようにしておきます。\u003Cbr \u002F\u003E次にAIにNav Mesh Agentをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E最初に色々なステートが付いているのでIdleとAttackとSeekとFlee以外を消しておきます。\u003Cbr \u002F\u003E（画像はIdleに-してますがIdleは残しておいてください）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.26.16.png\" alt=\"\" class=\"wp-image-615\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとりあえずIdleからAttackにしてみようと思います。（まずは簡単なところからいきますw）\u003Cbr \u002F\u003EIdleのEidtを押してIdleの編集をします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E下記のようなトリガーを追加します。\u003Cbr \u002F\u003Eとりあえずトリガー条件をWithinDistanceTriggerにしてください。画像のDistanceが0になっていますが、10にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.38.53.png\" alt=\"\" class=\"wp-image-616\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eその前にアニメーションの設定を行います。AI Animation Stateスクリプトをみます。これはアニメーションを管理するスクリプトです。ここに登録されているアニメーションのステート名をレイヤー.ステート名で指定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.50.51.png\" alt=\"\" class=\"wp-image-618\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそしたら、いったりきたりになりますが、Idleの設定に持っどってAnimationsに先ほど追加したアニメーションを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-20.46.27.png\" alt=\"\" class=\"wp-image-617\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次に攻撃のステートの設定をします。\u003Cbr \u002F\u003E攻撃のAnimationsは攻撃用のステートにしておきます。攻撃用のメソッドを追加しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれを追加にするにはAIBehavior.AttackDataを引数にとったメソッドが必要らしいです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EEnemyAITest.cs\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\nusing UnityEngine;\nusing AIBehavior;\npublic class EnemeyAITest : MonoBehaviour\n{\n    public void Test(AttackData attackData)\n    {\n        Debug.Log(\"AI-TEST\");\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EこれをAIキャラクターにアタッチしておきます。そうするとメソッドが選択できるようになります。\u003Cbr \u002F\u003Eかならずpublicメソッドにしてください。参照できません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-29-21.21.04.png\" alt=\"\" class=\"wp-image-619\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eよーし実行実行！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eうーんステートが変化してるんだけよくわからんw\u003Cbr \u002F\u003Eというわけで、私の場合はステート変化しませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E見直す点はここです。\u003Cbr \u002F\u003Eアニメーションの設定スクリプトでCross Fade In とCross Fade Outにチェックを入れました。\u003Cbr \u002F\u003Eあと、アニメーションのステートNameは空白に注意してくださいw\u003Cbr \u002F\u003E私は空白があってうまく動いていませんでした。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-0.46.27.png\" alt=\"\" class=\"wp-image-622\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでうまく行きました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E近寄ると攻撃してくる\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-0.48.51.png\" alt=\"\" class=\"wp-image-623\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんとなくコツというか基本操作は覚えたので、ゴリゴリ組んでいけそうな気がする・・・？\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E1.4.2 Mecanim animations\u003C\u002Fp\u003E\u003Ccite\u003E追加のコードなしでAIがアニメーションを完全に制御できるようにするには、「クロスフェードイン」および「クロスフェードアウト」オプションをオンにする必要があります。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003E追記メモ\u003C\u002Fh2\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EQ. 攻撃時に意図しない動きになる\u003C\u002Fp\u003E\u003Ccite\u003EA. AIBehabiorsの攻撃ステートがMecanimAttackStateになっていることを確認します。\u003Cbr \u002F\u003E例えば、普通のAttackStateだと私の場合はダメでした。\u003Cbr \u002F\u003E\u003Cbr \u002F\u003Eまた、攻撃ステートのFind Visible Target Onlyのチェックも外しておくと良いかも。\u003Cbr \u002F\u003E\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-7.59.56-1.png\" alt=\"\" class=\"wp-image-627\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-30-8.01.44.png\" alt=\"\" class=\"wp-image-628\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003Eこの記事はAI Behaviorを使いたいので調査の記録です。正直このアセットの使い方全く知らない状態での調査になりますので、間違っている内容がある可能性が非常に可能性として、まぁ可能性としてある可能性があります。 一応&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F30\u002Faibehaviorhowtouse\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【無料アセット】AI Behaviorを使う【初心者】\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",14,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F593","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=593","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F593\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=593","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=593","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=593",580,"https:\u002F\u002Fvolkruss.com\u002F?p=580","kantanbenrioisii","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F","簡単に複数のアイテムを入れ替える処理","\n\u003Cp\u003E前回の記事ではアイテム側にスクリプトを持たせていました。あれはあれでいいんですけど\u003Cbr \u002F\u003Eアイテムが複数あった場合はうまくいきません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eということでアイテムを入れ替えるような処理をしていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはUnityちゃんに空のゲームオブジェクトをつけてコライダーとRigidbodyを設定していきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.00.21-1-1024x403.png\" alt=\"\" class=\"wp-image-582\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eアイテム側はスクリプト消しておきます。\u003Cstrong\u003EそしてItemというタグ\u003C\u002Fstrong\u003Eをつけておいてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.01.18-1024x525.png\" alt=\"\" class=\"wp-image-583\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを作成します。前回のスクリプトと似ているので大丈夫です。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnitychanItemManager : MonoBehaviour\n{\n    \u002F\u002F アイテムを持っているかどうか\n    private bool hasItem = false;\n    private const string ITEM_TAG_NAME = \"Item\";\n    private GameObject currentWeapon;\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.R))\n        {\n            \u002F\u002Fアイテムを持っている時に、リリースする\n            if(hasItem)\n            {\n                ReleaseItem();\n            }\n        }\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if(col.tag == ITEM_TAG_NAME)\n        {\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002F アイテムをすでに所持している場合は拾えない。\n                if (hasItem)\n                {\n                    return;\n                }\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                col.gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                col.transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                col.transform.localRotation = Quaternion.Euler(0, 100, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.hasItem = true;\n                this.currentWeapon = col.gameObject;\n            }\n        }\n    }\n    \u002F**\n     *\n     * 現在、手にしている武器を親(右手)から離す処理。\n     *\n     * *\u002F\n    private void ReleaseItem()\n    {\n        \u002F\u002F 親から外す\n        this.currentWeapon.transform.parent = null;\n        this.currentWeapon = null;\n        this.hasItem = false;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E説明はコメントで書いておきましたのでざっくり説明します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EアイテムAを持っているときはリリースしないと別のアイテムを取得できません。\u003Cbr \u002F\u003EリリースはRボタンを押すとできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれを先ほどUnitychanの子要素に追加した空のゲームオブエジェクトにアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E銃を持った後\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.04.37.png\" alt=\"\" class=\"wp-image-584\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eリリースして剣を持つ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-28-0.05.20.png\" alt=\"\" class=\"wp-image-586\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E前回の記事ではアイテム側にスクリプトを持たせていました。あれはあれでいいんですけどアイテムが複数あった場合はうまくいきません。 https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F と&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E簡単に複数のアイテムを入れ替える処理\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",72,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F580","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=580","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F580\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=580","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=580","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=580",553,"https:\u002F\u002Fvolkruss.com\u002F?p=553","itemsetsuge","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F","わかりやすい！アイテムを拾ってキャラクターにセットするまで","\n\u003Cp\u003Eこの記事には最新版があります\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eかっこいい剣を見つけたので使ってみようと思う。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.28.50-1024x443.png\" alt=\"\" class=\"wp-image-554\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E早速地面に置いてみた。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.29.44.png\" alt=\"\" class=\"wp-image-555\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eかっっけー！！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eボックスコライダーをつけます。さらにトリガーにしておきます。\u003Cbr \u002F\u003Eこれでプレイヤーがこの範囲に入った時に、武器をセットするかしないか選択できるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-10.32.43-1024x682.png\" alt=\"\" class=\"wp-image-557\" width=\"503\" height=\"334\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして当たり判定を行う前にUnitychanにRigidbodyをつけておきます。今回はGravityを0にしています。あと、コライダーもつけておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-11.04.26.png\" alt=\"\" class=\"wp-image-559\" width=\"359\" height=\"552\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ItemGetEvent : MonoBehaviour\n{\n    private GameObject player;\n    private const string UNITYCHAN = \"Unitychan\";\n    private bool setedItem = false;\n    private void Start()\n    {\n        \u002F\u002F プレイヤーにUnitychanのタグをつけておいてください\n        player = GameObject.FindGameObjectWithTag(UNITYCHAN);\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if (this.setedItem)\n        {\n            return;\n        }\n        if(col.tag == UNITYCHAN)\n        {\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n            }\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eさぁ、これで剣に近づいてGボタンを押します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-16.57.28.png\" alt=\"\" class=\"wp-image-567\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E剣を持つことに成功です。\u003Cbr \u002F\u003E剣の角度を変えたい場合はスクリプトを以下のようにしてください\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                transform.localRotation = Quaternion.Euler(0, 180, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n            }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-17.05.50.png\" alt=\"\" class=\"wp-image-569\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eヤンキーみたいに剣を持つことに成功です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E剣に近寄ったら持てることを知らせる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E近寄ったら持てるということをユーザーに知らせましょう。\u003Cbr \u002F\u003Eちょっと荒技感ありますが、とりあえずやります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずはエフェクトを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.56.12-1024x378.png\" alt=\"\" class=\"wp-image-572\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの中のエフェクトを剣の子要素にして非アクティブにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.57.08.png\" alt=\"\" class=\"wp-image-573\" width=\"289\" height=\"147\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にスクリプトを編集します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class ItemGetEvent : MonoBehaviour\n{\n    private GameObject player;\n    private const string UNITYCHAN = \"Unitychan\";\n    private bool setedItem = false;\n    &#91;SerializeField]\n    private GameObject effect;\n    private void Start()\n    {\n        \u002F\u002F プレイヤーにUnitychanのタグをつけておいてください\n        player = GameObject.FindGameObjectWithTag(UNITYCHAN);\n    }\n    private void OnTriggerStay(Collider col)\n    {\n        if (this.setedItem)\n        {\n            return;\n        }\n        if(col.tag == UNITYCHAN)\n        {\n            if(!this.setedItem)\n            {\n                this.effect.SetActive(true);\n            }\n            if (Input.GetKeyDown(KeyCode.G))\n            {\n                \u002F\u002Funityちゃんの右手を取得する\n                GameObject hand = GameObject.Find(\"Character1_RightHandMiddle2\");\n                gameObject.transform.parent = hand.transform;\n                \u002F\u002F右手の位置にポジションを設定する\n                transform.position = hand.transform.position;\n                \u002F\u002Fローカルの回転を変更する\n                transform.localRotation = Quaternion.Euler(0, 180, 0);\n                \u002F\u002Fアイテムを設定済にする\n                this.setedItem = true;\n                this.effect.SetActive(false);\n            }\n        }\n    }\n    private void OnTriggerExit(Collider col)\n    {\n        if (col.tag == UNITYCHAN)\n        {\n             this.effect.SetActive(false);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E近寄るとエフェクトが発火します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-27-19.51.54-1024x456.png\" alt=\"\" class=\"wp-image-574\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003Eこの記事には最新版があります⇨https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F28\u002Fkantanbenrioisii\u002F かっこいい剣を見つけたので使ってみようと思う。 早速地面に置いてみた。 かっっけー！！ ボ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F27\u002Fitemsetsuge\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003Eわかりやすい！アイテムを拾ってキャラクターにセットするまで\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",73,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F553","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=553","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F553\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=553","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=553","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=553",537,"https:\u002F\u002Fvolkruss.com\u002F?p=537","unitymuitemukimuki","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Funitymuitemukimuki\u002F","【Unity】向いてる方向に動くという狂人ムーブを救いたい","\n\u003Cp\u003E勉強用です。一緒にどうぞ^^^;\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.08.48.png\" alt=\"\" class=\"wp-image-539\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E私たちはカメラマンだ。このモデルが向いてる方向に歩いてくるということは、カメラマンに近寄ってくるということだ。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class MoveTest : MonoBehaviour\n{\n    \u002F\u002F Update is called once per frame\n    void Update()\n    {\n        Debug.Log(transform.forward);\n        transform.position += transform.forward * Time.deltaTime;\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでカメラマンに近寄ってくる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにtransform.forwardで得られるあたいは\u003Cbr \u002F\u003E(0,0,1)だこれはZが1ですね。つまりZ方向に向かって移動しているのがわかる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.43.18-1024x487.png\" alt=\"\" class=\"wp-image-542\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして回転させると、カメラマンからどんどん離れていく。なぜならば、zがマイナス値だからだ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.46.41-1024x481.png\" alt=\"\" class=\"wp-image-544\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度は上ボタンを押して移動するようにしよう。そしてさらにカメラマンの位置も変更しよう\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.51.25.png\" alt=\"\" class=\"wp-image-545\" width=\"526\" height=\"531\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eさぁ実行して上キーを押すとなんとUnityちゃんが近寄ってくるではないか\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-21.52.29-1024x468.png\" alt=\"\" class=\"wp-image-546\" width=\"527\" height=\"241\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E何もおかしいことはない。いやおかしい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなんでかっていうと、上ボタンを押しているのにカメラマンに近寄ってきているからです。これスプラトゥーンでいったら上方向の入力をしているのに、後退している動きです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eだから、カメラ起点にした動きにしないとダメだったんです。\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもしこの時、カメラの向いている方向に動くならば、Unityちゃんはカメラマンから遠ざかっていました。でもゲームならこれが正しい動きです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E２Dゲームとかならアリよりのアリかと思います。しかしカメラがプロのアングルですごい撮影をするようなゲームではこの動きはいけません。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eカメラの向いている方向に動かす\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E以下は完全に自分の試験用です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコード\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class MoveTest : MonoBehaviour\n{\n    \u002F\u002F Update is called once per frame\n    void Update()\n    {\n        Debug.Log(transform.forward);\n        if (Input.GetKey(\"up\")) {\n            transform.position += Camera.main.transform.forward * Time.deltaTime;\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E結果逆の結果になりました。上ボタンを押すとどんどん遠ざかっていく、正しい動きになりました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-22.00.48-1024x549.png\" alt=\"\" class=\"wp-image-550\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今回のポイントはtransform.forwardだ。\u003Cbr \u002F\u003Eこれはオブジェクトの向いている方向を取得できるので、カメラの向いてる方向も取得できるってわけだ。\u003C\u002Fp\u003E\n","\u003Cp\u003E勉強用です。一緒にどうぞ^^^; 私たちはカメラマンだ。このモデルが向いてる方向に歩いてくるということは、カメラマンに近寄ってくるということだ。 これでカメラマンに近寄ってくる。 ちなみにtransform.forwar&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Funitymuitemukimuki\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】向いてる方向に動くという狂人ムーブを救いたい\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",25,62,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F537","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=537","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F537\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=537","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=537","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=537",518,"https:\u002F\u002Fvolkruss.com\u002F?p=518","procameramanero","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F","Cinemachineを使ってノンコードカメラワークを実現する","\n\u003Cp\u003Eプロアングルでの撮影も可能なプロカメラであるChinemachineを使ってUnityちゃんを動かします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキャラクターを動かそうとしたときにカメラの向いてる方向を起点として動かさないと思わぬ動きをすることがあります。例えば前進しようとしてるのに右に移動したり。理由は簡単で、プレイヤーの動く方向とカメラが写している方向がマッチしていないからです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eなのでプレイヤーはカメラを起点にして動かします。\u003Cbr \u002F\u003Eそしてそのカメラにはある程度自動で動いてもらおうという考えです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回使うカメラがFreeLookカメラです。こいつは設定したキャラクターの周りを上中下のレベルで自由に動き回ることができるカメラで、よくわるサードパーソンカメラと同じような感じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以前書いた記事\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFreeLookカメラを追加したら以下のように設定します。\u003Cbr \u002F\u003EFollow = unitychan\u003Cbr \u002F\u003ELook At = unitychanに追加した空のゲームオブジェクト(unitychanの頭の位置に設定します)\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.45.47-1024x288.png\" alt=\"\" class=\"wp-image-522\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次に大切な設定です。\u003Cbr \u002F\u003EBindingTypeをWordSpaceにします。これはですね、よくわかりませんが、カメラがワールド空間で同じ方向を向いてターゲットを追いかけるとUnityデザイナーズバイブルには書いてありますね。はい。（なんのことかさっぱりだわ）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.48.00.png\" alt=\"\" class=\"wp-image-523\" width=\"244\" height=\"219\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでカメラの動きはバッチリでーす\u003Cbr \u002F\u003EGameWindowGuidesをオンにするとガイドが表示されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-17.50.28.png\" alt=\"\" class=\"wp-image-524\" width=\"533\" height=\"415\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eスクリプトの記載\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eカメラの向きを起点にして移動させます。\u003Cbr \u002F\u003E正直いってカメラの向きとかよくわからないので他のサイトを参考にしました。あざっす\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003EVector3.Scale\u003C\u002Ftd\u003E\u003Ctd\u003E2 つのベクトルの各成分を乗算します\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003Etransform.forward\u003C\u002Ftd\u003E\u003Ctd\u003Eオブジェクトの正面の向き\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003EVector3.Normalize\u003C\u002Ftd\u003E\u003Ctd\u003Emagnitude を 1 としたベクトルを作成します\u003Cbr \u002F\u003EDebug.Log(new Vector3(1, 1, 1).normalized);\u003Cbr \u002F\u003E(0.6, 0.6, 0.6)\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003Cbr \u002F\u003E汚いけどコードです。変数を割り当てるなどして綺麗にするといいと思います。\u003Cbr \u002F\u003E正直normalizedがよくわからん。つけると動きが滑らかになっている感じがするが。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnityChanInput : MonoBehaviour\n{\n    &#91;SerializeField]\n    private Camera camera;\n    &#91;SerializeField]\n    private float moveSpeed = 0.05f;\n    void FixedUpdate()\n    {\n        float inputHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        float inputVertical = Input.GetAxisRaw(\"Vertical\");\n        Vector3 movepos = inputVertical * Vector3.Scale(camera.transform.forward, new Vector3(1, 0, 1)).normalized * moveSpeed + inputHorizontal * camera.transform.right * moveSpeed;\n        transform.position = new Vector3(transform.position.x + movepos.x,0,transform.position.z + movepos.z);\n        \u002F\u002F 移動方向にプレイヤーを回転（向きを変える）\n        if(movepos != Vector3.zero) {\n            transform.rotation = Quaternion.LookRotation(movepos);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-18.59.45-1024x574.png\" alt=\"\" class=\"wp-image-530\" width=\"467\" height=\"261\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EVector3.Scale(camera.transform.forward, new Vector3(1, 0, 1))としないと上の画像のようにカメラのY方向の回転まで計算されてしまう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれである程度完成です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはカメラのRigをいじってカメラの移動範囲を制限すると好みのカメラができると思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみに私はこんな感じにしました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-20.50.11-502x1024.png\" alt=\"\" class=\"wp-image-534\" width=\"346\" height=\"705\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EYAxisのInvertにチェックを入れてカメラの動きを逆転させました。\u003Cbr \u002F\u003E移動範囲も少し狭くして視界に制限をかけました。ここはお好みで。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-26-20.51.53.png\" alt=\"\" class=\"wp-image-535\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラに対するスクリプトは一切書いてないですが、かっちょええ感じのカメラが勝手にできますし、パラメータもインスペクタタブから編集できるので、カメラをスクリプトから操作するよりも高性能かと思います。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Eメモ\u003C\u002Fp\u003E\u003Ccite\u003EスクリプトからBinding Modeを変更する\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Evcamera.GetCinemachineComponent&lt;CinemachineTransposer\u003E().m_BindingMode = CinemachineTransposer.BindingMode.LockToTargetWithWorldUp;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eプロアングルでの撮影も可能なプロカメラであるChinemachineを使ってUnityちゃんを動かします。 キャラクターを動かそうとしたときにカメラの向いてる方向を起点として動かさないと思わぬ動きをすることがあります。例&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F26\u002Fprocameramanero\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003ECinemachineを使ってノンコードカメラワークを実現する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F518","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=518","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F518\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=518","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=518","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=518",493,"https:\u002F\u002Fvolkruss.com\u002F?p=493","conboattack","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F25\u002Fconboattack\u002F","超わかりやすいUnityちゃんでコンボアニメーション","\n\u003Cp\u003E今回はUnityちゃんでコンボアニメーションを超わかりやすく作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずはアニメーターを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-23.38.08.png\" alt=\"\" class=\"wp-image-496\" width=\"431\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eアニメーションはアセットストアでfightで検索すればゴロゴロ出てくるので、適当に使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして作成したコントローラーをダブルクリックして、Animatorウインドウを表示します。\u003Cbr \u002F\u003Eそして３つほどステートを作成して画像のように線を引っ張ってください\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.03.25.png\" alt=\"\" class=\"wp-image-500\" width=\"511\" height=\"344\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E一旦このようにします。\u003Cbr \u002F\u003E何をするかというとアニメーションを連続で再生します。まずはコンボ技なんて考えず、どういったアニメーションを連続で繰り出すのか見ていきましょう。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EこのコントローラーをUnitychanにアタッチします。\u003Cbr \u002F\u003EこれでUnitychanが動く準備ができました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.04.32-1-1024x506.png\" alt=\"\" class=\"wp-image-502\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EまたAnimatorウインドウに戻って、追加した３つのステートに適当にアニメーションをつけます。\u003Cbr \u002F\u003Eステートを選択して、Motionにアニメーションを設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.09.21-1024x350.png\" alt=\"\" class=\"wp-image-504\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生するとUnitychanが連続コンボを繰り出しているのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-0.10.46.png\" alt=\"\" class=\"wp-image-505\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eあとはボタンを押して制御できるようにしていきましょう。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EStateMachineBehaviourを利用する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E普段Unityからスクリプトを作成すると\u003Cstrong\u003EMonoBehaviour\u003C\u002Fstrong\u003Eというクラスを継承したクラスが作成されます。\u003Cbr \u002F\u003EStateMachineBehaviourというのはアニメーションの最初のフレームやら最後のフレームやれでメソッドを実行できるものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.unity3d.com\u002Fja\u002Fcurrent\u002FScriptReference\u002FStateMachineBehaviour.html\"\u003Ehttps:\u002F\u002Fdocs.unity3d.com\u002Fja\u002Fcurrent\u002FScriptReference\u002FStateMachineBehaviour.html\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけでスクリプトを作成して、このクラスを継承させる以下のコードを記載します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class UnityChanComb : StateMachineBehaviour\n{\n    \u002F\u002F 最初のフレームで呼ばれる\n    public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        animator.SetBool(\"Attack\", false);\n    }\n    \u002F\u002F　最後のフレームで呼ばれる\n    public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        animator.SetBool(\"Attack\", false);\n    }\n    \u002F\u002F最初と最後のフレーム以外で呼ばれる\n    public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n    {\n        if (Input.GetKeyDown(KeyCode.A))\n        {\n            animator.SetBool(\"Attack\", true);\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E基本的にアニメーションが走った時にアニメーションを終了させるフラグを立てます。\u003Cbr \u002F\u003Eそうすることで一つのアニメーションが終わったら終わり。つまりコンボさせないことができます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンボさせたいときは最初のフレーム以外でtrueにしておくというイメージです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは作っていたコントローラーにAttackというboolのパラメータを追加して、トランジションの設定を行います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.11.45.png\" alt=\"\" class=\"wp-image-508\" width=\"456\" height=\"155\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EIdleステートを追加しておきます。ついでにSet as Layer Default Stateにします。これで初期ステートになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.16.25-1024x476.png\" alt=\"\" class=\"wp-image-509\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E全ての線にAttack trueを設定しおきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-21.18.16-1024x657.png\" alt=\"\" class=\"wp-image-511\" width=\"516\" height=\"330\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで再生するとIdle状態のままです。なんでかっていうと、Attackがtrueになっていないからです。さきほど作成したスクリプトをステートに適用します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.12.44-1024x482.png\" alt=\"\" class=\"wp-image-513\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでAボタンを押した時に、アニメーションが再生されます。\u003Cbr \u002F\u003Eこのままではアニメーションが一つずつ進んでしまいます。\u003Cbr \u002F\u003EようするにAボタンを押すたびにコンボが進みます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E一度でもコンボが発生しない場合はIdleに戻してあげましょう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.21.05-1024x631.png\" alt=\"\" class=\"wp-image-514\" width=\"584\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれでコンボの完成です。連打しているとコンボになりますし、ボタンを押さないでいるとステートがアイドルに戻るようになりました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-25-22.30.11.png\" alt=\"\" class=\"wp-image-516\" width=\"125\" height=\"185\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E今回はUnityちゃんでコンボアニメーションを超わかりやすく作ってみます。 まずはアニメーターを作成します。 アニメーションはアセットストアでfightで検索すればゴロゴロ出てくるので、適当に使います。 そして作成したコ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F25\u002Fconboattack\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E超わかりやすいUnityちゃんでコンボアニメーション\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",66,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F493\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=493","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=493",483,"https:\u002F\u002Fvolkruss.com\u002F?p=483","tensaigame1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F24\u002Ftensaigame1\u002F","【Unity】制作期間1日で3Dゲーム作ってみた","\n\u003Cp\u003Eハイスピードで3Dゲームを作ってみました。\u003Cbr \u002F\u003E前回の逃走中ゲーム作成で得たノウハウにDungeon Architectというアセットのパワーをプラスして、最速でそこそこのゲーム作成に成功しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Ftensaigame\u002Fweb\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Ftensaigame\u002Fweb\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EDungeon Architectのチュートリアルを少しやったのですが時間的に足りないと思ったので、サンプルを拝借しました（爆）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-7.54.03-1024x594.png\" alt=\"\" class=\"wp-image-486\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eステージは３つあって難易度で分かれています\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E前回の逃走中ゲームに似ているのですが、敵キャラに見つからないようにゴールを目指します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-7.55.29-1024x612.png\" alt=\"\" class=\"wp-image-487\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eゲーム要素として途中で落ちているお菓子を拾うことができるようにして、スコア機能を作りました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-24-8.00.34-1024x486.png\" alt=\"\" class=\"wp-image-488\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E本当は敵キャラクターを攻撃してぶっ壊せるような仕組みを入れようとしたのですが、そうするとゲームが簡単になり過ぎるのでやめました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回はDungeon Architectという最強アセットに出会ったので、次回はもっとこのアセットを使いこなして、アクションゲーム的なものを作成したいなと思っています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回やってみようと思った理由の一つに「unity1week」という存在があります。なんかTwitterみていたら、１週間でゲームを作ろうという企画をやっているらしく、私もやりたいと思いました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E私の場合は逃走中ゲームを作ったばかりだったので「unity1day」にしました。\u003C\u002Fp\u003E\n","\u003Cp\u003Eハイスピードで3Dゲームを作ってみました。前回の逃走中ゲーム作成で得たノウハウにDungeon Architectというアセットのパワーをプラスして、最速でそこそこのゲーム作成に成功しました。 https:\u002F\u002Fvolkr&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F24\u002Ftensaigame1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E【Unity】制作期間1日で3Dゲーム作ってみた\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",23,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F483","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=483","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F483\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=483","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=483","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=483",472,"https:\u002F\u002Fvolkruss.com\u002F?p=472","animedokuzi","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F22\u002Fanimedokuzi\u002F","vThirdPersonに独自のアニメーションを追加する方法","\n\u003Cp\u003EvThirdPersonを使うと簡単に高機能ハイセンスプロアングルカメラを追加できます。\u003Cbr \u002F\u003E⇨\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまずは普通に作る\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-0.01.17-909x1024.png\" alt=\"\" class=\"wp-image-473\" width=\"486\" height=\"547\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E攻撃アニメーションを追加する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EこれでCreateするとカメラもプレイヤーのアニメーションも全て完成された状態になっています。\u003Cbr \u002F\u003Eでは、アニメーションを追加するにはどうしたらいいのか？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E移動のアニメーションはこのままでいいとして、攻撃アニメーションを追加してみます。\u003Cbr \u002F\u003Eまず、そもそもこんなコントローラーになっているのです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"492\" height=\"228\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.32.14.png\" alt=\"\" class=\"wp-image-475\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E移動に関してはLocomotionが担っております。スペースキーを押すとジャンプできますが、それはAirborneが担っております。しかし線がありません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれはどういうことかというと、\u003Cstrong\u003ECrossFadeInFixedTime\u003C\u002Fstrong\u003Eというメソッドを利用しています。\u003Cbr \u002F\u003Eこれについては詳しい記事がありました。\u003Cbr \u002F\u003E⇨\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fwww.hanachiru-blog.com\u002Fentry\u002F2019\u002F05\u002F14\u002F185408\" target=\"_blank\"\u003Ehttps:\u002F\u002Fwww.hanachiru-blog.com\u002Fentry\u002F2019\u002F05\u002F14\u002F185408\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E簡単に言えばスクリプトからアニメーションを操作します。そうすることで大量の線で結ばれたコントローラーから解放されます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E第一引数にステート名、第二引数に遷移にかかる時間を指定してメソッドを利用します。\u003Cbr \u002F\u003EvThirdPersonControllerではこのように使用されています。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        public virtual void Jump()\n        {\n            \u002F\u002F trigger jump behaviour\n            jumpCounter = jumpTimer;\n            isJumping = true;\n            \u002F\u002F trigger jump animations\n            if (input.sqrMagnitude &lt; 0.1f)\n                animator.CrossFadeInFixedTime(\"Jump\", 0.1f);\n            else\n                animator.CrossFadeInFixedTime(\"JumpMove\", .2f);\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこうやってみると使い方は簡単なので早速攻撃アニメーションを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EvThirdPersonControllerに以下を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        public virtual void Punch()\n        {\n            if (!isJumping)\n            {\n                animator.CrossFadeInFixedTime(\"Punch\", 0.1f);\n            }\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E続いてvThirdPersonInputに以下のメソッドを追加します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n        protected virtual void PunchInput()\n        {\n            if (Input.GetKeyDown(KeyCode.U))\n            {\n                cc.Punch();\n            }\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EさらにvThirdPersonInputのInputHandleメソッドにこのメソッドを呼ぶように追記します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        protected virtual void InputHandle()\n        {\n            MoveInput();\n            CameraInput();\n            SprintInput();\n            StrafeInput();\n            JumpInput();\n            PunchInput();\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EちなみにこのメソッドはUpdateから呼ばれているメソッドです。これでPunchを繰り出す準備ができました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはSub-State Machineを追加します。適当にAtackという名前でもつけておきます。そしたら作成したAtackをダブルクリックします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"792\" height=\"388\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.41.36.png\" alt=\"\" class=\"wp-image-476\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EステートをPunchという名前で追加します。ここは名前をスクリプトに合わせておく必要があります。追加すると勝手にEntryから線が引かれます。ステートを追加したらExitに線を引っ張っておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"704\" height=\"250\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.43.09.png\" alt=\"\" class=\"wp-image-477\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EPunchにアニメーションを設定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.45.53.png\" alt=\"\" class=\"wp-image-478\" width=\"295\" height=\"312\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eさぁゲームを開始します。Uボタンを押下すると攻撃アニメーションが始まるので確認します。\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"568\" height=\"336\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-22-11.50.33.png\" alt=\"\" class=\"wp-image-481\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003EvThirdPersonを使うと簡単に高機能ハイセンスプロアングルカメラを追加できます。⇨https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F22\u002Fanimedokuzi\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EvThirdPersonに独自のアニメーションを追加する方法\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F472","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=472","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F472\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=472","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=472","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=472",463,"https:\u002F\u002Fvolkruss.com\u002F?p=463","unitychantosochu","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F21\u002Funitychantosochu\u002F","Unityちゃんで逃走中みたいなゲームを作った結果wwww","\n\u003Cp\u003Eクソゲーができたまんたの大行進\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EWeb版\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EWindow版(ダウンロード)\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fexe.zip\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fexe.zip\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-21-13.45.49-1024x598.png\" alt=\"\" class=\"wp-image-468\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EWeb版は文字が表示されないなどの初歩的なバグがあります（フォントの問題で）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E前回作った2Dのクソゲーに比べるとそこそこマシになった。\u003Cbr \u002F\u003E３Dゲームの場合は考える要素が２Dに比べると増えるのは確かだが\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E豊富なアセットを考えると２Dより３Dのほうが作りやすいんじゃね？と思った。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回のゲームのメイン機能はNavgationが担っています。これは移動範囲を限定できる機能で、Unityが勝手にやってくれます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EあとはPlayerは以前紹介した\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eを使いました。これを使うとプレイヤーの移動とカメラを考える必要がありませんので時間短縮になりました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUIは簡単に作れるので便利です\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F08\u002Fスクリーンショット-2020-08-21-13.54.58-1024x396.png\" alt=\"\" class=\"wp-image-470\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eただ走っているだけではゲーム性がないので、ミッションを投入しましたので、少しばかりゲーム性を持たせる事に成功しました。\u003C\u002Fp\u003E\n","\u003Cp\u003Eクソゲーができたまんたの大行進 Web版 https:\u002F\u002Fvolkruss.com\u002Funitytosochu\u002Fshuse\u002Fweb\u002F Window版(ダウンロード) https:\u002F\u002Fvolkruss.com\u002Funityto&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F08\u002F21\u002Funitychantosochu\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityちゃんで逃走中みたいなゲームを作った結果wwww\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F463","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=463","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F463\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=463","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=463","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=463",449,"https:\u002F\u002Fvolkruss.com\u002F?p=449","playmaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F28\u002Fplaymaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b\u002F","PlaymakerでUGUIのButtonイベントを発火する","\n\u003Cp\u003EUnityのButtonはクリックイベントを手軽につけることができるし、簡単にスクリプトのメソッドを発火できるのですが、いちいちスクリプト用意するの面倒くさいし、コードが増えるし、キーボード打つと指が痛いですよね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで、Playmakerで簡単にイベントを発火させましょう。\u003Cbr \u002F\u003Eまずはボタンのイベントを受け取るようのゲームオブジェクトを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlaymakerUIという名前にしました。なんでもいいですおー＾＾\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"430\" height=\"242\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.56.35.png\" alt=\"\" class=\"wp-image-452\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこいつにFSMをつけます。\u003Cbr \u002F\u003EまずはEventを設定します。今回はバックボタンを押した時を想定しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.58.23.png\" alt=\"\" class=\"wp-image-453\" width=\"510\" height=\"119\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAdd Global Transitionをクリックして今作成したEventを指定します。\u003Cbr \u002F\u003E勝手に新しいステートをもった遷移情報が出来上がります。こいつをPlatmakerから呼び出す簡単なお仕事です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.59.57.png\" alt=\"\" class=\"wp-image-454\" width=\"347\" height=\"213\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eイベントを発火させたいButtonを以下のようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlaymakerの設定がしてあるPlaymakerUIってゲームオブジェクトを指定します。そしてイベントはPlaymakerFSMからSendEventを選択ですぅ。イベントは先ほどのEvent名であるClickBackを入力すればおけ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"514\" height=\"214\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-18.49.02.png\" alt=\"\" class=\"wp-image-450\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-28-19.02.47.png\" alt=\"\" class=\"wp-image-455\" width=\"434\" height=\"484\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E以上で、ボタンからPlaymakerのイベントを発火できます。\u003C\u002Fp\u003E\n","\u003Cp\u003EUnityのButtonはクリックイベントを手軽につけることができるし、簡単にスクリプトのメソッドを発火できるのですが、いちいちスクリプト用意するの面倒くさいし、コードが増えるし、キーボード打つと指が痛いですよね。 とい&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F28\u002Fplaymaker%e3%81%a7ugui%e3%81%aebutton%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e3%82%92%e7%99%ba%e7%81%ab%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerでUGUIのButtonイベントを発火する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F449","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=449","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F449\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=449","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=449","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=449",437,"https:\u002F\u002Fvolkruss.com\u002F?p=437","playmaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F27\u002Fplaymaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99\u002F","PlaymakerのGetNextChildをしばき倒す","\n\u003Cp\u003Eアセットをダウンロードしたんですが、子要素全てにMeshColliderをアタッチしたいと思いました。というわけでPlaymakerで子要素をループしてアタッチする方法です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.39.49.png\" alt=\"\" class=\"wp-image-440\" width=\"478\" height=\"218\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EとにかくChildがいる間はアタッチしまくって、ChildがなくなったらEndLoopにいきます。\u003Cbr \u002F\u003EState1ではGetNextChildというActionを使います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E子要素を走査していき、見つかったら子要素を変数CurrentChildに格納します。\u003Cbr \u002F\u003EそしてNextChildというEventに遷移します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"730\" height=\"276\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.44.54.png\" alt=\"\" class=\"wp-image-441\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENextChildでは、その子要素にコライダーを付与する。\u003Cbr \u002F\u003E終わったらまたState1に戻ります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-0.47.03-1024x419.png\" alt=\"\" class=\"wp-image-442\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの調子で子要素が順番に処理されていき、全ての子要素のループが終わったらEndLoopにいきます。EndLoopはActionも何もないただの状態です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eスクリプト書くより早いですね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E子要素の子要素までループする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E子要素の子要素まで走査できないので作ります。\u003Cbr \u002F\u003E複雑になりますがやっていることは同じです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eただし、子要素の子要素へループする前、つまり親要素の子要素をループする際に、コライダーをつけるじAddChildColiderというStateを用意しています。\u003Cbr \u002F\u003E子要素のループが走った時に毎回コライダーがつけられてしまうのでね。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"824\" height=\"360\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.13.38.png\" alt=\"\" class=\"wp-image-444\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E子要素の子要素をループする。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.16.02-1024x476.png\" alt=\"\" class=\"wp-image-445\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-27-1.16.53-1024x485.png\" alt=\"\" class=\"wp-image-446\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003E追記\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E普通にヒエラルキーで子要素全選択してコライダーアタッチすれば一発だったわあはははは\u003Cbr \u002F\u003Eでも、Playmakerで子要素ループする練習にはなったかな^^^\u003C\u002Fp\u003E\n","\u003Cp\u003Eアセットをダウンロードしたんですが、子要素全てにMeshColliderをアタッチしたいと思いました。というわけでPlaymakerで子要素をループしてアタッチする方法です。 とにかくChildがいる間はアタッチしまくっ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F27\u002Fplaymaker%e3%81%aegetnextchild%e3%82%92%e3%81%97%e3%81%b0%e3%81%8d%e5%80%92%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerのGetNextChildをしばき倒す\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F437","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=437","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F437\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=437","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=437","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=437",426,"https:\u002F\u002Fvolkruss.com\u002F?p=426","fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F25\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F","Fungusを使ってメニュー(Menu)というか選択肢？をしばく","\n\u003Cp\u003E今日作るのはこれだ！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-8.55.31.png\" alt=\"\" class=\"wp-image-427\" width=\"496\" height=\"359\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMenuというか選択肢というか、まぁどっちもでよいのだが、クリックすると発生するイベントが変化するあれだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eギャルゲーでいえば「お兄ちゃんと遊ぶ」「お兄ちゃんなんか大嫌い」「お兄ちゃん臭い」の選択肢を選んでエンディングに影響を与えるアレだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまぁ簡単に実装できるのでサラッと書いていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこのメニューを作るには文字通り&#8221;Menu&#8221;を使います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-8.59.07.png\" alt=\"\" class=\"wp-image-429\" width=\"327\" height=\"247\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこのYesNoはなんなのかというと、ただのBlockです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EYesブロックとNoブロックを用意しておいて、Yesの時はYesのブロックに流れる設定をするだけです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.01.38.png\" alt=\"\" class=\"wp-image-431\" width=\"351\" height=\"401\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこのように設定しておくと勝手に以下の画像のように遷移情報が付与されます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.00.37.png\" alt=\"\" class=\"wp-image-430\" width=\"322\" height=\"175\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eビジュアル的にもわかりやすくなります。勝手にやってくれるので便利ですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにYesの中身は、Sayするだけになっています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.04.01.png\" alt=\"\" class=\"wp-image-433\" width=\"318\" height=\"353\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-9.03.20.png\" alt=\"\" class=\"wp-image-432\" width=\"461\" height=\"227\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EMenuをシャッフルする\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eクイズゲームを作りたいならシャッフル機能を使えば良い。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-25-19.48.37.png\" alt=\"\" class=\"wp-image-435\" width=\"255\" height=\"243\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで並び順がランダムになります。すGEー！\u003C\u002Fp\u003E\n","\u003Cp\u003E今日作るのはこれだ！ Menuというか選択肢というか、まぁどっちもでよいのだが、クリックすると発生するイベントが変化するあれだ。 ギャルゲーでいえば「お兄ちゃんと遊ぶ」「お兄ちゃんなんか大嫌い」「お兄ちゃん臭い」の選択肢&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F25\u002Ffungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bcmenu%e3%81%a8%e3%81%84%e3%81%86%e3%81%8b%e9%81%b8%e6%8a%9e%e8%82%a2%ef%bc%9f%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusを使ってメニュー(Menu)というか選択肢？をしばく\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F426","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=426","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F426\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=426","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=426","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=426",419,"https:\u002F\u002Fvolkruss.com\u002F?p=419","fungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F24\u002Ffungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b\u002F","Fungusをスクリプトから操作する","\n\u003Cp\u003EPlaymakerとの連携はできたのですが、メソッドを呼ぶことくらいしか今の所できていません。つまりFungusの変数にアクセスする方法がわかりません。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eということでしぶしぶ、スクリプトからFungusにアクセスして変数を取得します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerが会話中かどうか判定します。PlayerにTalkingという変数を持たせます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.23.29-945x1024.png\" alt=\"\" class=\"wp-image-421\" width=\"436\" height=\"472\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eスクリプトから、この変数にアクセスします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Epublic Fungus.Flowchart flowchart;\n...\n        private bool GetPlayerTalking()\n        {\n            return flowchart.GetBooleanVariable(\"Talking\");\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれだけです。\u003Cbr \u002F\u003Eflowchartを指定しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.26.25.png\" alt=\"\" class=\"wp-image-422\" width=\"386\" height=\"476\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E簡単にアクセスできます。GetBooleanVariableにkeyを渡すとその変数が取得できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eflowchartから別のflowchartを呼び出すにはCallを使用します。\u003Cbr \u002F\u003Eこの時にCallModeを最初はContinueにしました。Stopにすると以降のコマンドが呼ばれませんでした。この辺は要調査です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-24-0.28.36.png\" alt=\"\" class=\"wp-image-424\" width=\"302\" height=\"358\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで会話中は移動できないという仕組みが出来上がりです。\u003C\u002Fp\u003E\n","\u003Cp\u003EPlaymakerとの連携はできたのですが、メソッドを呼ぶことくらいしか今の所できていません。つまりFungusの変数にアクセスする方法がわかりません。 ということでしぶしぶ、スクリプトからFungusにアクセスして変数&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F24\u002Ffungus%e3%82%92%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%8b%e3%82%89%e6%93%8d%e4%bd%9c%e3%81%99%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EFungusをスクリプトから操作する\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F419","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=419","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F419\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=419","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=419","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=419",393,"https:\u002F\u002Fvolkruss.com\u002F?p=393","%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%81%ae%e4%bd%9c%e6%88%90%e3%81%ab%e5%86%8d%e6%8c%91%e6%88%a6%e3%81%99%e3%82%8b%e3%82%8f%e3%81%91","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F21\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%81%ae%e4%bd%9c%e6%88%90%e3%81%ab%e5%86%8d%e6%8c%91%e6%88%a6%e3%81%99%e3%82%8b%e3%82%8f%e3%81%91\u002F","非オタクの俺がBlenderで階段の作成に再挑戦するわけがない","\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"Straight Stairs - Quick Model Tutorial - Blender 2.8\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FGubc9ZWxVfo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんだこれは・・・俺の作りたい階段があるじゃねえか！\u003Cbr \u002F\u003Eまずは配列機能というプログラマ入門機能みたいな名称のパワーを使うようだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E「モディファイアーを追加」から配列を選択してその力を使うことができる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.07.01.png\" alt=\"\" class=\"wp-image-395\" width=\"628\" height=\"724\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなるほどこの、オフセットかっこ倍率かっことじを操作することで、配列の要素をどう表示するかってのを指定するようだ。なーにこの辺はプログラミングの要領と同じってわけだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそして配列の要素数は数で決まる。今回は５にしている。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.18.42-1024x528.png\" alt=\"\" class=\"wp-image-397\" width=\"637\" height=\"328\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eまぁとりあえず動画を進めていくと、ループカットで階段を切り裂いているので真似てみる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.25.31-1024x400.png\" alt=\"\" class=\"wp-image-399\" width=\"541\" height=\"211\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして動画のように引き伸ばしてみると、配列の他の要素も同様に引き伸ばされた。なるほど神\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.27.20-1024x782.png\" alt=\"\" class=\"wp-image-400\" width=\"543\" height=\"414\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおいおい、もうこの時点でほぼ階段は完成しているようなもんじゃねーか？これ登れって言われたら登れるし。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず動画に合わせてこんな感じにした。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.44.04-1024x538.png\" alt=\"\" class=\"wp-image-403\" width=\"499\" height=\"262\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそんでもって手すりの骨の箇所を引き延ばす。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-23.54.35.png\" alt=\"\" class=\"wp-image-405\" width=\"473\" height=\"402\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E編を選択してGボタンを押して、Zボタンを押してZ軸固定させて斜めに凹ませる皇帝です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"318\" height=\"184\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-21-0.08.31.png\" alt=\"\" class=\"wp-image-407\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eちなみに動画では板を置いて隣の階段と高さを合わせていましたが、俺は大さじの計算とかしないタイプだから省略してやったぜ！ざまあみろってーの！（ざまあみるのは俺ですすんませんち）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eところで動画では魔法のように板が追加されたが、これは面の作成機能だったぜ（きりっ）\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fblender-cg.net\u002Fmake-edge-face\u002F\"\u003Ehttps:\u002F\u002Fblender-cg.net\u002Fmake-edge-face\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E辺と辺を選択した状態でFボタンを押すと\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-21-0.12.29.png\" alt=\"\" class=\"wp-image-409\" width=\"453\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそして、この辺から面を作り出す技術を駆使した結果\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-21-0.15.37.png\" alt=\"\" class=\"wp-image-411\" width=\"413\" height=\"447\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそれっぽいぞ？\u003Cbr \u002F\u003E不格好だが階段じゃないと言ったら嘘になるような階段ができたぞ？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-21-0.17.32.png\" alt=\"\" class=\"wp-image-413\" width=\"540\" height=\"487\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおまけ\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E２つの面を１つにする方法。２つの面を選択した状態でFを押す。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-21-0.21.02.png\" alt=\"\" class=\"wp-image-415\" width=\"259\" height=\"478\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003Eなんだこれは・・・俺の作りたい階段があるじゃねえか！まずは配列機能というプログラマ入門機能みたいな名称のパワーを使うようだ。 「モディファイアーを追加」から配列を選択してその力を使うことができる。 なるほどこの、オフセッ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F21\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%81%ae%e4%bd%9c%e6%88%90%e3%81%ab%e5%86%8d%e6%8c%91%e6%88%a6%e3%81%99%e3%82%8b%e3%82%8f%e3%81%91\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E非オタクの俺がBlenderで階段の作成に再挑戦するわけがない\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F393","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=393","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F393\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=393","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=393","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=393",379,"https:\u002F\u002Fvolkruss.com\u002F?p=379","%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%82%92%e4%bd%9c%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F21\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%82%92%e4%bd%9c%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84\u002F","非オタクの俺がBlenderで階段を作るわけがない","\n\u003Cp\u003Eこの記事は失敗した記事です。\u003Cbr \u002F\u003E成功した記事は\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F21\u002F非オタクの俺がblenderで階段の作成に再挑戦するわけ\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Eこちら\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこのどうしようもない究極的なCubeを階段にする。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.24.05.png\" alt=\"\" class=\"wp-image-380\" width=\"296\" height=\"290\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eまずは平べったくしてやるか、ということでCubeを選択して上の面積を選択する。\u003Cbr \u002F\u003EShift + Optionで上手に選択したら\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.26.01.png\" alt=\"\" class=\"wp-image-381\" width=\"250\" height=\"193\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EGを押して、Zを押して平べったくする。少しな\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.26.58.png\" alt=\"\" class=\"wp-image-382\" width=\"353\" height=\"189\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今の要領で今度はX軸に引き延ばす。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"898\" height=\"246\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.28.22.png\" alt=\"\" class=\"wp-image-383\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eループカットを選択して８個くらいに切る\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.40.13-1024x560.png\" alt=\"\" class=\"wp-image-385\" width=\"418\" height=\"228\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eさーてここからだ、今回は一気に全て持ち上げて一段一段押し込んでいくやり方にする。\u003Cbr \u002F\u003Eまずはいい感じに選択して、GとZで拡大する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"826\" height=\"338\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.46.00.png\" alt=\"\" class=\"wp-image-387\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度は逆のことをやる・・・・\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-18.47.40-1024x499.png\" alt=\"\" class=\"wp-image-388\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENooooooooOOOOOOOOoooooo!\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで今度はEで押し込むことに\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-19.40.26.png\" alt=\"\" class=\"wp-image-390\" width=\"369\" height=\"236\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eん？できた。。。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-21.09.56.png\" alt=\"\" class=\"wp-image-391\" width=\"314\" height=\"371\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eこの記事は失敗した記事です。成功した記事はこちら このどうしようもない究極的なCubeを階段にする。 まずは平べったくしてやるか、ということでCubeを選択して上の面積を選択する。Shift + Optionで上手に選択&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F21\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%a7%e9%9a%8e%e6%ae%b5%e3%82%92%e4%bd%9c%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E非オタクの俺がBlenderで階段を作るわけがない\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",16,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F379","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=379","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F379\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=379","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=379","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=379",358,"https:\u002F\u002Fvolkruss.com\u002F?p=358","%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%ae%e4%bd%bf%e3%81%84%e6%96%b9%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F20\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%ae%e4%bd%bf%e3%81%84%e6%96%b9%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84\u002F","非オタクの俺がBlenderの使い方を覚えるわけがない","\n\u003Cp\u003E操作のメモ (Mac)\u003Cbr \u002F\u003E随時更新\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E面の選択\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eshift で頂点をいくつか選択する。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"390\" height=\"368\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-8.20.07.png\" alt=\"\" class=\"wp-image-360\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E面を押し出す\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EそのままEボタンを押して押し出す。この時Zボタンを押すと軸をZ軸に固定できる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-8.39.45.png\" alt=\"\" class=\"wp-image-362\" width=\"254\" height=\"424\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E削除する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eオブジェクトモードでオブジェクトを選択した状態でXボタンを押す。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-8.54.18.png\" alt=\"\" class=\"wp-image-363\" width=\"236\" height=\"382\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E円の作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E円の作成は初見殺しだろ！って思った。円を作成したら左下のプロパティから円の設定ができる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.06.18-1024x582.png\" alt=\"\" class=\"wp-image-364\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eフィルタタイプを設定することで円が姿を表した。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.07.49-1024x637.png\" alt=\"\" class=\"wp-image-366\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E頂点のループ選択\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eoption 押しながら頂点を2個くらい選択する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"282\" height=\"228\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.08.54.png\" alt=\"\" class=\"wp-image-367\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E同じようなことをShift + option を押しながらやると面まで選択される\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.10.44.png\" alt=\"\" class=\"wp-image-368\" width=\"355\" height=\"296\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E移動する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EGボタンで移動する。今回は頂点のみを移動する。するとアイスクリームの入れ物が完成だ（謎）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"332\" height=\"378\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.26.45.png\" alt=\"\" class=\"wp-image-369\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E拡大縮小する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003ESボタンで拡大縮小\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.29.37.png\" alt=\"\" class=\"wp-image-371\" width=\"359\" height=\"189\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch3\u003E面を押し出して頂点を押し出すのコンボ技\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003EShift + Option で面と頂点を選択してEで押し出す\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.33.37.png\" alt=\"\" class=\"wp-image-373\" width=\"356\" height=\"245\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E頂点のみ選択して、Eボタン押して頂点のみ押し出す。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.35.27.png\" alt=\"\" class=\"wp-image-374\" width=\"345\" height=\"343\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E面取り\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Econtrol + B 。なんか丸みを帯びることができる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.42.27.png\" alt=\"\" class=\"wp-image-375\" width=\"286\" height=\"255\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eセグメントを増やすと滑らかに丸みを帯びることができる。そしてその姿、まさに賢者の剣である。（意味深）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-20-9.42.42-1024x732.png\" alt=\"\" class=\"wp-image-376\" width=\"398\" height=\"284\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003E操作のメモ (Mac)随時更新 面の選択 shift で頂点をいくつか選択する。 面を押し出す そのままEボタンを押して押し出す。この時Zボタンを押すと軸をZ軸に固定できる。 削除する オブジェクトモードでオブジェクトを&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F20\u002F%e9%9d%9e%e3%82%aa%e3%82%bf%e3%82%af%e3%81%ae%e4%bf%ba%e3%81%8cblender%e3%81%ae%e4%bd%bf%e3%81%84%e6%96%b9%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b%e3%82%8f%e3%81%91%e3%81%8c%e3%81%aa%e3%81%84\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E非オタクの俺がBlenderの使い方を覚えるわけがない\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F358","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=358","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F358\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=358","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=358","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=358",335,"https:\u002F\u002Fvolkruss.com\u002F?p=335","blender-archimesh%e3%81%ae%e6%93%8d%e4%bd%9c%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F18\u002Fblender-archimesh%e3%81%ae%e6%93%8d%e4%bd%9c%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b\u002F","Blender | Archimeshの操作を覚える","\n\u003Cp\u003E3Dのゲームを作るとなると当然だが3Dのオブジェクトが必要だ。\u003Cbr \u002F\u003E追加のアドオンを入れればすぐに利用可能\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E家にドアを取り付ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EShift + A でその入り口は開かれ、Roomを選択すれば即座に部屋を作成できる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.31.29-1024x688.png\" alt=\"\" class=\"wp-image-336\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.34.54-1024x472.png\" alt=\"\" class=\"wp-image-337\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ENumber of Walls で壁の枚数を指定できる。今回は４つを指定。それぞれWallの長さをいい感じに指定する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E次にドアを作成していい感じに移動させる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"942\" height=\"494\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.37.02.png\" alt=\"\" class=\"wp-image-338\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eドアを選択してRボタンを押すと扉が開きます。やってみましょう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"882\" height=\"516\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.39.24.png\" alt=\"\" class=\"wp-image-339\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eでも壁が大変なことになっている。。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E壁を選択して厚さを設定します。（今回は0.03）\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.41.45-1024x594.png\" alt=\"\" class=\"wp-image-341\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAuto Holesをクリックします。注意書きにあるように壁に厚さがないと設定できません。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"974\" height=\"354\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.43.39.png\" alt=\"\" class=\"wp-image-342\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"706\" height=\"424\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.44.30.png\" alt=\"\" class=\"wp-image-343\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eドアから中に入れるようになりましたー！うひょー！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eついでに床を作っておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-7.58.56-1024x772.png\" alt=\"\" class=\"wp-image-345\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E本棚と本を作る\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E何もない部屋は部屋ではない。それは箱であり部屋ではない。\u003Cbr \u002F\u003Eというわけで、本棚と本を設置して部屋らしくしていこうジャマイカ\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eおいおいいくらなんでも本棚を作る機能なんてあるわけないだろ、まさかとは思うけど四角作って凹ませてを繰り返すとかじゃねーの？。。。。あるやん\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.02.21-1024x795.png\" alt=\"\" class=\"wp-image-346\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"304\" height=\"432\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.03.51.png\" alt=\"\" class=\"wp-image-347\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E本棚があるなら本もあるんだろ！？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.05.46-1024x561.png\" alt=\"\" class=\"wp-image-348\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E何個か本を追加して本棚に移動してやるとこうなった\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"404\" height=\"522\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.07.55.png\" alt=\"\" class=\"wp-image-349\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこいつを部屋の中に移動してやるぜ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"634\" height=\"452\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.09.58.png\" alt=\"\" class=\"wp-image-350\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003E窓を取り付ける\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eこんな感じの窓を取り付けます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"576\" height=\"470\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.45.12.png\" alt=\"\" class=\"wp-image-352\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eいつも通り追加作業から初めて、部屋に取り付けます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg loading=\"lazy\" width=\"576\" height=\"470\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-8.45.12-1.png\" alt=\"\" class=\"wp-image-353\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eガラスを選択して移動させると窓が左右にスライドします。これで部屋の中も丸見え状態にできます。ここまで簡単過ぎるぞ・・・？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EBlenderうぜと思ったところ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-18-19.50.18-1024x546.png\" alt=\"\" class=\"wp-image-355\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんで最初の一回しか編集できねえんだよ\u003C\u002Fp\u003E\n","\u003Cp\u003E3Dのゲームを作るとなると当然だが3Dのオブジェクトが必要だ。追加のアドオンを入れればすぐに利用可能 家にドアを取り付ける Shift + A でその入り口は開かれ、Roomを選択すれば即座に部屋を作成できる。 Numb&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F18\u002Fblender-archimesh%e3%81%ae%e6%93%8d%e4%bd%9c%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EBlender | Archimeshの操作を覚える\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F335","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=335","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F335\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=335","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=335","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=335",321,"https:\u002F\u002Fvolkruss.com\u002F?p=321","playmaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F16\u002Fplaymaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b\u002F","PlaymakerとFungusを使っていい感じの会話イベント作る","\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F\" target=\"_blank\"\u003E前回はゲームオブジェクトがヒットしたら会話シーンが発生するというものでした。\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし実際のゲームではそんな仕組みはほとんどなく、ボタンをクリックして当たり判定でもあればそいつ会話が発生するというものだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eつまり女子と話がしたければAボタンを押せってことです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EScriptを書くと面倒くさそうですがPlaymakerなら余裕ですね。\u003Cbr \u002F\u003E見ての通りプレイヤーがRayCastを発射しています。そしてhitobjにnpc2が設定されているのがわかります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.18.35-1024x298.png\" alt=\"\" class=\"wp-image-322\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの状態でKボタンを押すと会話イベントが発生します\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.18.46.png\" alt=\"\" class=\"wp-image-323\" width=\"495\" height=\"408\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで壮大な物語が動き出す予感がしますね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eキャラクターなどは前回と同じですが、もう1人追加しておきます。\u003Cbr \u002F\u003E流れとしては、プレイヤーが発射するRayCastにNPCがヒットしていてKボタンを押したら、そのオブジェクトのFlowchartのブロックが発火されるという仕組みです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EPlayerのStateにRayCastを追加します。\u003Cbr \u002F\u003Eヒットした時にhitobjにヒットしたオブジェクトを格納するようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまたレイヤーマスクを使ってNPCレイヤーのものだけが当たり判定を起こすようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.25.31-1024x899.png\" alt=\"\" class=\"wp-image-325\" width=\"581\" height=\"510\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EそしてKが押された時に次のステートに遷移します。\u003Cbr \u002F\u003EあとWaitを使って再帰的にState2に遷移しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.26.58.png\" alt=\"\" class=\"wp-image-326\" width=\"495\" height=\"275\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E理由はずっと変数に格納されたままになってしまうので、hitobjにはNoneを指定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.28.06.png\" alt=\"\" class=\"wp-image-327\" width=\"490\" height=\"282\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EKに移った時は\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E取得したhitobjのTagがNPCであるかどうか判定します。\u003Cbr \u002F\u003EつまりNPCにはNPCのタグをつけておきます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというかこの状況ではNPCしか取得できないのですが、Playmakerの使い方がよくわかってないのでこんなことしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまぁとりあえずNPCのときはヒットしたものがNPCに遷移します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.30.16-1024x498.png\" alt=\"\" class=\"wp-image-328\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E変数のhitobjが入っていますので、SendMessageを使ってメソッドを発火します。\u003Cbr \u002F\u003EExecuteBlockのtalk1です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E発火したら1秒後にステートを元に戻します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.31.56-1024x462.png\" alt=\"\" class=\"wp-image-329\" width=\"545\" height=\"245\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで完成です。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-16-23.29.47.png\" alt=\"\" class=\"wp-image-330\" width=\"468\" height=\"391\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで簡単な会話イベントはいけるぜ？\u003C\u002Fp\u003E\n","\u003Cp\u003E前回はゲームオブジェクトがヒットしたら会話シーンが発生するというものでした。 しかし実際のゲームではそんな仕組みはほとんどなく、ボタンをクリックして当たり判定でもあればそいつ会話が発生するというものだ。 つまり女子と話が&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F16\u002Fplaymaker%e3%81%a8fungus%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%81%84%e3%81%84%e6%84%9f%e3%81%98%e3%81%ae%e4%bc%9a%e8%a9%b1%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EPlaymakerとFungusを使っていい感じの会話イベント作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F321","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=321","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F321\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=321","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=321","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=321",307,"https:\u002F\u002Fvolkruss.com\u002F?p=307","unity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F","Unity PlaymakerとFungusで会話シーンを作る","\n\u003Cp\u003EPlaymakerは100年くらい前に買っておいたので、使えるのですがこれは有料アセットなのでPlaymakerを利用できる人向けの記事になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFungusは会話シナリオを簡単に作れる無料のアセットです。Playmakerを利用しなくてもできます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回は２つとも導入済の前提でお話しします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUnityちゃんとmisakiがヒットしたら会話イベントを発生させます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.44.18-1024x576.png\" alt=\"\" class=\"wp-image-312\" width=\"460\" height=\"259\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EmisakiにはtriggerのコライダーとFlowChartをアタッチしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.40.43.png\" alt=\"\" class=\"wp-image-310\" width=\"287\" height=\"199\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.40.53.png\" alt=\"\" class=\"wp-image-311\" width=\"293\" height=\"288\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Emisakiにplaymakerのfmsを設定します。\u003Cbr \u002F\u003Eまずはプレイヤーとのヒットを検知します。ヒットした場合はState4に遷移します。PlayerにはPlayerタグをつけておいてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.47.23-1024x556.png\" alt=\"\" class=\"wp-image-314\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eplayerがhitしたら、FlowchartのExecuteBlockを発火するようにします。\u003Cbr \u002F\u003EBlockNameはtalk1にしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.49.51-1024x804.png\" alt=\"\" class=\"wp-image-315\" width=\"515\" height=\"404\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでPlaymakerの準備は完了simasitanodeFungusの設定をします。misakiのopenFlowChartWindowをクリックして開きます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eブロックをtalk1にしたら、今回は使わないけど勉強のためにVariablesのbooleanを追加してfinishにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.51.43-1024x468.png\" alt=\"\" class=\"wp-image-316\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.54.09.png\" alt=\"\" class=\"wp-image-317\" width=\"326\" height=\"67\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそしたらtalk1をクリックして＋ボタンを押してEventを追加します。\u003Cbr \u002F\u003E今回はfinishの値を変更するのとメッセージ(say)の設定を行います。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.55.44-793x1024.png\" alt=\"\" class=\"wp-image-318\" width=\"495\" height=\"639\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで準備オッケーです。Unityちゃんとmisakiをぶつけると会話が始まります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以上になります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFungusについて今日導入したばかりなので、まだまだ未知数です。Playmakerは100年前に使っていたのほとんど忘れています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eちなみにキャラクターを設定すればこんなこともできます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-21.58.41-1024x628.png\" alt=\"\" class=\"wp-image-319\" width=\"562\" height=\"344\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E前回の2Dのノベルゲームを作成したが、これならRPGの会話シーンとか作れますね。でもノベルゲームを作るのはキツそうだなといった印象です。\u003C\u002Fp\u003E\n","\u003Cp\u003EPlaymakerは100年くらい前に買っておいたので、使えるのですがこれは有料アセットなのでPlaymakerを利用できる人向けの記事になります。 Fungusは会話シナリオを簡単に作れる無料のアセットです。Playm&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity-playmaker%e3%81%a8fungus%e3%81%a7%e4%bc%9a%e8%a9%b1%e3%82%b7%e3%83%bc%e3%83%b3%e3%82%92%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnity PlaymakerとFungusで会話シーンを作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F307","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=307","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F307\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=307","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=307","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=307",304,"https:\u002F\u002Fvolkruss.com\u002F?p=304","unity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F","Unityで無料でThird Person Controllerを使った結果","\n\u003Cp\u003E答えはこれです\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"Free Unity Third Person Controller Asset\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FHUtZsZBAlss?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの動画の通りにやると、なかなかいかしたキャラクターコントローラーができます。\u003Cbr \u002F\u003Eジャンプもできるし、なんならカメラの設定もしてる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Cstrong\u003E車輪の再開発はやめようず\u003C\u002Fstrong\u003Eってことですね。。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-15-11.55.42-1024x607.png\" alt=\"\" class=\"wp-image-305\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eめちゃめちゃいい感じのキャラクターコントローラーが使えます。\u003Cbr \u002F\u003E頭悩ませてプレイヤー動かしたりカメラ動かすのはやめましょう。\u003C\u002Fp\u003E\n","\u003Cp\u003E答えはこれです この動画の通りにやると、なかなかいかしたキャラクターコントローラーができます。ジャンプもできるし、なんならカメラの設定もしてる。 車輪の再開発はやめようずってことですね。。 めちゃめちゃいい感じのキャラク&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F15\u002Funity%e3%81%a7%e7%84%a1%e6%96%99%e3%81%a7third-person-controller%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%9f%e7%b5%90%e6%9e%9c\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで無料でThird Person Controllerを使った結果\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",48,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F304","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=304","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F304\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=304","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=304","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=304",253,"https:\u002F\u002Fvolkruss.com\u002F?p=253","cinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F","Cinemachineをしばく","\n\u003Cp\u003E世の中には２種類のゲームエンジンが存在する。UnityかUnity以外か。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで今日はCinemachineというカメラを制御する機能をしばき倒していこうと思います。\u003Cbr \u002F\u003Eこれはもともと有料だったらしいのですが今はなんと無料で使えるのです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Funity.com\u002Fja\u002Funity\u002Ffeatures\u002Feditor\u002Fart-and-design\u002Fcinemachine\"\u003Ehttps:\u002F\u002Funity.com\u002Fja\u002Funity\u002Ffeatures\u002Feditor\u002Fart-and-design\u002Fcinemachine\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eもうカメラで迷うことはありませんね。画面はこんな感じでーす\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.04.23-1024x488.png\" alt=\"\" class=\"wp-image-254\" width=\"560\" height=\"267\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれ実はもうすでにCinemachineが投入されています。まだ投入しただけなんで投入しましょう。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.05.14.png\" alt=\"\" class=\"wp-image-255\" width=\"291\" height=\"316\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこれで準備オーケーです。ちなみにこんなのねえよって人はこれをインポートしてください。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.06.54-1024x936.png\" alt=\"\" class=\"wp-image-256\" width=\"541\" height=\"494\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ECV vcam1にunitychanを追従させるように設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.07.53.png\" alt=\"\" class=\"wp-image-258\" width=\"375\" height=\"191\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラが追従するターゲットとカメラを向ける対象をunitychanにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eおうおう！これでいい感じになるんやろ！おらスタートしてみいや！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.12.26-1024x474.png\" alt=\"\" class=\"wp-image-261\" width=\"541\" height=\"250\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなんじゃこりゃ！ありがとうございましたwwwwww草WWwwww草WWww森wwwwwWW\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそうかきっとUnityちゃんを動かすといいんだろ！ってわけでスクリプトをアタッチして微調整します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.25.30.png\" alt=\"\" class=\"wp-image-263\" width=\"459\" height=\"529\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityちゃんに追従してカメラが回転したぞ！！！！？？？？\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E！？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.26.45-1024x408.png\" alt=\"\" class=\"wp-image-264\" width=\"404\" height=\"160\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eなるほど素晴らしい。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EFollowOffsetでカメラと追跡オブジェクトの距離を設定できる。今回はz方向にマイナス４メートル、y方向に2メートル\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EそしてAimを設定してカメラの向き先を少し上に向ける設定だ。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.08.46-1024x383.png\" alt=\"\" class=\"wp-image-283\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EYawDampingでカメラの追従する動きが少し滑らかになっている（スロー）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E壁にめり込まないカメラを作る\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.14.39-1024x548.png\" alt=\"\" class=\"wp-image-285\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおいカメラマン！しっかり仕事しろや！！\u003Cbr \u002F\u003EというわけでAdd ExtensionからCinemachineColiderを追加すると！\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.15.30.png\" alt=\"\" class=\"wp-image-286\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.15.57-1024x486.png\" alt=\"\" class=\"wp-image-287\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eおおおおおお！カメラが突き抜けない！！まるでグラビア撮影のワンシーンだぞ！！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eさて、カメラが衝突した時の戦略(strategy)を試すと面白いぞ？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-21.19.09.png\" alt=\"\" class=\"wp-image-290\" width=\"515\" height=\"405\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EUnityちゃんの回転を無視したい場合\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-14-11.49.30-1024x326.png\" alt=\"\" class=\"wp-image-292\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EFreeLookで自由人になる\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eとりあえず、いろんなカメラがあったんで試してみるか。というわけでFreeLookカメラに変更して、お作法通りUnityちゃんを追従させた。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-10.42.49-1024x491.png\" alt=\"\" class=\"wp-image-266\" width=\"413\" height=\"198\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E今度はマウスの位置によってカメラの位置が変化するようになった。一定の範囲ないをカメラが動きまわるようだ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EField Of Viewの値でカメラの撮影範囲を調節できる。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-15.34.13.png\" alt=\"\" class=\"wp-image-269\" width=\"520\" height=\"401\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eカメラの移動範囲はRigで設定します。いい感じの値がよくわからん。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.05.12-1024x266.png\" alt=\"\" class=\"wp-image-270\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E高さを調整する\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.06.45-1024x378.png\" alt=\"\" class=\"wp-image-272\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ERadiusを設定すると上部の範囲が大きくなりました。上から激写するときに広く撮影できます。あれ？スプラトゥーンみてぇだなぁ！？\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.07.49-1024x368.png\" alt=\"\" class=\"wp-image-273\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E上中下の順番でカメラの移動範囲を制御できるようだ。上から激写する時は広くカメラを動かすようにして、下からのプロアングルで撮影するときは、カメラの移動範囲を狭くするなどする。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.11.05-1024x360.png\" alt=\"\" class=\"wp-image-274\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EAimを設定するとカメラの向きを設定できるようです。例えばこんなことが\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-16.57.07-1024x356.png\" alt=\"\" class=\"wp-image-278\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこの辺は難しいなあ。。。といった印象。middleのあれのyを1にするとちょうど良い感じ\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-13-17.00.25-1024x352.png\" alt=\"\" class=\"wp-image-280\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003E世の中には２種類のゲームエンジンが存在する。UnityかUnity以外か。 というわけで今日はCinemachineというカメラを制御する機能をしばき倒していこうと思います。これはもともと有料だったらしいのですが今はなん&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F13\u002Fcinemachine%e3%82%92%e3%81%97%e3%81%b0%e3%81%8f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003ECinemachineをしばく\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",19,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F253","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=253","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F253\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=253","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=253","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=253",202,"https:\u002F\u002Fvolkruss.com\u002F?p=202","3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F10\u002F3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99\u002F","3DのUnityちゃんを動かす","\n\u003Cp\u003EUnityちゃんは無料で使えます。\u003Cbr \u002F\u003EAssetStoreからUnity-Chan!をダウンロードしてプロジェクトにインポートします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.09.37-1024x622.png\" alt=\"\" class=\"wp-image-203\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003EUnityちゃんを動かす\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eといっても用意されているものを使えばOK\u003Cbr \u002F\u003Eまずはスクリプトをアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EUnityChanControlScriptWithRgidBody.csをUnityちゃんにアタッチします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.11.17-1024x449.png\" alt=\"\" class=\"wp-image-204\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E次にAnimatorをアタッチします。\u003Cbr \u002F\u003EUnityChanLocomotions.controllerをUnityちゃんのAnimatorのControllerに設定します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.12.57-1024x380.png\" alt=\"\" class=\"wp-image-205\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでUnityちゃんが動き回るようになります。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F06\u002Fスクリーンショット-2020-06-10-8.15.02-1024x443.png\" alt=\"\" class=\"wp-image-206\"\u002F\u003E\u003C\u002Ffigure\u003E\n","\u003Cp\u003EUnityちゃんは無料で使えます。AssetStoreからUnity-Chan!をダウンロードしてプロジェクトにインポートします。 Unityちゃんを動かす といっても用意されているものを使えばOKまずはスクリプトをアタ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F10\u002F3d%e3%81%aeunity%e3%81%a1%e3%82%83%e3%82%93%e3%82%92%e5%8b%95%e3%81%8b%e3%81%99\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E3DのUnityちゃんを動かす\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F202","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=202","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F202\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=202","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=202","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=202",197,"https:\u002F\u002Fvolkruss.com\u002F?p=197","unity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F08\u002Funity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b\u002F","Unityで2Dのギャルゲーを作ったので公開","\n\u003Cp\u003Eプレイ\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F\" target=\"_blank\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eシナリオを考えるのが難しかったですが、シナリオを考えないとゲームにならないので頑張って考えました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回作ったのがギャルゲーです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eギャルゲーで考えないといけないのはシナリオ90割で、残りの10割をスクリプトに時間をかけます。\u003Cbr \u002F\u003E溢れ出たパーセンテージですが、スクリプトに関しては\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fkanchi0914.hatenablog.com\u002Fentry\u002F2019\u002F07\u002F23\u002F070005\" target=\"_blank\"\u003Ehttps:\u002F\u002Fkanchi0914.hatenablog.com\u002Fentry\u002F2019\u002F07\u002F23\u002F070005\u003C\u002Fa\u003E\u003Cbr \u002F\u003E参考にしました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテキストファイルをパースしてシナリオを表示させます。\u003Cbr \u002F\u003E条件付きルート遷移(if文)の追加とBGMの追加などは必要でしたが、基本的にスクリプトは参考サイト様に倣って書き上げた。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E画面についてはさすがUnityです。ロジックを書く必要がなく、私がやった作業はただ並べるだけ。すごいなぁ。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eプレイ https:\u002F\u002Fvolkruss.com\u002Fnovelsimin\u002F シナリオを考えるのが難しかったですが、シナリオを考えないとゲームにならないので頑張って考えました。 今回作ったのがギャルゲーです。 ギャルゲーで考&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F06\u002F08\u002Funity%e3%81%a72d%e3%81%ae%e3%82%ae%e3%83%a3%e3%83%ab%e3%82%b2%e3%83%bc%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityで2Dのギャルゲーを作ったので公開\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",63,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F197","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=197","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F197\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=197","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=197","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=197",192,"https:\u002F\u002Fvolkruss.com\u002F?p=192","unity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F31\u002Funity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f\u002F","Unityでゲームを作ったので公開した","\n\u003Cp\u003E色々と面倒臭いところは省略したのでゲームとしての完成度はとても低いが、Unityの使い方を勉強するのにはちょうど良かったです。\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"wp-block-image\"\u003E\u003Cfigure class=\"aligncenter size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002FimageLicenseLogo.png\" alt=\"\" class=\"wp-image-193\"\u002F\u003E\u003Cfigcaption\u003E\u003Ca href=\"https:\u002F\u002Funity-chan.com\u002Fcontents\u002Flicense_jp\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Funity-chan.com\u002Fcontents\u002Flicense_jp\u002F\u003C\u002Fa\u003E\u003C\u002Ffigcaption\u003E\u003C\u002Ffigure\u003E\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003Eプレイ場所：\u003Ca href=\"http:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F\"\u003Ehttp:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eゲームを作るならUnityだなぁと思いました。実はUnityに入る前にはmelon.jsとcocos2dxを試していますが、やはりUnityだと確信しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003E色々と面倒臭いところは省略したのでゲームとしての完成度はとても低いが、Unityの使い方を勉強するのにはちょうど良かったです。 プレイ場所：http:\u002F\u002Fvolkruss.com\u002Funitychangame\u002F ゲームを作&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F31\u002Funity%e3%81%a7%e3%82%b2%e3%83%bc%e3%83%a0%e3%82%92%e4%bd%9c%e3%81%a3%e3%81%9f%e3%81%ae%e3%81%a7%e5%85%ac%e9%96%8b%e3%81%97%e3%81%9f\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EUnityでゲームを作ったので公開した\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",65,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F192","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=192","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F192\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=192","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=192","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=192",156,"https:\u002F\u002Fvolkruss.com\u002F?p=156","%e9%96%a2%e6%95%b0%e5%9e%8bjavascript","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F24\u002F%e9%96%a2%e6%95%b0%e5%9e%8bjavascript\u002F","関数型JavaScript","\n\u003Cp\u003E暇な人は読んでください。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E勉強メモ的なものです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E俺は激怒した\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EBuild = function (name,Maketype){\n  const machineName = name;\n  return function (cost){\n    Maketype(cost,machineName);\n  }\n}\ntypeOne = function(cost,name){\n  console.log(\"Made In TypeOne - cost is:\" + cost + \" name is \" + \"'\"+ name +\"'\");\n}\ntypeTwo = function(cost,name){\n  console.log(\"Made In TypeTwo- cost is:\" + cost * 2 + \" name is \" + name + \" (C) \");\n}\nconst Robo1 = Build(\"zaku\",typeOne);\nRobo1(100);\nconst Robo2 = Build(\"guhu\",typeTwo);\nRobo2(100);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E&#8220;Made In TypeOne &#8211; cost is:100 name is &#8216;zaku'&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;Made In TypeTwo- cost is:200 name is guhu (C) &#8220;\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eこれは関数を返す関数やらクロージャーやらが使われている。\u003Cbr \u002F\u003Eなぜこんなことが起きてしまうかと言うと、JavaScriptは関数が第一級オブジェクトであるからだ。\u003Cbr \u002F\u003E簡単に言えば、関数を引数にしたり戻り値として使えるということ。\u003Cbr \u002F\u003Eまた、関数を引数にとる高階関数もある。高階関数で有名なのがmap関数だ。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Efunction calcTax(num){\n  return num * 1.08;\n}\nconst values = &#91;100,150,200];\nconst plusTax = values.map( v =\u003E calcTax(v) );\nconsole.log(plusTax);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E[108, 162, 216]\u003C\u002Fp\u003E\u003Cp\u003Eここではわかりやすく&#8221;あえて&#8221;calcTaxを定義しています。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003EこのようにJavaScriptは関数の使用範囲が広いのだ。\u003Cbr \u002F\u003E関数型言語というのは関数が主体となっていくため、このように関数を柔軟に扱う必要がある。そしてJavaScriptはそれができる。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E純粋関数型言語：Haskellのような言語は純粋関数型言語と呼ばれている。例えば変数に値を再代入することはもちろん、for文なんかも許されていない。またNullという概念自体がなくMaybeなどモナドという考えがある。また関数は必ず値を受け取って必ず値を返す。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003Eカリー化\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E関数を美味しくするにはスパイスが必要だ。Haskellのような神々しい言語では全ての関数は引数を一つしか取らない。だが実際には複数の引数を取っている関数を定義できる。理由としては内部で美味しいスパイスが効いているから。。。ごほん、引数をとる関数を返すというのを繰り返しているのです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eでは、関数を返しまくる関数を作ってみた\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Efunction addNum(num1){\n  return function(num2){\n    return num1 + num2;\n  }\n}\nconst addTen = addNum(10);\nconsole.log(addTen(3));\nfunction makeDOM(item){\n  return function(child){\n    return function(parrent){\n      return function(text){\n        return \"&lt;\" + parrent + \"\u003E&lt;\" + child + \"\u003E&lt;\" + item + \"\u003E\" + text + \"&lt;\u002F\" + item + \"\u003E&lt;\u002F\" + child + \"\u003E&lt;\u002F\" + parrent + \"\u003E\";\n      }\n    }\n  }\n}\nconst makeH2 = makeDOM(\"B\")(\"SPAN\")(\"H2\");\nconsole.log(makeH2(\"ネオグランゾンの倒し方\"));\nconsole.log(makeH2(\"サフィーネをレベル30にする方法\"));\nconsole.log(makeH2(\"ナグツァート無敵モードを倒す方法\"));\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E13\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&lt;H2&gt;&lt;SPAN&gt;&lt;B&gt;ネオグランゾンの倒し方&lt;\u002FB&gt;&lt;\u002FSPAN&gt;&lt;\u002FH2&gt;&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&lt;H2&gt;&lt;SPAN&gt;&lt;B&gt;サフィーネをレベル30にする方法&lt;\u002FB&gt;&lt;\u002FSPAN&gt;&lt;\u002FH2&gt;&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&lt;H2&gt;&lt;SPAN&gt;&lt;B&gt;ナグツァート無敵モードを倒す方法&lt;\u002FB&gt;&lt;\u002FSPAN&gt;&lt;\u002FH2&gt;&#8221;\u003C\u002Fp\u003E\u003Ccite\u003Eh2 span bという謎は置いといてくれ。\u003C\u002Fcite\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst newLink = makeDOM(\"NEW\")(\"LINK\");\nconst blankLink = makeDOM(\"BKANK\")(\"LINK\")\nconst blueNewLink = newLink(\"BLUE\");\nconst blackBankLink = blankLink(\"BLACK\");\nconst link1 = blueNewLink(\"youtube.com\");\nconst link2 = blackBankLink(\"niconico.com\");\nconsole.log(link1)\nconsole.log(link2)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E&#8220;&lt;BLUE&gt;&lt;LINK&gt;&lt;NEW&gt;youtube.com&lt;\u002FNEW&gt;&lt;\u002FLINK&gt;&lt;\u002FBLUE&gt;&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&lt;BLACK&gt;&lt;LINK&gt;&lt;BKANK&gt;niconico.com&lt;\u002FBKANK&gt;&lt;\u002FLINK&gt;&lt;\u002FBLACK&gt;&#8221;\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eカリー化された関数を使って新しい関数を作っているのがわかる。これは関数を部分適用している。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E近代的な書き方ではこのようにもできる\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst callType = name =\u003E type =\u003E name + type;\nconsole.log(callType(\"横山\")(\"様\"));\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E&#8220;横山様&#8221;\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch2\u003E関数型で考えたサンプル\u003C\u002Fh2\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Efunction validation(rule,message){\n  return function(value){\n    if(rule(value)){\n      console.log(\"OK\");\n    }else{\n      console.log(message)\n    }\n  }\n}\nconst overTen = validation( x =\u003E x \u003E 10 , \"１０以下なのでだめでーす\");\noverTen(4)\noverTen(10)\noverTen(11)\nconsole.log(\"---------------------\")\nconst odd = validation( x =\u003E x % 2 === 0, \"奇数はエラーです\");\nodd(5);\nodd(6);\nconsole.log(\"---------------------\")\nvalidation( x =\u003E x===true ,\"とりあえずエラーです\")(false)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E&#8220;１０以下なのでだめでーす&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;１０以下なのでだめでーす&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;OK&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8220;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;奇数はエラーです&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;OK&#8221;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8220;\u003C\u002Fp\u003E\u003Cp\u003E&#8220;とりあえずエラーです&#8221;\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eバリデーション。ルールとメッセージを関数に渡すとバリデーション関数が出来上がるという仕組み\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E関数合成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E関数合成を簡単な例でやってみる\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst addTow = x =\u003E x + 2;\nconst double = x =\u003E x * 2;\nconst addOne = x =\u003E x + 1;\nconst result = double(addOne(addTow(1)));\n\u002F\u002F 3 → 4 → 8\nconsole.log(result) \u002F\u002F 8\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E読みづらい。関数を適用した結果を別の関数に適用するを繰り返すだけ。\u003Cbr \u002F\u003Eよくあるのがreduceを使う関数合成方法。\u003Cbr \u002F\u003Ereduceは値を合計しながら関数を適用し続けることができる。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst datas = &#91;1,2,3,4];\nconst reduceresult = datas.reduce( (accumu,current) =\u003E {\n  return accumu += current;\n});\nconsole.log(reduceresult);\n\u002F\u002F 10\nconst datas = &#91;1,2,3,4];\nconst reduceresult = datas.reduce( (accumu,current) =\u003E {\n  return accumu += current;\n},100); \u002F\u002F 100が初期値\nconsole.log(reduceresult);\n\u002F\u002F 110\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこのようにreduceは初期値を使用することもでき、配列に入った要素をぐるぐる回しながら合計値として値を保持できる。ということは配列の中に関数があった場合はどうなるのか\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst datas = &#91;addOne,addOne,addOne,addOne];\nconst reduceresult = datas.reduce( (accumu,fun) =\u003E {\n  return fun(accumu);\n},0);\nconsole.log(reduceresult); \u002F\u002F 4\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ewow！ファンタスティック！配列の中にaddOne関数が入っていて、それを初期値0に適用し続ければ関数合成ができた！\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eスプレッド演算子を使ってみる\u003C\u002Fh3\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Efunction showArgs(...args){\n  console.log(args);\n}\nshowArgs(1,2,3,4,5,6,7,8,9,10);\n\u002F\u002F &#91;1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E&#8230;から始まるスプレッド演算子を使うと、複数の要素を配列に変換してくれる。\u003Cbr \u002F\u003Evue.jsでもどっかで使われていたような気がする。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあとはクロージャと組み合わせれば関数合成の完成だ！\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\u002F\u002F 複数の関数を受け取る関数\nfunction composition(...funs){\n  return (targetValue) =\u003E {\n    return funs.reduce( (accum,func) =\u003E {\n      return func(accum);\n    },targetValue)\n  }\n}\nconst sugeResult = composition(addOne,addOne,addOne,addOne)(10);\nconsole.log(sugeResult);\n\u002F\u002F 14\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E関数型っぽくなってきた。\u003C\u002Fp\u003E\n","\u003Cp\u003E暇な人は読んでください。 勉強メモ的なものです。 俺は激怒した &#8220;Made In TypeOne &#8211; cost is:100 name is &#8216;zaku&#8217;&#8221; &#8220;&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F24\u002F%e9%96%a2%e6%95%b0%e5%9e%8bjavascript\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003E関数型JavaScript\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",26,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F156","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=156","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F156\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=156","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=156","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=156",132,"https:\u002F\u002Fvolkruss.com\u002F?p=132","vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5\u002F","Vue.jsとLaravelでカレンダーアプリを作成する EP5","\n\u003Cp\u003E前回まででだいぶ完成しました。今回の記事で完成させます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事でやること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eaxsiosを使ってリクエストする\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003EまずはgetAllEventから全てのイベント情報を取得します。なんとLaravelではaxiosが何もしなくても使える状態になっているので簡単です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalenderComponent.vueのscriptのmountedに記載を追加します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    mounted () {\n      \u002F\u002F 初期処理を書く\n      axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n    },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Efetchの場合はcatchに癖があるためにaxiosを使うのが良いらしい。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Eこれで画面を確認してみます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-17.55.55-1024x739.png\" alt=\"\" class=\"wp-image-134\" width=\"501\" height=\"361\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E先ほど追加したyoutubeを見るというのが表示されています。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E最初に初期データが表示されています。まずvueが作成されてmountedが走るからです。\u003Cbr \u002F\u003E後々、初期データを空にすれば良いだけです。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch3\u003E新規追加する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E次はcreateのpost送信を行います。これはCreateComponent.vueからパラメータが送られてきましたよね。\u003Cbr \u002F\u003E今は直接配列にpushしていますが、これをaxiosでpost送信するように変更します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async saveEvent(params){\n        \u002F\u002F this.events.push(params);\n        await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで今まで通り新規投稿してみます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-20.44.11-1024x720.png\" alt=\"\" class=\"wp-image-138\" width=\"566\" height=\"397\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003EIDは自動的にインクリメントされて登録されています。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Easync awaitは処理が終わるまで待ってくれます。今回は特段意識することはないかな\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch4\u003Easync awaitの挙動\u003C\u002Fh4\u003E\n\n\n\u003Cp\u003E例えば投稿した後に何か処理をするとします。ログ出力でもいいや。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      saveEvent(params){\n        \u002F\u002F this.events.push(params);\n          axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n        console.log(\"保存しました。\");\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこの場合は、saveEventが発火してpost送信してすぐにログが出力されます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async saveEvent(params){\n        \u002F\u002F this.events.push(params);\n          await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n          })\n        console.log(\"保存しました。\");\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eしかしasync awaitの場合はすぐには保存しました。という所に処理はいかず、post送信が終わるまで待ってくれます。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Eイベントの削除を行う\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eこちらも要領は同じなのでサクッと実装していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EdeleteEventメソッドを修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      async deleteEvent(){\n          const params = {\n            id : this.selectedEvent.id\n          }\n          await axios.post('\u002Fdelete',params)\n            .then( res =\u003E {\n              alert(\"削除しました。\");\n            })\n            .catch( e =\u003E {\n              console.log(e);\n            })\n            .finally( () =\u003E {\n            })\n          \u002F\u002Fついでに閉じる\n          this.eventAlert = false;\n      },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで削除ボタンを押した時に、対象のIDのイベントが削除され、アラートが表示されていることを確認できます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eこれにて、カレンダーアプリは完成ですが、微調整をして終わりにします。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E登録後と削除後にイベントを更新する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E登録ボタンを押した時、削除ボタンを押した時に、アクションを起こしたデータ画面上で更新されていないのは少し違和感があります。画面をリロードして読み込むというのはナンセンスなので実装します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eといっても、mountedで行なっていた処理を切り出して空いていたfinallyで呼び出すだけです。\u003Cbr \u002F\u003Escript全文を載せます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-21`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n          id : 1,\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n          id : 2,\n        },\n      ],\n      eventAlert:false,\n      selectedItem : null,\n      selectedEvent : {},\n    }),\n    computed:{\n    },\n    mounted () {\n      \u002F\u002F 一覧を取得する\n      this.getAllEvent();\n      \u002F*\n      axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n      *\u002F\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      async saveEvent(params){\n          await axios.post('\u002Fcreate',params)\n          .then( res =\u003E {\n            console.log(res);\n          })\n          .catch( e =\u003E {\n            console.log(e);\n          })\n          .finally( () =\u003E {\n            \u002F\u002F一覧を取得する\n            this.getAllEvent();\n          })\n        console.log(\"保存しました。\");\n      },\n      clickEvent( {nativeEvent,event} ){\n        this.selectedEvent = event;\n        this.selectedItem = nativeEvent.target;\n        setTimeout(() =\u003E this.eventAlert = true, 10);\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        nativeEvent.stopPropagation();\n      },\n      async deleteEvent(){\n          const params = {\n            id : this.selectedEvent.id\n          }\n          await axios.post('\u002Fdelete',params)\n            .then( res =\u003E {\n              alert(\"削除しました。\");\n            })\n            .catch( e =\u003E {\n              console.log(e);\n            })\n            .finally( () =\u003E {\n              \u002F\u002F一覧を取得する\n              this.getAllEvent();\n            })\n          \u002F\u002Fついでに閉じる\n          this.eventAlert = false;\n      },\n      \u002F\u002F 一覧を取得する\n      async getAllEvent(){\n        await axios.get('\u002Fcalendars')\n        .then( res =\u003E {\n          this.events = res.data;\n        })\n        .catch( e =\u003E {\n          console.log(e);\n        })\n      },\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでかっこよくなりました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eあと、CreateComponent.vueのsaveメソッドを少し修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        save(){\n            if( !this.isNotNull(this.start,this.end) ){\n                return ;\n            }\n            if( !this.compareDate(this.start,this.end) ){\n                return;\n            }\n            const params = {\n                name : this.name,\n                start : this.day + ' ' + this.start,\n                end : this.day + ' ' + this.end\n            }\n            \u002F\u002F追加\n            this.dialog = false;\n            this.$emit('save',params);\n        },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eセーブしたら新規投稿画面を閉じるようにしました。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003Emoreに対応する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E同じ日付に複数のイベントがあるとmoreと表示されます。これは別のイベント処理が必要なので書いてみます。現状だと新規登録画面が表示されてしまいます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-23.22.02-1024x604.png\" alt=\"\" class=\"wp-image-146\" width=\"535\" height=\"314\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E対応は簡単です\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:event=\"clickEvent\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n          @click:more=\"showDay\" 追加\n      \u003E&lt;\u002Fv-calendar\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Emoreとなった時は日付表示にしてしまえばOKです。日付表示では複数のイベントがあった場合は時間ごとに表示されるので。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E日付表示の状態でイベントを削除してもきちんと削除されますし、きちんとデータの再更新が行われます。\u003Cbr \u002F\u003Evuetifyってすごい！\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以上で終わりです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eカレンダーにはもっと色々イベントがありますし、laravelの認証機能を入れればプライベートなwebカレンダーアプリケーションの完成です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003E前回まででだいぶ完成しました。今回の記事で完成させます。 この記事でやること axsiosを使ってリクエストする まずはgetAllEventから全てのイベント情報を取得します。なんとLaravelではaxiosが何もし&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep5\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP5\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F132","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=132","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F132\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=132","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=132","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=132",106,"https:\u002F\u002Fvolkruss.com\u002F?p=106","vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep4","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep4\u002F","Vue.jsとLaravelでカレンダーアプリを作成する EP4","\n\u003Cp\u003E前回までで美しいカレンダーの作成が完了した。全てVuetifyが提供してくれたのでデザインなんてのはほとんど何もしていない。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回からLaravelのほうを修正していく。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事でやること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eテーブルの作成\u003C\u002Fli\u003E\u003Cli\u003Eコントローラーの作成\u003C\u002Fli\u003E\u003Cli\u003Eルートの設定\u003C\u002Fli\u003E\u003Cli\u003EPostmanでリクエスト作成\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Ch2\u003Eテーブルの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずはテーブルが必要です。今回は認証などはしませんが、認証も簡単に入れることができるのがLaravelのすごいところですね。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EちなみにMySQLを使います。カレンダーデータベースを用意しました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E.env\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=calendar\nDB_USERNAME=homestead\nDB_PASSWORD=secret\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-0.14.45-1024x183.png\" alt=\"\" class=\"wp-image-107\" width=\"591\" height=\"105\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Edatabase &gt; migration　フォルダにあるファイルは使用しないので削除しておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eテーブルは一つだけにします。calendarテーブルです。\u003Cbr \u002F\u003E必要なのはid,name,start,endです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけでartisanコマンドを使用します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ephp artisan make:migration create_calendars_table\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでmigrationフォルダにマイグレーションファイルが作成されます。\u003Cbr \u002F\u003Eそして作成されたマイグレーションファイルを修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\nclass CreateCalendarsTable extends Migration\n{\n    \u002F**\n     * Run the migrations.\n     *\n     * @return void\n     *\u002F\n    public function up()\n    {\n        Schema::create('calendars', function (Blueprint $table) {\n            $table-\u003Eid();\n            $table-\u003Estring('name');\n            $table-\u003Estring('start');\n            $table-\u003Estring('end');\n            $table-\u003Etimestamps();\n        });\n    }\n    \u002F**\n     * Reverse the migrations.\n     *\n     * @return void\n     *\u002F\n    public function down()\n    {\n        Schema::dropIfExists('calendars');\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eそしてマイグレーションします\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ephp artisan migrate\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-0.31.13-1024x175.png\" alt=\"\" class=\"wp-image-111\" width=\"587\" height=\"100\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-0.31.53.png\" alt=\"\" class=\"wp-image-112\" width=\"464\" height=\"252\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eテーブルが追加されているのがわかります。\u003Cbr \u002F\u003Eちなみにマイグレーションファイルでは、$table-&gt;id();しか記載がないですが、デフォルトでプライマリキーとなりオートインクリメントになるようです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-0.33.12-1024x364.png\" alt=\"\" class=\"wp-image-113\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Ch2\u003Eコントローラーの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eコントローラーもお作法に従って作成するだけなので簡単です。\u003Cbr \u002F\u003Eコントローラーは App &gt; Http &gt; Controllers　フォルダに作成していきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eいろんなパターンが存在するようですが、シンプルに一つのコントローラーを作成していきます。\u003Cbr \u002F\u003Eコントローラーの作成もなんとコマンドで行うことができます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E php artisan make:controller CalendarController\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EこれでControllersフォルダにファイルが作成されています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E必要な処理を考えてみましたが\u003Cbr \u002F\u003E今回は更新処理が必要ないので以下のようになるかと思います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalendarController.php\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nclass CalendarController extends Controller\n{\n    public function getAllEvent(){\n    }\n    public function createEvent(){\n    }\n    public function deleteEvent(){\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E定義したメソッドを順番に実装していきますが、モデルを作っておくと便利なのでモデルを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ephp artisan make:model Calendar\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eテーブル名称と関連づけておくのがお作法になっています。\u003Cbr \u002F\u003EモデルはAppフォルダに作成されています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E実は特に書くことがないのですが、おまじない程度に以下を記載しておきます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nnamespace App;\nuse Illuminate\\Database\\Eloquent\\Model;\nclass Calendar extends Model\n{\n    protected $fillable = &#91;'name','start','end','id'];\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eコントローラーに戻ります。特に難しくないので一気に書いてしまいます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\n\u002F\u002F追加\nuse App\\Calendar;\nclass CalendarController extends Controller\n{\n    public function getAllEvent(){\n        $calendars = Calendar::all();\n        return $calendars;\n    }\n    public function createEvent(Request $request){\n        $calendar = new Calendar();\n        $calendar-\u003Ename = $request-\u003Ename;\n        $calendar-\u003Estart = $request-\u003Estart;\n        $calendar-\u003Eend = $request-\u003Eend;\n        $calendar-\u003Esave();\n    }\n    public function deleteEvent(Request $request){\n        \u002F\u002F idのものを1件取得する\n        $calendar = Calendar::where('id','=',$request-\u003Eid)\n            -\u003Efirst();\n        if($calendar){\n            $calendar-\u003Edelete();\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eルートの設定\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eルートの設定をします。ルートはリクエストに対応したコントローラーのアクションを実行します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eルートの設定はroutes &gt; web.phpで行います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;?php\nuse Illuminate\\Support\\Facades\\Route;\n\u002F*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*\u002F\nRoute::get('\u002F', function () {\n    return view('welcome');\n});\nRoute::get('\u002Fcalendars','CalendarController@getAllEvent');\nRoute::post('\u002Fcreate','CalendarController@createEvent');\nRoute::post('\u002Fdelete','CalendarController@deleteEvent');\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eまぁやっていることはわかりやすいですね。@メソッド名です。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EPostmanを使う\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EPostmanはリクエストを作成できる便利なアプリです。まだフォーム画面とか完成してないけど、リクエストを投げて結果を確認したい時に便利です。試しに以下のリクエストを試してみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ehttp:&#47;&#47;homestead.test\u002Fcalendars\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large\"\u003E\u003Cimg src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.06.27-1024x741.png\" alt=\"\" class=\"wp-image-121\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eまだデータがないので結果が空ですが、きちんと動いていることがわかります。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003EPostmanでデータを投入してみる\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E次にpost送信してレコードを追加しますが、CSRFトークンをpostに含める必要があります。少し面倒ですがやっていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eその前に書き忘れていた箇所に追記をします。\u003Cbr \u002F\u003Ewelcome.blade.phpのheadを修正します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;head\u003E\n        &lt;meta charset=\"utf-8\"\u003E\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003E\n        &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003E　追加\n        &lt;title\u003ELaravel&lt;\u002Ftitle\u003E\n    &lt;\u002Fhead\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にコントローラーのgetAllEventメソッドを一時的に修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    public function getAllEvent(){\n        \u002F*\n        $calendars = Calendar::all();\n        return $calendars;\n        *\u002F\n        return csrf_token();\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003ECSRFトークンを取得するようにしたら、PostmanでGetします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.43.04-1024x668.png\" alt=\"\" class=\"wp-image-122\" width=\"553\" height=\"360\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E帰ってきた値をコピーして、POSTリクエストを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EHeadersにX-CSRF-TOKENというKeyを追加して、VALUEにコピーしていたトークンの値を貼り付けます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.44.34-1024x664.png\" alt=\"\" class=\"wp-image-123\" width=\"549\" height=\"355\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EParamsに必要事項を記載してSendします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.45.57-1024x668.png\" alt=\"\" class=\"wp-image-124\" width=\"576\" height=\"375\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E一旦何か処理が走りますが結果は帰ってきているように見えません。しかし大丈夫です。今回はviewを返したりしておらず、ただレコードを追加しただけなので。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今度はコントローラーのgetAllEventメソッドを元に戻してPostmanでGetします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.48.18-1024x766.png\" alt=\"\" class=\"wp-image-125\" width=\"604\" height=\"451\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E予めショッピングを追加していたのですが、、今追加したYoutubeを見るというイベントも作成されているのがわかります。またIDがオートインクリメントされているのもわかります。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Edelete処理もやってみます。先ほどPOST送信したものの内容を変更します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.52.03-1024x764.png\" alt=\"\" class=\"wp-image-128\" width=\"560\" height=\"417\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E結果をみてみます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-8.54.00-1024x770.png\" alt=\"\" class=\"wp-image-129\" width=\"548\" height=\"412\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eid=1のレコードが削除されています。\u003C\u002Fp\u003E\n","\u003Cp\u003E前回までで美しいカレンダーの作成が完了した。全てVuetifyが提供してくれたのでデザインなんてのはほとんど何もしていない。 今回からLaravelのほうを修正していく。 この記事でやること テーブルの作成 コントローラ&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep4\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP4\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F106","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=106","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F106\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=106","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=106","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=106",94,"https:\u002F\u002Fvolkruss.com\u002F?p=94","vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep3","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep3\u002F","Vue.jsとLaravelでカレンダーアプリを作成する EP3","\n\u003Cp\u003Evuetifyは素晴らしいカレンダーを提供してくれることがわかりました。\u003Cbr \u002F\u003E今回は、もう少しカレンダーをいじっていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回はclick:event=&#8221;&#8221;の処理を書いていきますが、ここは少し注意が必要なのでどういった注意をすればいいのかを説明します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまず結論から述べますと、click:eventが発火されると、click:dayイベントまで発火されるということです。\u003Cbr \u002F\u003Eなのでclick:dayイベントの発火を食い止める必要があります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eイベントクリック時の処理を作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eまずは普通にclick:eventの処理を書いていきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalenderComponent.vue\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    &lt;div id=\"form-modal\"\u003E\n      &lt;create-component ref=\"form\" @save=\"saveEvent\"\u003E&lt;\u002Fcreate-component\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:event=\"clickEvent\" これがイベント処理\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n        },\n      ],\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      saveEvent(params){\n        this.events.push(params);\n        console.log(`保存しました。${params}`)\n      },\n      \u002F\u002F event → day の順番で呼ばれる。\n      clickEvent( {nativeEvent,event} ){\n        console.log(\"clickEvetn\");\n        console.log(event);\n        console.log(event.name)\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        \u002F\u002FnativeEvent.stopPropagation();\n      }\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでイベントをクリックした時の処理が実装されました。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかしイベントをクリックすると、createEventメソッドまで呼ばれてしまい、新規登録画面が開いてしまいます。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-20-15.49.47-1024x732.png\" alt=\"\" class=\"wp-image-96\" width=\"517\" height=\"369\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそこで、今コメントアウトしている箇所のコメントアウトを外すと、createEventの処理が走らなくなります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E      clickEvent( {nativeEvent,event} ){\n        console.log(\"clickEvetn\");\n        console.log(event);\n        console.log(event.name)\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        nativeEvent.stopPropagation();\n      }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでイベントをクリックした時にイベントクリック処理のみが走るようになります。\u003Cbr \u002F\u003E参考URL：\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgithub.com\u002Fvuetifyjs\u002Fvuetify\u002Fblob\u002Fmaster\u002Fpackages\u002Fdocs\u002Fsrc\u002Fexamples\u002Fcalendars\u002Fcomplex\u002Fevents.vue#L319\" target=\"_blank\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fvuetifyjs\u002Fvuetify\u002Fblob\u002Fmaster\u002Fpackages\u002Fdocs\u002Fsrc\u002Fexamples\u002Fcalendars\u002Fcomplex\u002Fevents.vue#L319\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eイベントを削除できるようにする\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eイベントの削除を行う。簡単に削除できるようにするためにidを追加する。\u003Cbr \u002F\u003E新規登録ではidを追加できないが、これはLaravelにやってもらうので今回は予めあるデータにidをつけてその動きを確認する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eそしてイベントをクリックした時に、メニューが表示されるようにします。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-20-22.37.38.png\" alt=\"\" class=\"wp-image-100\" width=\"411\" height=\"240\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E実はこれ少し難しかったです。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalenderComponent.vueのtemplateのみ\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    &lt;div id=\"form-modal\"\u003E\n      &lt;create-component ref=\"form\" @save=\"saveEvent\"\u003E&lt;\u002Fcreate-component\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:event=\"clickEvent\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n　　　ここついか\n    &lt;v-menu\n        v-model=\"eventAlert\"\n        :close-on-content-click=\"false\"\n        :activator=\"selectedItem\"\n      \u003E\n        &lt;v-card\n          color=\"grey lighten-4\"\n          min-width=\"350px\"\n          flat\n        \u003E\n        &lt;v-card-text\u003E\n          &lt;span v-html=\"selectedEvent.id\"\u003E&lt;\u002Fspan\u003E\n          &lt;span v-html=\"selectedEvent.name\"\u003E&lt;\u002Fspan\u003E\n        &lt;\u002Fv-card-text\u003E\n        &lt;v-btn\n          text\n          color=\"primary\"\n          @click=\"eventAlert = false\"\n        \u003E\n          閉じる\n        &lt;\u002Fv-btn\u003E\n        &lt;v-btn\n          text\n          color=\"error\"\n          @click=\"eventAlert = false\"\n        \u003E\n          削除\n        &lt;\u002Fv-btn\u003E\n        &lt;\u002Fv-card\u003E\n      &lt;\u002Fv-menu\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこのv-menuはeventがクリックされた時にeventAlertがtrueとなり表示されます。\u003Cbr \u002F\u003Eactivatorというのはなくても動作しますけど、これがあるとクリックした位置に表示されるようになります。（理由はよくわかりませんでしたが公式をパ●って作りました）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E続いてscript箇所です。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n          id : 1, \u002F\u002F idを追加\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n          id : 2,\n        },\n      ],\n      eventAlert:false,\n      selectedItem : null,\n      selectedEvent : {},\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      saveEvent(params){\n        this.events.push(params);\n        console.log(`保存しました。${params}`)\n      },\n      clickEvent( {nativeEvent,event} ){\n        this.selectedEvent = event;\n        this.selectedItem = nativeEvent.target;\n        \u002F\u002Fよくわからんが時間差でやるとうまく動作する。\n        setTimeout(() =\u003E this.eventAlert = true, 10);\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        nativeEvent.stopPropagation();\n      }\n    }\n  }\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003Ethis.selectedEvent = event;でクリックしたイベント情報を登録しておきます。idやnameにアクセスするため\u003C\u002Fp\u003E\u003Cp\u003EsetTimeout(() =&gt; this.eventAlert = true, 10);はよくわからんが必要\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Ch3\u003E削除処理を実装する\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E削除処理を行います。削除ボタンを押した時にそのIDのイベントを削除するということです。\u003Cbr \u002F\u003E変更箇所は少しですが、ID指定したIDのイベントを削除できるということを確認します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Etemplate\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    &lt;div id=\"form-modal\"\u003E\n      &lt;create-component ref=\"form\" @save=\"saveEvent\"\u003E&lt;\u002Fcreate-component\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:event=\"clickEvent\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n    &lt;v-menu\n        v-model=\"eventAlert\"\n        :close-on-content-click=\"false\"\n        :activator=\"selectedItem\"\n      \u003E\n        &lt;v-card\n          color=\"grey lighten-4\"\n          min-width=\"350px\"\n          flat\n        \u003E\n        &lt;v-card-text\u003E\n          &lt;span v-html=\"selectedEvent.id\"\u003E&lt;\u002Fspan\u003E\n          &lt;span v-html=\"selectedEvent.name\"\u003E&lt;\u002Fspan\u003E\n        &lt;\u002Fv-card-text\u003E\n        &lt;v-btn\n          text\n          color=\"primary\"\n          @click=\"eventAlert = false\"\n        \u003E\n          閉じる\n        &lt;\u002Fv-btn\u003E\n        &lt;v-btn\n          text\n          color=\"error\"\n          @click=\"deleteEvent\" 変更\n        \u003E\n          削除\n        &lt;\u002Fv-btn\u003E\n        &lt;\u002Fv-card\u003E\n      &lt;\u002Fv-menu\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E変更は削除のボタンアクションを変更しただけ。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003Escript\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n          id : 1,\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n          id : 2,\n        },\n      ],\n      eventAlert:false,\n      selectedItem : null,\n      selectedEvent : {},\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      saveEvent(params){\n        this.events.push(params);\n        console.log(`保存しました。${params}`)\n      },\n      clickEvent( {nativeEvent,event} ){\n        this.selectedEvent = event;\n        this.selectedItem = nativeEvent.target;\n        setTimeout(() =\u003E this.eventAlert = true, 10);\n        \u002F\u002F次にcreateEventが走ってしまうのを防御する\n        nativeEvent.stopPropagation();\n      },\n      \u002F\u002F追加\n      deleteEvent(){\n          \u002F\u002F 正しい削除処理はLaravelがまだできない\n          \u002F\u002F とりあえずnewArrayにfilterした結果を突っ込んで返すだけ。\n          let newArray = this.events.filter( item =\u003E {\n            return item.id != this.selectedEvent.id\n          });\n          this.events = newArray;\n          this.eventAlert = false;\n      }\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E削除のdeleteEventを追加。\u003C\u002Fp\u003E\u003Cp\u003Efilter関数で選択されたID以外の要素に絞り込んでいるだけ。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-21-0.08.41-1024x744.png\" alt=\"\" class=\"wp-image-104\" width=\"548\" height=\"398\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E当たり前体操が削除されている。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eここまでいくとフロントの方はだいたい完成したので次回からLaravelの方をいじっていく。\u003Cbr \u002F\u003Eといっても今回はそこまで複雑なことはしないので、すぐ終わるんじゃないかな？\u003C\u002Fp\u003E\n","\u003Cp\u003Evuetifyは素晴らしいカレンダーを提供してくれることがわかりました。今回は、もう少しカレンダーをいじっていきます。 今回はclick:event=&#8221;&#8221;の処理を書いていきますが、ここは少し注意が&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep3\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP3\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F94","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=94","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F94\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=94","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=94","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=94","https:\u002F\u002Fvolkruss.com\u002F?p=57","vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep2","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep2\u002F","Vue.jsとLaravelでカレンダーアプリを作成する EP2","\n\u003Cp\u003E前回までで静的なカレンダーの表示ができました。\u003Cbr \u002F\u003Eあらかじめ登録しておいたイベントしか表示できないのでは、カレンダーアプリとしては成立しませんが、かといってデータの登録と読み込みはサーバーとの通信が必要そうですね。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事でやること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eカレンダーの表示方法に関して\u003C\u002Fli\u003E\u003Cli\u003E登録画面の作成\u003C\u002Fli\u003E\u003Cli\u003Eデータの登録\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Ch2\u003Eカレンダーの表示方法について\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eカレンダーは月表示だけでなく、週、日、カスタムなど表示方法は様々である。管理も特段変わらないので、前回の月表示を日表示に変更して動きを確認する。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E変更箇所はscriptのみ\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`, \u002F\u002Fここ\n    type:'day', \u002F\u002Fここ\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n        },\n      ],\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n    }\n  }\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-19-19.50.47-1024x702.png\" alt=\"\" class=\"wp-image-69\" width=\"494\" height=\"338\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E大した変更をせずとも表示が変わっているのがわかる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Evuetiyが自動的に綺麗に表示してくれるのがわかる。\u003Cbr \u002F\u003Eとにかく難しいことを考える必要はなく、データを投入していけば、あとはvuetifyがなんとかしてくれる。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eまた詳細画面は、今回のケースでは作成不要です（日表示にすればOK)\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eというわけで、表示方法を切り替える処理を実装する。\u003Cbr \u002F\u003Eまず画面上部に表示方法を切り替えるリンクを取り付ける。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E表示の切り替えを行う\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eといっても簡単で、templateのみ修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-19-21.27.48-1024x742.png\" alt=\"\" class=\"wp-image-71\" width=\"456\" height=\"330\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eこんな感じでプルダウンリストが表示されてその選択値によってカレンダーの表示が切り替わっています。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E日付を変更する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EVue.jsでコンポーネントがその値を変更するのは非常に簡単です。\u003Cbr \u002F\u003Eカレンダーも同じで予めアクションが決まっているので、あとはそれ用のコールバック関数を用意すればいいです\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:date=\"showDay\" 　追加\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`,\n    type:'month',　\u002F\u002F月に戻す\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n        },\n      ],\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n　　　　\u002F\u002F追加\n      showDay( e ){\n        console.log(e)\n        \u002F\u002F 今日の日付に設定する。\n        this.today = date\n        this.type = 'day'\n      }\n    }\n  }\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこの状態でカレンダーの日付をクリックします。するとshowDayメソッドが呼ばれます。なんでかっていうと@click:date=&#8221;showDay&#8221; でshowDayを指定しているからという単純な理由です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eとりあえず動かすと引数のeをコンソールに出力しますが、まだうまく動作しません。\u003Cbr \u002F\u003E一旦コンソールの値を確認します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E{date: \"2020-05-06\", time: \"\", year: 2020, month: 5, day: 6, …}\ndate: \"2020-05-06\"\nday: 6\nfuture: true\nhasDay: true\nhasTime: false\nhour: 0\nminute: 0\nmonth: 5\npast: false\npresent: false\ntime: \"\"\nweekday: 3\nyear: 2020\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E出力結果のように、オブジェクトが渡されています。日付を変更する場合はここのdateが必要になっているので、引数でdateを指定して取得してしまうように変更します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    methods:{\n      showDay( {date} ){\n        console.log(date)\n        \u002F\u002F 今日の日付に設定する。\n        this.today = date\n        this.type = 'day'\n      }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E{}でkey名称を囲ってやればそのvalueが渡ってきます。今回はdateだけが必要なのでこれで十分です。ついでに表示方法を日付表示に変更してやれば、表示も切り替わります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E新規作成画面を作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eわりとカレンダーは立派になってきたので、今度はカレンダーにイベントを登録します。\u003Cbr \u002F\u003E流石に登録画面が用意されていないので自作していきますが、簡単です。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回、使うイベントは、dayです。dateは既に利用しました。dayはdateと違ってその日付の内部です。わかりづらいので画像で説明します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-19-23.14.25.png\" alt=\"\" class=\"wp-image-76\" width=\"417\" height=\"239\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003E丸で囲われた箇所がdateイベントで、それ以外の枠がdayイベントです。dayイベントが発火された時に、新規登録できるようにします。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E登録用のコンポーネントを作成します。\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003Eまずapp.jsを修正しておきます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Erequire('.\u002Fbootstrap');\nwindow.Vue = require('vue');\nimport Vuetify from 'vuetify';\nimport 'vuetify\u002Fdist\u002Fvuetify.min.css'\nVue.use(Vuetify)\nVue.component('sample-component',require('.\u002Fcomponents\u002FSample.vue').default);\nVue.component('calender-component', require('.\u002Fcomponents\u002FCalenderComponent.vue').default);\n\u002F\u002F add\nVue.component('create-component', require('.\u002Fcomponents\u002FCreateComponent.vue').default);\nconst app = new Vue({\n    el: '#app',\n    vuetify: new Vuetify({\n    }),\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にCreateComponent.vueを作成する。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-row justify=\"center\"\u003E\n    &lt;v-dialog v-model=\"dialog\" persistent max-width=\"600px\"\u003E\n      &lt;v-card\u003E\n        &lt;v-card-title\u003E\n          &lt;span class=\"headline\"\u003E新規登録&lt;\u002Fspan\u003E\n        &lt;\u002Fv-card-title\u003E\n        &lt;v-card-text\u003E\n          &lt;v-container\u003E\n            &lt;v-row\u003E\n              &lt;v-col cols=\"12\" sm=\"12\" md=\"12\"\u003E\n                &lt;v-text-field label=\"タイトル\" required\u003E&lt;\u002Fv-text-field\u003E\n              &lt;\u002Fv-col\u003E\n              &lt;v-col cols=\"6\" sm=\"6\" md=\"6\"\u003E\n                &lt;v-chip\n                    class=\"ma-2\"\n                    label\n                \u003E\n                    Start\n                &lt;\u002Fv-chip\u003E\n                &lt;v-time-picker v-model=\"start\" width=\"252\"\u003E&lt;\u002Fv-time-picker\u003E\n              &lt;\u002Fv-col\u003E\n              &lt;v-col cols=\"6\" sm=\"6\" md=\"6\"\u003E\n                &lt;v-chip\n                    class=\"ma-2\"\n                    label\n                \u003E\n                    End\n                &lt;\u002Fv-chip\u003E\n                &lt;v-time-picker v-model=\"end\" width=\"252\"\u003E&lt;\u002Fv-time-picker\u003E\n              &lt;\u002Fv-col\u003E\n            &lt;\u002Fv-row\u003E\n          &lt;\u002Fv-container\u003E\n        &lt;\u002Fv-card-text\u003E\n        &lt;v-card-actions\u003E\n          &lt;v-spacer\u003E&lt;\u002Fv-spacer\u003E\n          &lt;v-btn color=\"blue darken-1\" text @click=\"dialog = false\"\u003EClose&lt;\u002Fv-btn\u003E\n          &lt;v-btn color=\"blue darken-1\" text @click=\"dialog = false\"\u003ESave&lt;\u002Fv-btn\u003E\n        &lt;\u002Fv-card-actions\u003E\n      &lt;\u002Fv-card\u003E\n    &lt;\u002Fv-dialog\u003E\n  &lt;\u002Fv-row\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n        dialog : true,\n        start : null,\n        end : null,\n    })\n  }\n&lt;\u002Fscript\u003E\n  \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eタイムピッカーというものを使っています。見た目は良いですが操作性はハッキリ言って悪すぎると思います（笑）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EではCalendarComponent.vueを修正します。修正箇所はtemplateのみです。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    追加\n    &lt;div id=\"form-modal\"\u003E\n      &lt;create-component ref=\"form\"\u003E&lt;\u002Fcreate-component\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:date=\"showDay\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで画面はこのようになります\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-19-23.45.20-1024x847.png\" alt=\"\" class=\"wp-image-79\" width=\"543\" height=\"449\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E&lt;v-time-picker v-model=&#8221;end&#8221; width=&#8221;252&#8243;&gt;&lt;\u002Fv-time-picker&gt;\u003Cbr \u002F\u003Ewidthは252が最小サイズと判断\u003C\u002Fp\u003E\u003Cp\u003Etimepickerで取れる値は&#8221;01:55&#8243;のような値\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E現状は画面を開いた瞬間にも、dialog : trueなのでこの登録画面が開かれた状態ですので、dayイベントでdialog : trueとするようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EまずはCreateCompoennt.vueのscriptを修正します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n        dialog : false, \u002F\u002F 変更\n        start : null,\n        end : null,\n    }),\n    \u002F\u002F 追加\n    methods:{\n        open(){\n            this.dialog = true;\n        }\n    },\n  }\n&lt;\u002Fscript\u003E\n  \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eカレンダーコンポーネントにdayイベントを追加します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"　追加\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n...\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      \u002F\u002F 追加\n      createEvent(e){\n        console.log(e);\n        this.$refs.form.open();\n      }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで、dayイベントが発火した時に新規登録画面が表示されうようになりましたとさ。\u003C\u002Fp\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E$refsとは&lt;create-component ref=&#8221;form&#8221;&gt;&lt;\u002Fcreate-component&gt;のrefで指定した名称のコンポーネントを操作できる。ここではそのコンポーネントのopenメソッドを呼び出している。\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E一応、コンソールに表示されるようにしてあるので、値を確認してみます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E{date: \"2020-05-14\", time: \"\", year: 2020, month: 5, day: 14, …}\ndate: \"2020-05-14\"\nday: 14\nfuture: true\nhasDay: true\nhasTime: false\nhour: 0\nminute: 0\nmonth: 5\npast: false\npresent: false\ntime: \"\"\nweekday: 4\nyear: 2020\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eしっかりデータが渡されているのがわかります。\u003Cbr \u002F\u003Eというわけでコンポーネントの方にデータを渡します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECreateComponent.vye\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n        dialog : false, \u002F\u002F 変更\n        start : null,\n        end : null,\n        \u002F\u002F追加\n        day : \"\",\n    }),\n    methods:{\n        \u002F\u002F 引数追加\n        open(date){\n            this.dialog = true;\n            this.day = date;\n        }\n    },\n  }\n&lt;\u002Fscript\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003ECalenderComponent.vue\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-20-0.12.47-1024x487.png\" alt=\"\" class=\"wp-image-86\" width=\"778\" height=\"369\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003ECreateComponentのdayが設定されるのがわかります。\u003Cbr \u002F\u003EちなみにこれVueのデバッグツールなのですが、便利なので入れておくといいですよ。\u003C\u002Fp\u003E\n\n\n\u003Ch3\u003E登録処理を行う\u003C\u002Fh3\u003E\n\n\n\u003Cp\u003E本来はLaravel側の処理も書かないといけないので、不完全なコードですが、Vue.jsの勉強の意味も込めて仮登録処理を記載します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003ECalenderComponen.vueを修正します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n     @save=\"saveEvent\"を追加\n    &lt;div id=\"form-modal\"\u003E\n      &lt;create-component ref=\"form\" @save=\"saveEvent\"\u003E&lt;\u002Fcreate-component\u003E\n    &lt;\u002Fdiv\u003E\n    &lt;v-menu bottom right\u003E\n      &lt;template v-slot:activator=\"{ on }\"\u003E\n        &lt;v-btn\n          outlined\n          color=\"grey darken-2\"\n          v-on=\"on\"\n        \u003E\n          &lt;span\u003E{{type}}&lt;\u002Fspan\u003E\n        &lt;\u002Fv-btn\u003E\n      &lt;\u002Ftemplate\u003E\n      &lt;v-list\u003E\n        &lt;v-list-item @click=\"type = 'day'\"\u003E\n          &lt;v-list-item-title\u003EDay&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'week'\"\u003E\n          &lt;v-list-item-title\u003EWeek&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n        &lt;v-list-item @click=\"type = 'month'\"\u003E\n          &lt;v-list-item-title\u003EMonth&lt;\u002Fv-list-item-title\u003E\n        &lt;\u002Fv-list-item\u003E\n      &lt;\u002Fv-list\u003E\n    &lt;\u002Fv-menu\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          @click:date=\"showDay\"\n          @click:day=\"createEvent\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-01`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n        },\n      ],\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n      showDay( {date} ){\n        this.today = date\n        this.type = 'day'\n      },\n      createEvent({date}){\n        this.$refs.form.open(date);\n      },\n      \u002F\u002F ここを追加\n      saveEvent(params){\n        console.log(\"calendarcompoennt.xue\");\n        this.events.push(params);\n        console.log(`保存しました。${params}`)\n      }\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にCreateComponent.vueを修正します\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;v-row justify=\"center\"\u003E\n    &lt;v-dialog v-model=\"dialog\" persistent max-width=\"600px\"\u003E\n      &lt;v-card\u003E\n        &lt;v-card-title\u003E\n          &lt;span class=\"headline\"\u003E新規登録&lt;\u002Fspan\u003E\n        &lt;\u002Fv-card-title\u003E\n        &lt;v-card-text\u003E\n          &lt;v-container\u003E\n            &lt;v-row\u003E\n              &lt;v-col cols=\"12\" sm=\"12\" md=\"12\"\u003E\n                &lt;v-text-field label=\"タイトル\" required v-model=\"name\"\u003E&lt;\u002Fv-text-field\u003E\n              &lt;\u002Fv-col\u003E\n              &lt;v-col cols=\"6\" sm=\"6\" md=\"6\"\u003E\n                &lt;v-chip\n                    class=\"ma-2\"\n                    label\n                \u003E\n                    Start\n                &lt;\u002Fv-chip\u003E\n                &lt;v-time-picker v-model=\"start\" width=\"252\"\u003E&lt;\u002Fv-time-picker\u003E\n              &lt;\u002Fv-col\u003E\n              &lt;v-col cols=\"6\" sm=\"6\" md=\"6\"\u003E\n                &lt;v-chip\n                    class=\"ma-2\"\n                    label\n                \u003E\n                    End\n                &lt;\u002Fv-chip\u003E\n                &lt;v-time-picker v-model=\"end\" width=\"252\"\u003E&lt;\u002Fv-time-picker\u003E\n              &lt;\u002Fv-col\u003E\n            &lt;\u002Fv-row\u003E\n          &lt;\u002Fv-container\u003E\n        &lt;\u002Fv-card-text\u003E\n        &lt;v-card-actions\u003E\n          &lt;v-spacer\u003E&lt;\u002Fv-spacer\u003E\n          &lt;v-btn color=\"blue darken-1\" text @click=\"dialog = false\"\u003EClose&lt;\u002Fv-btn\u003E\n          &lt;v-btn color=\"blue darken-1\" text @click=\"save\"\u003ESave&lt;\u002Fv-btn\u003E  ここsaveに変更\n        &lt;\u002Fv-card-actions\u003E\n      &lt;\u002Fv-card\u003E\n    &lt;\u002Fv-dialog\u003E\n  &lt;\u002Fv-row\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n        dialog : false,\n        start : null,\n        end : null,\n        day : \"\",\n        \u002F\u002F追加\n        name : \"\",\n    }),\n    methods:{\n        open(date){\n            this.dialog = true;\n            this.day = date;\n            \u002F\u002F データの初期化処理を行う\n            this.start = null;\n            this.end = null;\n            this.name = \"\";\n        },\n        save(){\n            \u002F\u002F 追加\n            if( !this.isNotNull(this.start,this.end) ){\n                console.log(\"nullですw\");\n                return ;\n            }\n            if( !this.compareDate(this.start,this.end) ){\n                console.log(\"dame\");\n                return;\n            }\n            const params = {\n                name : this.name,\n                start : this.day + ' ' + this.start,\n                end : this.day + ' ' + this.end\n            }\n            console.log(params);\n            \u002F\u002F 子→親へ通知する\n            this.$emit('save',params);\n        },\n        \u002F\u002F 以下を追加\n        isNotNull(start,end){\n            return start &amp;&amp; end;\n        },\n        compareDate(start,end){\n            return start &lt; end;\n        },\n    },\n  }\n&lt;\u002Fscript\u003E\n  \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E少し長くなりましたがまとめるために全文載せました。\u003Cbr \u002F\u003Eこれで一時的に新規保存ができるようになりました。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-20-8.43.16-1024x740.png\" alt=\"\" class=\"wp-image-89\" width=\"606\" height=\"438\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cblockquote class=\"wp-block-quote\"\u003E\u003Cp\u003E@save=&#8221;saveEvent&#8221;で子から通知を受け取るkeyを設定します\u003C\u002Fp\u003E\u003Cp\u003Ethis.$emit(&#8216;save&#8217;,params);で子から親に通知します。\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\n\n\u003Cp\u003E作ってて思ったが、これくらいならわざわざLaravelを用意する必要がなくて、ローカルストレージでも十分でしたね。\u003C\u002Fp\u003E\n","\u003Cp\u003E前回までで静的なカレンダーの表示ができました。あらかじめ登録しておいたイベントしか表示できないのでは、カレンダーアプリとしては成立しませんが、かといってデータの登録と読み込みはサーバーとの通信が必要そうですね。 この記事&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep2\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP2\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F57","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=57","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F57\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=57","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=57","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=57","https:\u002F\u002Fvolkruss.com\u002F?p=13","vue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep1\u002F","Vue.jsとLaravelでカレンダーアプリを作成する EP1","\n\u003Cp\u003EVue.jsとLaravelを使ってカレンダーアプリを作成します。\u003Cbr \u002F\u003Eちなみに私はPHPはそこまで詳しくないですが、Laravelの力で隠蔽しています。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eこの記事でやること\u003C\u002Fh2\u003E\n\n\n\u003Cul\u003E\u003Cli\u003Eプロジェクトの作成\u003C\u002Fli\u003E\u003Cli\u003EVueの使用\u003C\u002Fli\u003E\u003Cli\u003EVuetifyのカレンダーの使用\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\n\n\u003Cp\u003E今回はVueとLaravelの基本がわかっている人向けです。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E開発環境\u003C\u002Ftd\u003E\u003Ctd\u003EHomestead\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003ELaravel Version\u003C\u002Ftd\u003E\u003Ctd\u003ELaravel Framework 7.11.0\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003Enpm Version\u003C\u002Ftd\u003E\u003Ctd\u003E6.7.0\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003Cfigcaption\u003E開発環境情報\u003C\u002Ffigcaption\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eそういえば久しぶりにLaravelに触ってみたが、Vueがデフォルトで使えない状態？前はサンプルのコンポーネントが入っていたと思ったが・・・\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Eプロジェクトの作成からVueの使用まで\u003C\u002Fh2\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ecomposer create-project --prefer-dist laravel\u002Flaravel CalenderApp\ncd CalenderApp\nnpm install\nnpm install -D vue\nnpm run dev\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eresources &gt; js に componentsフォルダを作成する。Sample.vueを作成する。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n    &lt;div\u003E\n        &lt;h1\u003ESample Component&lt;\u002Fh1\u003E\n        &lt;ul\u003E\n            &lt;li\u003Ecalender&lt;\u002Fli\u003E\n            &lt;li\u003EApp&lt;\u002Fli\u003E\n            &lt;li\u003Ecalender&lt;\u002Fli\u003E\n        &lt;\u002Ful\u003E\n    &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eapp.jsを修正する\u003C\u002Fp\u003E\n\n\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E\nrequire('.\u002Fbootstrap');\nwindow.Vue = require('vue');\nVue.component('sample-component',require('.\u002Fcomponents\u002FSample.vue').default);\nconst app = new Vue({\n    el: '#app',\n});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ewelcome.blade.phpを修正する\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;!DOCTYPE html\u003E\n&lt;html lang=\"{{ str_replace('_', '-', app()-\u003EgetLocale()) }}\"\u003E\n    &lt;head\u003E\n        &lt;meta charset=\"utf-8\"\u003E\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003E\n        &lt;title\u003ELaravel&lt;\u002Ftitle\u003E\n    &lt;\u002Fhead\u003E\n    &lt;body\u003E\n        &lt;div id=\"app\"\u003E\n            &lt;sample-component\u003E&lt;\u002Fexample-component\u003E\n        &lt;\u002Fdiv\u003E\n        &lt;div\u003E\n            @if (Route::has('login'))\n                &lt;div class=\"top-right links\"\u003E\n                    @auth\n                        &lt;a href=\"{{ url('\u002Fhome') }}\"\u003EHome&lt;\u002Fa\u003E\n                    @else\n                        &lt;a href=\"{{ route('login') }}\"\u003ELogin&lt;\u002Fa\u003E\n                        @if (Route::has('register'))\n                            &lt;a href=\"{{ route('register') }}\"\u003ERegister&lt;\u002Fa\u003E\n                        @endif\n                    @endauth\n                &lt;\u002Fdiv\u003E\n            @endif\n        &lt;\u002Fdiv\u003E\n    &lt;script src=\"{{ mix('\u002Fjs\u002Fapp.js') }}\"\u003E&lt;\u002Fscript\u003E\n    &lt;\u002Fbody\u003E\n&lt;\u002Fhtml\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003EここまでやるとトップページにSample.Vueの内容が表示されています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-18-9.05.55.png\" alt=\"\" class=\"wp-image-44\" width=\"429\" height=\"216\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003EこれでLaravelとVueが連携できたことが確認できたので、早速作り込んでいきます。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003E必要なパッケージをインストールする\u003C\u002Fh2\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E-- vuexのインストール\nnpm install vuex --save\n-- Vuetifyのインストール\nnpm install vuetify --save\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eapp.jsを修正\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Erequire('.\u002Fbootstrap');\nwindow.Vue = require('vue');\nimport Vuetify from 'vuetify';\nimport 'vuetify\u002Fdist\u002Fvuetify.min.css'\nVue.use(Vuetify)\nVue.component('sample-component',require('.\u002Fcomponents\u002FSample.vue').default);\nVue.component('calender-component', require('.\u002Fcomponents\u002FCalenderComponent.vue').default);\nconst app = new Vue({\n    el: '#app',\n    vuetify: new Vuetify({\n    }),\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Enpm run devしてエラーが出ないことを確認します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eあと、webpack.mix.jsを修正してソースマップを有効にします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Emix.js('resources\u002Fjs\u002Fapp.js', 'public\u002Fjs')\n    .sass('resources\u002Fsass\u002Fapp.scss', 'public\u002Fcss').sourceMaps();\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Ejs &gt; conponents フォルダにCalenderComponent.vueを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E&lt;template\u003E\n  &lt;div\u003E\n    &lt;v-sheet height=\"500\"\u003E\n      &lt;v-calendar\n          ref=\"calendar\"\n          locale=\"ja-jp\"\n          :type=\"type\"\n          :now=\"today\"\n          :value=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n      \u003E&lt;\u002Fv-calendar\u003E\n    &lt;\u002Fv-sheet\u003E\n  &lt;\u002Fdiv\u003E\n&lt;\u002Ftemplate\u003E\n&lt;script\u003E\n  export default {\n    data: () =\u003E ({\n    today: `2020-05-19`,\n    type:'month',\n    datas:&#91;],\n    events: &#91;\n        {\n          name: 'あたりまえ体操をする',\n          start: '2020-05-18',\n          end: '2020-05-1',\n        },\n        {\n          name: 'Meeting',\n          start: '2020-05-1 09:00',\n          end: '2020-05-1 10:00',\n        },\n      ],\n    }),\n    computed:{\n    },\n    mounted () {\n    },\n    methods:{\n    }\n  }\n&lt;\u002Fscript\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にwelcome.balde.appを修正します\u003Cbr \u002F\u003Evuetifyを使う時はv-appで囲う必要があります。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003E        &lt;div id=\"app\"\u003E\n            &lt;v-app\u003E\n                &lt;calender-component\u003E&lt;\u002Fcalender-component\u003E\n            &lt;v-app\u003E\n        &lt;\u002Fdiv\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eここまでやると、もうカレンダーの表示が完了しています。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-image size-large is-resized\"\u003E\u003Cimg loading=\"lazy\" src=\"https:\u002F\u002Fvolkruss.com\u002Fwp-content\u002Fuploads\u002F2020\u002F05\u002Fスクリーンショット-2020-05-19-19.29.52-1024x691.png\" alt=\"\" class=\"wp-image-67\" width=\"494\" height=\"333\"\u002F\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Eメモ\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003Erefは後々使用する。\u003C\u002Fp\u003E\n\u003Cp\u003Etype:&#8217;month&#8217;,で月間カレンダーを表示\u003C\u002Fp\u003E\n\u003Cdiv\u003E\n\u003Cdiv\u003Eeventsはタイトルと期間を入れておくことでカレンダーに表示できる\u003C\u002Fdiv\u003E\n\u003Cdiv\u003E&nbsp;\u003C\u002Fdiv\u003E\n\u003Cdiv\u003Etodayとvalueは、必須設定する。valueの代わりにv-model=&#8221;today&#8221;でもOK\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv\u003E&nbsp;\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E\u003Cbr \u002F\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003EVue.jsとLaravelを使ってカレンダーアプリを作成します。ちなみに私はPHPはそこまで詳しくないですが、Laravelの力で隠蔽しています。 この記事でやること プロジェクトの作成 Vueの使用 Vuetifyの&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F21\u002Fvue-js%e3%81%a8laravel%e3%81%a7%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%80%e3%83%bc%e3%82%a2%e3%83%97%e3%83%aa%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b-ep1\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EVue.jsとLaravelでカレンダーアプリを作成する EP1\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F13","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=13","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F13\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=13","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=13","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=13","https:\u002F\u002Fvolkruss.com\u002F?p=7","canvas%e3%81%a7tiled%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%9frpg%e3%82%b2%e3%83%bc%e3%83%a0","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F17\u002Fcanvas%e3%81%a7tiled%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%9frpg%e3%82%b2%e3%83%bc%e3%83%a0\u002F","CanvasでTiledを利用したRPGゲーム","\n\u003Cp\u003Eサンプル\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fvolkruss.com\u002Frpggame01\u002Ftilerelad\u002F\"\u003Ehttps:\u002F\u002Fvolkruss.com\u002Frpggame01\u002Ftilerelad\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"TiledとJavaScriptとCanvasでRPGゲームの基本を作ってみる EP1\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002F2hWbAbmx_Bw?start=10&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n\n\n\u003Cp\u003Emelon.jsならTiledをサポートしているとのことだったので、早速試したがなんせ学習コストがあったのでやめた。\u003Cbr \u002F\u003ETiledを使ったブラウザゲームって大変なのだろうか？\u003Cbr \u002F\u003Eとりあえずjsonファイルなのでなんとかなるだろうという意気込みで作ってなんとかなった。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eしかし、ゲームを作るとなるとタイルマップ が使えるというメリットよりも、コライダーやらアニメーションやらの設定が大変というデメリットのほうが大きいので、こういう時は無理せずUnityやらを使うのが正しい判断なんだなと改めて思った。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003C\u002Fp\u003E\n","\u003Cp\u003Eサンプルhttps:\u002F\u002Fvolkruss.com\u002Frpggame01\u002Ftilerelad\u002F melon.jsならTiledをサポートしているとのことだったので、早速試したがなんせ学習コストがあったのでやめた。Tiledを&hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F17\u002Fcanvas%e3%81%a7tiled%e3%82%92%e5%88%a9%e7%94%a8%e3%81%97%e3%81%9frpg%e3%82%b2%e3%83%bc%e3%83%a0\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003ECanvasでTiledを利用したRPGゲーム\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",17,49,"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F7","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=7","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F7\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=7","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=7","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=7","http:\u002F\u002Fvolkruss.com\u002F?p=1","hello-world","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2020\u002F05\u002F15\u002Fhello-world\u002F","Hello world!","\n\u003Cp\u003EWordPress へようこそ。こちらは最初の投稿です。編集または削除し、コンテンツ作成を始めてください。\u003C\u002Fp\u003E\n","\u003Cp\u003EWordPress へようこそ。こちらは最初の投稿です。編集または削除し、コンテンツ作成を始めてください。\u003C\u002Fp\u003E\n","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1\u002Frevisions","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1","gulp")));