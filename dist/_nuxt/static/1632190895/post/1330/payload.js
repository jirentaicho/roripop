__NUXT_JSONP__("/post/1330", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){return {data:[{post:{id:1330,date:l,date_gmt:m,guid:{rendered:"https:\u002F\u002Fvolkruss.com\u002F?p=1330"},modified:l,modified_gmt:m,slug:"docker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b",status:"publish",type:"post",link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F24\u002Fdocker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b\u002F",title:{rendered:"dockerでSphinxとGulpの自動ビルド環境を作る"},content:{rendered:"\n\u003Cp\u003E今回は実践編ということで、SphinxとGulpの実行環境を作ってみます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Egulpを使って、sphinxのrstファイルに変更を入れて保存する度に、sphinxのmake htmlコマンドを自動的に行うようにします。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E参考サイトです。\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fmomijiame.tumblr.com\u002Fpost\u002F105699889996\u002F%E3%82%BF%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%8A%E3%83%BC-gulp-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-sphinx-%E3%81%AE%E5%9F%B7%E7%AD%86%E4%BD%9C%E6%A5%AD%E3%82%92%E6%8D%97%E3%82%89%E3%81%9B%E3%82%8B\" data-type=\"URL\" data-id=\"https:\u002F\u002Fmomijiame.tumblr.com\u002Fpost\u002F105699889996\u002F%E3%82%BF%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%B3%E3%83%8A%E3%83%BC-gulp-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-sphinx-%E3%81%AE%E5%9F%B7%E7%AD%86%E4%BD%9C%E6%A5%AD%E3%82%92%E6%8D%97%E3%82%89%E3%81%9B%E3%82%8B\" target=\"_blank\"\u003Eタスクランナー Gulp を使って Sphinx の執筆作業を捗らせる\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fqiita.com\u002Freflet\u002Fitems\u002F4b3f91661a54ec70a7dc\" data-type=\"URL\" data-id=\"https:\u002F\u002Fqiita.com\u002Freflet\u002Fitems\u002F4b3f91661a54ec70a7dc\" target=\"_blank\"\u003Edockerで簡易にpython3の環境を作ってみる\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca rel=\"noreferrer noopener\" href=\"https:\u002F\u002Fgenzouw.com\u002Fentry\u002F2021\u002F04\u002F28\u002F215832\u002F2563\u002F\" data-type=\"URL\" data-id=\"https:\u002F\u002Fgenzouw.com\u002Fentry\u002F2021\u002F04\u002F28\u002F215832\u002F2563\u002F\" target=\"_blank\"\u003EDocker Compose で初回起動時のみ yarn install を実行させる方法\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\u003Ca href=\"https:\u002F\u002Fqiita.com\u002Fritukiii\u002Fitems\u002F921521f634e339550861\" data-type=\"URL\" data-id=\"https:\u002F\u002Fqiita.com\u002Fritukiii\u002Fitems\u002F921521f634e339550861\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ELocal gulp not found が出た時の対処法\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Esphinxはpython製のドキュメント作成ツールです。ドキュメントはhtml形式になっていて、rstファイルという形式のファイルで作成します。このrstファイルは正直微妙です（笑）\u003C\u002Fp\u003E\n\n\n\u003Cp\u003EGulpは、タスクランナーと呼ばれて、色々な処理を自動化できます。npmを使ってインストールします。sphinxのビルド作業を自動化してやろうという狙いです。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003EDockerfileの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003EまずはDockerImageを用意するので、Dockerfileを作成します。\u003Cbr \u002F\u003E今回はnodeのイメージにpythonとpipとshinxをインストールします。\u003Cbr \u002F\u003Eあとはnpmで、gulpとbrowser-syncをインストールします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003EFROM node\n# FROM node\n# python,sphinxなどのインストール\nRUN apt-get update\nRUN apt-get install python3\nRUN apt-get install python3-pip -y\nRUN pip3 install --upgrade pip\nRUN pip3 install -U sphinx\n# 作業場所(ディレクトリ)の指定\nWORKDIR \u002Fusr\u002Fsrc\u002Fapp\n# gulpなどをインストール\nRUN npm i -g gulp\nRUN npm i browser-sync\nRUN npm link gulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Egulpはグローバルインストールして、さらにlinkをやってますが、\u003Cbr \u002F\u003E別途なぜこうするのか調べます。（色々試してこうなりました。。。）\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Edocker-compose.yamlの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E今回利用するコンテナは一つですが、それでもportの指定や、共有フォルダの指定などがわかりやすいメリットがあるので、docker-compose.yamlを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E3000ポートを利用するので、同じく3000にポートマッピングしておきます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eホストのappフォルダと、コンテナのusr\u002Fsrc\u002Fapp\u002Fworkが共有されているので、ここにgulpfile.jsを作成します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Eversion: '3'\nservices:\n  gulp:\n    container_name: jirengulp\n    build:\n      context: .\u002F\n      dockerfile: .\u002FDockerfile\n    ports:\n    - 3000:3000\n    volumes:\n      - .\u002Fapp\u002F:\u002Fusr\u002Fsrc\u002Fapp\u002Fwork\n    tty: true\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Egulpfile.jsの作成\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E基本的には参考サイトを見本にして\u003Cs\u003Eパクって\u003C\u002Fs\u003E書きました。\u003Cbr \u002F\u003E書き方はgulp4に変えたり若干修正をしています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコメントにも書いてますが、結構パワー系な記載になっていると思います。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Econst gulp = require(\"gulp\");\nconst browserSync = require(\"browser-sync\");\nconst exec = require('child_process').exec;\n\u002F**\n * browserSyncを最初に初期化しておきます。\n *\u002F\ngulp.task(\"bs\", () =&gt; {\n  browserSync.init({\n    server:{\n      baseDir:&#91;\"build\u002Fhtml\"]\n    }\n  })\n})\n\u002F**\n * browserSyncを利用して、画面を再描画します\n * build→reloadの順番で実行する想定です。\n *\u002F\ngulp.task('reload', () =&gt; {\n  return browserSync.reload();\n})\n\u002F**\n * sphinxの make html を実行します。\n *\u002F\ngulp.task('build', (callback) =&gt; {\n  exec(\"make html\", (err,stdout,stderr) =&gt; {\n    console.log(stdout)\n    callback(err)\n  })\n})\n\u002F**\n * watchが走ってる状態でreloadが呼ばれる\n * →watchが消えたので、ここでもwatchを実行しています。なんか間違ってそうだけど動いてます。\n *\u002F\ngulp.task('watch', () =&gt; {\n  gulp.watch(\"source\u002F**\u002F*.rst\", gulp.series('build',gulp.parallel('reload','watch')))\n})\n\u002F**\n * 最初に呼ばれる処理です。\n * seriesは直列処理\n * parallelは並列処理\n *\u002F\ngulp.task('default', gulp.series('build',gulp.parallel('bs','watch')))\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003Eコンテナを起動する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003E最初にビルドします。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker-compose build --no-cache\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eできたらコンテナを立ち上げます\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker-compose up -d\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003E次にコンテナに入ります\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Edocker exec -it jirengulp bash\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Ch2\u003ESphinxの雛形を作成する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Eworkフォルダに予めsphinxのクイックスタートファイルとかを設定しておけば、不要な作業だと思うのですが、自分のパソコンにはsphinxが入ってないので、コンテナから最初に作成を行います。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003Eコンテナのworkフォルダに移動したら以下コマンドを実施。聞かれた適当に答えておきます。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Ecd work\nsphinx-quickstart\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれで雛形ファイル群が出来上がります。\u003C\u002Fp\u003E\n\n\n\u003Ch2\u003Egulpを起動する\u003C\u002Fh2\u003E\n\n\n\u003Cp\u003Egulpコマンドを起動すると、watch処理にて、sourceフォルダの*.rstファイルの更新を監視します。\u003Cbr \u002F\u003E今回の場合は、index.rstを適当に変更すると、それが反映されてブラウザも勝手にリロードされます。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E以下のコマンドのでgulpを実行します。\u003C\u002Fp\u003E\n\n\n\u003Cpre class=\"wp-block-code\"\u003E\u003Ccode\u003Egulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\n\u003Cp\u003Eこれでindex.rstを適当に修正すると、ブラウザがリロードされて修正が即時反映されるようになっています。\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E今回利用したファイルはgithubに上げてます\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fsphinxgulp\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fjirentaicho\u002Fsphinxgulp\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\n\u003Cp\u003E勉強になった動画を共有します。\u003C\u002Fp\u003E\n\n\n\u003Cfigure class=\"wp-block-embed is-type-rich is-provider-埋め込みハンドラー wp-block-embed-埋め込みハンドラー wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003E\u003Cdiv class=\"wp-block-embed__wrapper\"\u003E\n\u003Ciframe loading=\"lazy\" title=\"【Docker超入門 #6】Dockerfileを作成しよう\" width=\"750\" height=\"422\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FUsUUp7hJClk?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003E\u003C\u002Fiframe\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\n",protected:j},excerpt:{rendered:"\u003Cp\u003E今回は実践編ということで、SphinxとGulpの実行環境を作ってみます。 gulpを使って、sphinxのrstファイルに変更を入れて保存する度に、sphinxのmake htmlコマンドを自動的に行うようにします。 &hellip; \u003Ca class=\"more-link\" href=\"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002F2021\u002F06\u002F24\u002Fdocker%e3%81%a7sphinx%e3%81%a8gulp%e3%81%ae%e5%ae%9f%e8%a1%8c%e7%92%b0%e5%a2%83%e3%82%92%e4%bd%9c%e3%82%8b\u002F\"\u003E続きを読む \u003Cspan class=\"screen-reader-text\"\u003EdockerでSphinxとGulpの自動ビルド環境を作る\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n",protected:j},author:n,featured_media:b,comment_status:o,ping_status:o,sticky:j,template:c,format:"standard",meta:[],categories:[k],tags:[21,32,46],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1330"}],collection:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts"}],about:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftypes\u002Fpost"}],author:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fusers\u002F1"}],replies:[{embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcomments?post=1330"}],"version-history":[{count:b,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts\u002F1330\u002Frevisions"}],"wp:attachment":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fmedia?parent=1330"}],"wp:term":[{taxonomy:d,embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories?post=1330"},{taxonomy:"post_tag",embeddable:a,href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftags?post=1330"}],curies:[{name:e,href:f,templated:a}]}}}],fetch:{"0":{categories:{categories:[{id:2,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fblender\u002F",name:"Blender",slug:"blender",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F2"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=2"}],curies:[{name:e,href:f,templated:a}]}},{id:k,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fdocker\u002F",name:"Docker",slug:"docker",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F3"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=3"}],curies:[{name:e,href:f,templated:a}]}},{id:i,count:p,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjava\u002F",name:"Java",slug:"java",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F4"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=4"}],curies:[{name:e,href:f,templated:a}]}},{id:q,count:i,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fjavascript\u002F",name:"JavaScript",slug:"javascript",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F5"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=5"}],curies:[{name:e,href:f,templated:a}]}},{id:p,count:40,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funity\u002F",name:"Unity",slug:"unity",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F6"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=6"}],curies:[{name:e,href:f,templated:a}]}},{id:7,count:r,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fvue-js\u002F",name:"Vue.js",slug:"vue-js",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F7"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=7"}],curies:[{name:e,href:f,templated:a}]}},{id:8,count:q,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Fwordpress\u002F",name:"WordPress",slug:"wordpress",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F8"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=8"}],curies:[{name:e,href:f,templated:a}]}},{id:r,count:k,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002F%e3%81%9d%e3%81%ae%e4%bb%96\u002F",name:"その他",slug:"%e3%81%9d%e3%81%ae%e4%bb%96",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F9"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=9"}],curies:[{name:e,href:f,templated:a}]}},{id:n,count:b,description:c,link:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fcategory\u002Funcategorized\u002F",name:"未分類",slug:"uncategorized",taxonomy:d,parent:b,meta:[],_links:{self:[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories\u002F1"}],collection:[{href:g}],about:[{href:h}],"wp:post_type":[{href:"https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fposts?categories=1"}],curies:[{name:e,href:f,templated:a}]}}]}}},mutations:void 0}}(true,0,"","category","wp","https:\u002F\u002Fapi.w.org\u002F{rel}","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Fcategories","https:\u002F\u002Fwww.volkruss.com\u002Fnuxt\u002Fapi\u002Fwp-json\u002Fwp\u002Fv2\u002Ftaxonomies\u002Fcategory",4,false,3,"2021-06-24T23:38:28","2021-06-24T14:38:28",1,"open",6,5,9)));